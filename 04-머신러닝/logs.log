2023-04-07 09:18:06,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 09:18:06,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 09:18:06,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 09:18:06,944:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 09:18:08,489:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-07 09:18:30,330:INFO:PyCaret ClassificationExperiment
2023-04-07 09:18:30,330:INFO:Logging name: clf-default-name
2023-04-07 09:18:30,330:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 09:18:30,330:INFO:version 3.0.0
2023-04-07 09:18:30,330:INFO:Initializing setup()
2023-04-07 09:18:30,331:INFO:self.USI: 6013
2023-04-07 09:18:30,331:INFO:self._variable_keys: {'USI', 'pipeline', 'gpu_n_jobs_param', 'seed', 'data', 'X_test', 'memory', 'fold_shuffle_param', '_ml_usecase', '_available_plots', 'fix_imbalance', 'idx', 'exp_id', 'X', 'html_param', 'fold_generator', 'fold_groups_param', 'y_train', 'X_train', 'is_multiclass', 'n_jobs_param', 'y', 'y_test', 'target_param', 'log_plots_param', 'logging_param', 'gpu_param', 'exp_name_log'}
2023-04-07 09:18:30,331:INFO:Checking environment
2023-04-07 09:18:30,331:INFO:python_version: 3.8.16
2023-04-07 09:18:30,331:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 09:18:30,331:INFO:machine: AMD64
2023-04-07 09:18:30,331:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 09:18:30,334:INFO:Memory: svmem(total=8395538432, available=2686038016, percent=68.0, used=5709500416, free=2686038016)
2023-04-07 09:18:30,334:INFO:Physical Core: 4
2023-04-07 09:18:30,335:INFO:Logical Core: 8
2023-04-07 09:18:30,335:INFO:Checking libraries
2023-04-07 09:18:30,335:INFO:System:
2023-04-07 09:18:30,335:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 09:18:30,335:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 09:18:30,335:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 09:18:30,335:INFO:PyCaret required dependencies:
2023-04-07 09:18:30,335:INFO:                 pip: 23.0.1
2023-04-07 09:18:30,335:INFO:          setuptools: 65.6.3
2023-04-07 09:18:30,335:INFO:             pycaret: 3.0.0
2023-04-07 09:18:30,335:INFO:             IPython: 8.11.0
2023-04-07 09:18:30,335:INFO:          ipywidgets: 8.0.4
2023-04-07 09:18:30,335:INFO:                tqdm: 4.64.1
2023-04-07 09:18:30,335:INFO:               numpy: 1.23.5
2023-04-07 09:18:30,335:INFO:              pandas: 1.5.3
2023-04-07 09:18:30,336:INFO:              jinja2: 3.1.2
2023-04-07 09:18:30,337:INFO:               scipy: 1.9.3
2023-04-07 09:18:30,337:INFO:              joblib: 1.2.0
2023-04-07 09:18:30,337:INFO:             sklearn: 1.2.2
2023-04-07 09:18:30,337:INFO:                pyod: 1.0.9
2023-04-07 09:18:30,337:INFO:            imblearn: 0.10.1
2023-04-07 09:18:30,337:INFO:   category_encoders: 2.6.0
2023-04-07 09:18:30,337:INFO:            lightgbm: 3.3.5
2023-04-07 09:18:30,337:INFO:               numba: 0.56.4
2023-04-07 09:18:30,337:INFO:            requests: 2.28.2
2023-04-07 09:18:30,337:INFO:          matplotlib: 3.6.3
2023-04-07 09:18:30,337:INFO:          scikitplot: 0.3.7
2023-04-07 09:18:30,337:INFO:         yellowbrick: 1.5
2023-04-07 09:18:30,337:INFO:              plotly: 5.14.1
2023-04-07 09:18:30,337:INFO:             kaleido: 0.2.1
2023-04-07 09:18:30,337:INFO:         statsmodels: 0.13.5
2023-04-07 09:18:30,337:INFO:              sktime: 0.17.0
2023-04-07 09:18:30,337:INFO:               tbats: 1.1.2
2023-04-07 09:18:30,337:INFO:            pmdarima: 2.0.3
2023-04-07 09:18:30,337:INFO:              psutil: 5.9.4
2023-04-07 09:18:30,337:INFO:PyCaret optional dependencies:
2023-04-07 09:18:30,360:INFO:                shap: 0.41.0
2023-04-07 09:18:30,360:INFO:           interpret: Not installed
2023-04-07 09:18:30,360:INFO:                umap: Not installed
2023-04-07 09:18:30,360:INFO:    pandas_profiling: 4.1.0
2023-04-07 09:18:30,360:INFO:  explainerdashboard: Not installed
2023-04-07 09:18:30,360:INFO:             autoviz: Not installed
2023-04-07 09:18:30,360:INFO:           fairlearn: Not installed
2023-04-07 09:18:30,361:INFO:             xgboost: Not installed
2023-04-07 09:18:30,361:INFO:            catboost: Not installed
2023-04-07 09:18:30,361:INFO:              kmodes: Not installed
2023-04-07 09:18:30,361:INFO:             mlxtend: Not installed
2023-04-07 09:18:30,361:INFO:       statsforecast: Not installed
2023-04-07 09:18:30,361:INFO:        tune_sklearn: Not installed
2023-04-07 09:18:30,361:INFO:                 ray: Not installed
2023-04-07 09:18:30,361:INFO:            hyperopt: Not installed
2023-04-07 09:18:30,361:INFO:              optuna: Not installed
2023-04-07 09:18:30,361:INFO:               skopt: Not installed
2023-04-07 09:18:30,361:INFO:              mlflow: Not installed
2023-04-07 09:18:30,361:INFO:              gradio: Not installed
2023-04-07 09:18:30,361:INFO:             fastapi: Not installed
2023-04-07 09:18:30,361:INFO:             uvicorn: Not installed
2023-04-07 09:18:30,361:INFO:              m2cgen: Not installed
2023-04-07 09:18:30,361:INFO:           evidently: Not installed
2023-04-07 09:18:30,361:INFO:               fugue: Not installed
2023-04-07 09:18:30,361:INFO:           streamlit: 1.20.0
2023-04-07 09:18:30,361:INFO:             prophet: Not installed
2023-04-07 09:18:30,362:INFO:None
2023-04-07 09:18:30,362:INFO:Set up data.
2023-04-07 09:18:30,379:INFO:Set up train/test split.
2023-04-07 09:18:30,390:INFO:Set up index.
2023-04-07 09:18:30,390:INFO:Set up folding strategy.
2023-04-07 09:18:30,391:INFO:Assigning column types.
2023-04-07 09:18:30,396:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 09:18:30,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:18:30,476:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:18:30,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:30,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:30,642:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:18:30,643:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:18:30,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:30,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:30,687:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 09:18:30,753:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:18:30,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:30,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:30,864:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:18:30,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:30,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:30,912:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 09:18:31,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:31,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:31,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:31,141:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:31,145:INFO:Preparing preprocessing pipeline...
2023-04-07 09:18:31,147:INFO:Set up simple imputation.
2023-04-07 09:18:31,153:INFO:Set up encoding of ordinal features.
2023-04-07 09:18:31,158:INFO:Set up encoding of categorical features.
2023-04-07 09:18:31,359:INFO:Finished creating preprocessing pipeline.
2023-04-07 09:18:31,407:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 09:18:31,407:INFO:Creating final display dataframe.
2023-04-07 09:18:31,938:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 29)
5   Transformed train set shape         (623, 29)
6    Transformed test set shape         (268, 29)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 7
10     Rows with missing values             79.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              6013
2023-04-07 09:18:32,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:32,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:32,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:32,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:32,205:INFO:setup() successfully completed in 1.88s...............
2023-04-07 09:18:53,386:INFO:PyCaret ClassificationExperiment
2023-04-07 09:18:53,386:INFO:Logging name: clf-default-name
2023-04-07 09:18:53,386:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 09:18:53,387:INFO:version 3.0.0
2023-04-07 09:18:53,387:INFO:Initializing setup()
2023-04-07 09:18:53,387:INFO:self.USI: 53b9
2023-04-07 09:18:53,387:INFO:self._variable_keys: {'USI', 'pipeline', 'gpu_n_jobs_param', 'seed', 'data', 'X_test', 'memory', 'fold_shuffle_param', '_ml_usecase', '_available_plots', 'fix_imbalance', 'idx', 'exp_id', 'X', 'html_param', 'fold_generator', 'fold_groups_param', 'y_train', 'X_train', 'is_multiclass', 'n_jobs_param', 'y', 'y_test', 'target_param', 'log_plots_param', 'logging_param', 'gpu_param', 'exp_name_log'}
2023-04-07 09:18:53,387:INFO:Checking environment
2023-04-07 09:18:53,387:INFO:python_version: 3.8.16
2023-04-07 09:18:53,387:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 09:18:53,387:INFO:machine: AMD64
2023-04-07 09:18:53,387:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 09:18:53,390:INFO:Memory: svmem(total=8395538432, available=2697748480, percent=67.9, used=5697789952, free=2697748480)
2023-04-07 09:18:53,390:INFO:Physical Core: 4
2023-04-07 09:18:53,390:INFO:Logical Core: 8
2023-04-07 09:18:53,390:INFO:Checking libraries
2023-04-07 09:18:53,390:INFO:System:
2023-04-07 09:18:53,391:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 09:18:53,391:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 09:18:53,391:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 09:18:53,391:INFO:PyCaret required dependencies:
2023-04-07 09:18:53,391:INFO:                 pip: 23.0.1
2023-04-07 09:18:53,391:INFO:          setuptools: 65.6.3
2023-04-07 09:18:53,391:INFO:             pycaret: 3.0.0
2023-04-07 09:18:53,391:INFO:             IPython: 8.11.0
2023-04-07 09:18:53,391:INFO:          ipywidgets: 8.0.4
2023-04-07 09:18:53,391:INFO:                tqdm: 4.64.1
2023-04-07 09:18:53,392:INFO:               numpy: 1.23.5
2023-04-07 09:18:53,392:INFO:              pandas: 1.5.3
2023-04-07 09:18:53,392:INFO:              jinja2: 3.1.2
2023-04-07 09:18:53,392:INFO:               scipy: 1.9.3
2023-04-07 09:18:53,392:INFO:              joblib: 1.2.0
2023-04-07 09:18:53,392:INFO:             sklearn: 1.2.2
2023-04-07 09:18:53,392:INFO:                pyod: 1.0.9
2023-04-07 09:18:53,392:INFO:            imblearn: 0.10.1
2023-04-07 09:18:53,392:INFO:   category_encoders: 2.6.0
2023-04-07 09:18:53,392:INFO:            lightgbm: 3.3.5
2023-04-07 09:18:53,392:INFO:               numba: 0.56.4
2023-04-07 09:18:53,392:INFO:            requests: 2.28.2
2023-04-07 09:18:53,392:INFO:          matplotlib: 3.6.3
2023-04-07 09:18:53,393:INFO:          scikitplot: 0.3.7
2023-04-07 09:18:53,393:INFO:         yellowbrick: 1.5
2023-04-07 09:18:53,393:INFO:              plotly: 5.14.1
2023-04-07 09:18:53,393:INFO:             kaleido: 0.2.1
2023-04-07 09:18:53,393:INFO:         statsmodels: 0.13.5
2023-04-07 09:18:53,393:INFO:              sktime: 0.17.0
2023-04-07 09:18:53,393:INFO:               tbats: 1.1.2
2023-04-07 09:18:53,393:INFO:            pmdarima: 2.0.3
2023-04-07 09:18:53,393:INFO:              psutil: 5.9.4
2023-04-07 09:18:53,393:INFO:PyCaret optional dependencies:
2023-04-07 09:18:53,393:INFO:                shap: 0.41.0
2023-04-07 09:18:53,393:INFO:           interpret: Not installed
2023-04-07 09:18:53,394:INFO:                umap: Not installed
2023-04-07 09:18:53,394:INFO:    pandas_profiling: 4.1.0
2023-04-07 09:18:53,394:INFO:  explainerdashboard: Not installed
2023-04-07 09:18:53,394:INFO:             autoviz: Not installed
2023-04-07 09:18:53,394:INFO:           fairlearn: Not installed
2023-04-07 09:18:53,394:INFO:             xgboost: Not installed
2023-04-07 09:18:53,394:INFO:            catboost: Not installed
2023-04-07 09:18:53,394:INFO:              kmodes: Not installed
2023-04-07 09:18:53,394:INFO:             mlxtend: Not installed
2023-04-07 09:18:53,394:INFO:       statsforecast: Not installed
2023-04-07 09:18:53,395:INFO:        tune_sklearn: Not installed
2023-04-07 09:18:53,395:INFO:                 ray: Not installed
2023-04-07 09:18:53,395:INFO:            hyperopt: Not installed
2023-04-07 09:18:53,395:INFO:              optuna: Not installed
2023-04-07 09:18:53,395:INFO:               skopt: Not installed
2023-04-07 09:18:53,395:INFO:              mlflow: Not installed
2023-04-07 09:18:53,395:INFO:              gradio: Not installed
2023-04-07 09:18:53,395:INFO:             fastapi: Not installed
2023-04-07 09:18:53,395:INFO:             uvicorn: Not installed
2023-04-07 09:18:53,396:INFO:              m2cgen: Not installed
2023-04-07 09:18:53,396:INFO:           evidently: Not installed
2023-04-07 09:18:53,396:INFO:               fugue: Not installed
2023-04-07 09:18:53,396:INFO:           streamlit: 1.20.0
2023-04-07 09:18:53,396:INFO:             prophet: Not installed
2023-04-07 09:18:53,396:INFO:None
2023-04-07 09:18:53,396:INFO:Set up data.
2023-04-07 09:18:53,408:INFO:Set up train/test split.
2023-04-07 09:18:53,416:INFO:Set up index.
2023-04-07 09:18:53,416:INFO:Set up folding strategy.
2023-04-07 09:18:53,416:INFO:Assigning column types.
2023-04-07 09:18:53,422:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 09:18:53,483:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:18:53,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:18:53,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:18:53,569:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:18:53,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,603:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 09:18:53,656:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:18:53,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:18:53,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,780:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 09:18:53,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:53,957:INFO:Preparing preprocessing pipeline...
2023-04-07 09:18:53,958:INFO:Set up simple imputation.
2023-04-07 09:18:53,962:INFO:Set up encoding of ordinal features.
2023-04-07 09:18:53,965:INFO:Set up encoding of categorical features.
2023-04-07 09:18:54,095:INFO:Finished creating preprocessing pipeline.
2023-04-07 09:18:54,129:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 09:18:54,129:INFO:Creating final display dataframe.
2023-04-07 09:18:54,566:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 29)
5   Transformed train set shape         (623, 29)
6    Transformed test set shape         (268, 29)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 7
10     Rows with missing values             79.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              53b9
2023-04-07 09:18:54,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:54,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:54,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:54,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:18:54,857:INFO:setup() successfully completed in 1.48s...............
2023-04-07 09:20:08,758:INFO:Initializing compare_models()
2023-04-07 09:20:08,758:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-07 09:20:08,758:INFO:Checking exceptions
2023-04-07 09:20:08,772:INFO:Preparing display monitor
2023-04-07 09:20:08,817:INFO:Initializing Logistic Regression
2023-04-07 09:20:08,817:INFO:Total runtime is 0.0 minutes
2023-04-07 09:20:08,821:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:08,821:INFO:Initializing create_model()
2023-04-07 09:20:08,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:08,821:INFO:Checking exceptions
2023-04-07 09:20:08,822:INFO:Importing libraries
2023-04-07 09:20:08,822:INFO:Copying training dataset
2023-04-07 09:20:08,831:INFO:Defining folds
2023-04-07 09:20:08,832:INFO:Declaring metric variables
2023-04-07 09:20:08,836:INFO:Importing untrained model
2023-04-07 09:20:08,856:INFO:Logistic Regression Imported successfully
2023-04-07 09:20:08,868:INFO:Starting cross validation
2023-04-07 09:20:08,876:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:15,779:INFO:Calculating mean and std
2023-04-07 09:20:15,781:INFO:Creating metrics dataframe
2023-04-07 09:20:15,807:INFO:Uploading results into container
2023-04-07 09:20:15,808:INFO:Uploading model into container now
2023-04-07 09:20:15,809:INFO:_master_model_container: 1
2023-04-07 09:20:15,809:INFO:_display_container: 2
2023-04-07 09:20:15,810:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 09:20:15,810:INFO:create_model() successfully completed......................................
2023-04-07 09:20:15,925:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:15,925:INFO:Creating metrics dataframe
2023-04-07 09:20:15,950:INFO:Initializing K Neighbors Classifier
2023-04-07 09:20:15,950:INFO:Total runtime is 0.11889212131500244 minutes
2023-04-07 09:20:15,960:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:15,961:INFO:Initializing create_model()
2023-04-07 09:20:15,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:15,962:INFO:Checking exceptions
2023-04-07 09:20:15,963:INFO:Importing libraries
2023-04-07 09:20:15,963:INFO:Copying training dataset
2023-04-07 09:20:15,984:INFO:Defining folds
2023-04-07 09:20:15,984:INFO:Declaring metric variables
2023-04-07 09:20:16,001:INFO:Importing untrained model
2023-04-07 09:20:16,021:INFO:K Neighbors Classifier Imported successfully
2023-04-07 09:20:16,039:INFO:Starting cross validation
2023-04-07 09:20:16,042:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:20,523:INFO:Calculating mean and std
2023-04-07 09:20:20,526:INFO:Creating metrics dataframe
2023-04-07 09:20:20,546:INFO:Uploading results into container
2023-04-07 09:20:20,547:INFO:Uploading model into container now
2023-04-07 09:20:20,548:INFO:_master_model_container: 2
2023-04-07 09:20:20,548:INFO:_display_container: 2
2023-04-07 09:20:20,549:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-07 09:20:20,549:INFO:create_model() successfully completed......................................
2023-04-07 09:20:20,650:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:20,650:INFO:Creating metrics dataframe
2023-04-07 09:20:20,674:INFO:Initializing Naive Bayes
2023-04-07 09:20:20,674:INFO:Total runtime is 0.19762887159983317 minutes
2023-04-07 09:20:20,685:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:20,685:INFO:Initializing create_model()
2023-04-07 09:20:20,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:20,686:INFO:Checking exceptions
2023-04-07 09:20:20,686:INFO:Importing libraries
2023-04-07 09:20:20,686:INFO:Copying training dataset
2023-04-07 09:20:20,696:INFO:Defining folds
2023-04-07 09:20:20,697:INFO:Declaring metric variables
2023-04-07 09:20:20,705:INFO:Importing untrained model
2023-04-07 09:20:20,714:INFO:Naive Bayes Imported successfully
2023-04-07 09:20:20,734:INFO:Starting cross validation
2023-04-07 09:20:20,737:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:21,580:INFO:Calculating mean and std
2023-04-07 09:20:21,583:INFO:Creating metrics dataframe
2023-04-07 09:20:21,603:INFO:Uploading results into container
2023-04-07 09:20:21,604:INFO:Uploading model into container now
2023-04-07 09:20:21,604:INFO:_master_model_container: 3
2023-04-07 09:20:21,604:INFO:_display_container: 2
2023-04-07 09:20:21,604:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 09:20:21,605:INFO:create_model() successfully completed......................................
2023-04-07 09:20:21,696:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:21,697:INFO:Creating metrics dataframe
2023-04-07 09:20:21,716:INFO:Initializing Decision Tree Classifier
2023-04-07 09:20:21,716:INFO:Total runtime is 0.21498227516810098 minutes
2023-04-07 09:20:21,722:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:21,722:INFO:Initializing create_model()
2023-04-07 09:20:21,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:21,722:INFO:Checking exceptions
2023-04-07 09:20:21,722:INFO:Importing libraries
2023-04-07 09:20:21,722:INFO:Copying training dataset
2023-04-07 09:20:21,733:INFO:Defining folds
2023-04-07 09:20:21,733:INFO:Declaring metric variables
2023-04-07 09:20:21,740:INFO:Importing untrained model
2023-04-07 09:20:21,744:INFO:Decision Tree Classifier Imported successfully
2023-04-07 09:20:21,757:INFO:Starting cross validation
2023-04-07 09:20:21,759:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:22,530:INFO:Calculating mean and std
2023-04-07 09:20:22,533:INFO:Creating metrics dataframe
2023-04-07 09:20:22,552:INFO:Uploading results into container
2023-04-07 09:20:22,553:INFO:Uploading model into container now
2023-04-07 09:20:22,553:INFO:_master_model_container: 4
2023-04-07 09:20:22,553:INFO:_display_container: 2
2023-04-07 09:20:22,554:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 09:20:22,554:INFO:create_model() successfully completed......................................
2023-04-07 09:20:22,641:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:22,641:INFO:Creating metrics dataframe
2023-04-07 09:20:22,663:INFO:Initializing SVM - Linear Kernel
2023-04-07 09:20:22,664:INFO:Total runtime is 0.23079030513763427 minutes
2023-04-07 09:20:22,672:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:22,673:INFO:Initializing create_model()
2023-04-07 09:20:22,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:22,673:INFO:Checking exceptions
2023-04-07 09:20:22,673:INFO:Importing libraries
2023-04-07 09:20:22,674:INFO:Copying training dataset
2023-04-07 09:20:22,684:INFO:Defining folds
2023-04-07 09:20:22,684:INFO:Declaring metric variables
2023-04-07 09:20:22,692:INFO:Importing untrained model
2023-04-07 09:20:22,698:INFO:SVM - Linear Kernel Imported successfully
2023-04-07 09:20:22,709:INFO:Starting cross validation
2023-04-07 09:20:22,712:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:23,415:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:20:23,458:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:20:23,475:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:20:23,496:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:20:23,505:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:20:23,537:INFO:Calculating mean and std
2023-04-07 09:20:23,540:INFO:Creating metrics dataframe
2023-04-07 09:20:23,566:INFO:Uploading results into container
2023-04-07 09:20:23,567:INFO:Uploading model into container now
2023-04-07 09:20:23,567:INFO:_master_model_container: 5
2023-04-07 09:20:23,567:INFO:_display_container: 2
2023-04-07 09:20:23,568:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-07 09:20:23,568:INFO:create_model() successfully completed......................................
2023-04-07 09:20:23,660:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:23,660:INFO:Creating metrics dataframe
2023-04-07 09:20:23,682:INFO:Initializing Ridge Classifier
2023-04-07 09:20:23,682:INFO:Total runtime is 0.24775388240814208 minutes
2023-04-07 09:20:23,689:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:23,690:INFO:Initializing create_model()
2023-04-07 09:20:23,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:23,690:INFO:Checking exceptions
2023-04-07 09:20:23,690:INFO:Importing libraries
2023-04-07 09:20:23,690:INFO:Copying training dataset
2023-04-07 09:20:23,698:INFO:Defining folds
2023-04-07 09:20:23,698:INFO:Declaring metric variables
2023-04-07 09:20:23,706:INFO:Importing untrained model
2023-04-07 09:20:23,713:INFO:Ridge Classifier Imported successfully
2023-04-07 09:20:23,726:INFO:Starting cross validation
2023-04-07 09:20:23,731:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:24,428:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:20:24,436:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:20:24,561:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:20:24,567:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:20:24,575:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:20:24,613:INFO:Calculating mean and std
2023-04-07 09:20:24,615:INFO:Creating metrics dataframe
2023-04-07 09:20:24,643:INFO:Uploading results into container
2023-04-07 09:20:24,644:INFO:Uploading model into container now
2023-04-07 09:20:24,644:INFO:_master_model_container: 6
2023-04-07 09:20:24,644:INFO:_display_container: 2
2023-04-07 09:20:24,645:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-07 09:20:24,645:INFO:create_model() successfully completed......................................
2023-04-07 09:20:24,773:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:24,773:INFO:Creating metrics dataframe
2023-04-07 09:20:24,819:INFO:Initializing Random Forest Classifier
2023-04-07 09:20:24,820:INFO:Total runtime is 0.2667174418767293 minutes
2023-04-07 09:20:24,837:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:24,838:INFO:Initializing create_model()
2023-04-07 09:20:24,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:24,839:INFO:Checking exceptions
2023-04-07 09:20:24,839:INFO:Importing libraries
2023-04-07 09:20:24,839:INFO:Copying training dataset
2023-04-07 09:20:24,854:INFO:Defining folds
2023-04-07 09:20:24,855:INFO:Declaring metric variables
2023-04-07 09:20:24,864:INFO:Importing untrained model
2023-04-07 09:20:24,873:INFO:Random Forest Classifier Imported successfully
2023-04-07 09:20:24,889:INFO:Starting cross validation
2023-04-07 09:20:24,891:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:26,647:INFO:Calculating mean and std
2023-04-07 09:20:26,649:INFO:Creating metrics dataframe
2023-04-07 09:20:26,689:INFO:Uploading results into container
2023-04-07 09:20:26,690:INFO:Uploading model into container now
2023-04-07 09:20:26,690:INFO:_master_model_container: 7
2023-04-07 09:20:26,691:INFO:_display_container: 2
2023-04-07 09:20:26,691:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-07 09:20:26,691:INFO:create_model() successfully completed......................................
2023-04-07 09:20:26,780:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:26,780:INFO:Creating metrics dataframe
2023-04-07 09:20:26,803:INFO:Initializing Quadratic Discriminant Analysis
2023-04-07 09:20:26,803:INFO:Total runtime is 0.29977338314056395 minutes
2023-04-07 09:20:26,811:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:26,812:INFO:Initializing create_model()
2023-04-07 09:20:26,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:26,812:INFO:Checking exceptions
2023-04-07 09:20:26,812:INFO:Importing libraries
2023-04-07 09:20:26,812:INFO:Copying training dataset
2023-04-07 09:20:26,822:INFO:Defining folds
2023-04-07 09:20:26,822:INFO:Declaring metric variables
2023-04-07 09:20:26,833:INFO:Importing untrained model
2023-04-07 09:20:26,837:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-07 09:20:26,847:INFO:Starting cross validation
2023-04-07 09:20:26,850:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:27,125:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:20:27,133:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:20:27,148:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:20:27,188:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:20:27,205:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:20:27,617:INFO:Calculating mean and std
2023-04-07 09:20:27,619:INFO:Creating metrics dataframe
2023-04-07 09:20:27,661:INFO:Uploading results into container
2023-04-07 09:20:27,662:INFO:Uploading model into container now
2023-04-07 09:20:27,663:INFO:_master_model_container: 8
2023-04-07 09:20:27,663:INFO:_display_container: 2
2023-04-07 09:20:27,663:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-07 09:20:27,663:INFO:create_model() successfully completed......................................
2023-04-07 09:20:27,755:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:27,756:INFO:Creating metrics dataframe
2023-04-07 09:20:27,779:INFO:Initializing Ada Boost Classifier
2023-04-07 09:20:27,779:INFO:Total runtime is 0.3160358428955078 minutes
2023-04-07 09:20:27,786:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:27,787:INFO:Initializing create_model()
2023-04-07 09:20:27,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:27,787:INFO:Checking exceptions
2023-04-07 09:20:27,787:INFO:Importing libraries
2023-04-07 09:20:27,787:INFO:Copying training dataset
2023-04-07 09:20:27,796:INFO:Defining folds
2023-04-07 09:20:27,796:INFO:Declaring metric variables
2023-04-07 09:20:27,802:INFO:Importing untrained model
2023-04-07 09:20:27,809:INFO:Ada Boost Classifier Imported successfully
2023-04-07 09:20:27,820:INFO:Starting cross validation
2023-04-07 09:20:27,823:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:28,581:INFO:Calculating mean and std
2023-04-07 09:20:28,583:INFO:Creating metrics dataframe
2023-04-07 09:20:28,623:INFO:Uploading results into container
2023-04-07 09:20:28,625:INFO:Uploading model into container now
2023-04-07 09:20:28,625:INFO:_master_model_container: 9
2023-04-07 09:20:28,625:INFO:_display_container: 2
2023-04-07 09:20:28,625:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-07 09:20:28,625:INFO:create_model() successfully completed......................................
2023-04-07 09:20:28,716:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:28,716:INFO:Creating metrics dataframe
2023-04-07 09:20:28,741:INFO:Initializing Gradient Boosting Classifier
2023-04-07 09:20:28,741:INFO:Total runtime is 0.3320720593134562 minutes
2023-04-07 09:20:28,750:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:28,750:INFO:Initializing create_model()
2023-04-07 09:20:28,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:28,751:INFO:Checking exceptions
2023-04-07 09:20:28,751:INFO:Importing libraries
2023-04-07 09:20:28,751:INFO:Copying training dataset
2023-04-07 09:20:28,760:INFO:Defining folds
2023-04-07 09:20:28,761:INFO:Declaring metric variables
2023-04-07 09:20:28,770:INFO:Importing untrained model
2023-04-07 09:20:28,777:INFO:Gradient Boosting Classifier Imported successfully
2023-04-07 09:20:28,787:INFO:Starting cross validation
2023-04-07 09:20:28,791:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:30,077:INFO:Calculating mean and std
2023-04-07 09:20:30,079:INFO:Creating metrics dataframe
2023-04-07 09:20:30,130:INFO:Uploading results into container
2023-04-07 09:20:30,130:INFO:Uploading model into container now
2023-04-07 09:20:30,131:INFO:_master_model_container: 10
2023-04-07 09:20:30,131:INFO:_display_container: 2
2023-04-07 09:20:30,131:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-07 09:20:30,132:INFO:create_model() successfully completed......................................
2023-04-07 09:20:30,220:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:30,220:INFO:Creating metrics dataframe
2023-04-07 09:20:30,247:INFO:Initializing Linear Discriminant Analysis
2023-04-07 09:20:30,248:INFO:Total runtime is 0.35719316005706786 minutes
2023-04-07 09:20:30,254:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:30,254:INFO:Initializing create_model()
2023-04-07 09:20:30,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:30,255:INFO:Checking exceptions
2023-04-07 09:20:30,255:INFO:Importing libraries
2023-04-07 09:20:30,255:INFO:Copying training dataset
2023-04-07 09:20:30,263:INFO:Defining folds
2023-04-07 09:20:30,263:INFO:Declaring metric variables
2023-04-07 09:20:30,270:INFO:Importing untrained model
2023-04-07 09:20:30,281:INFO:Linear Discriminant Analysis Imported successfully
2023-04-07 09:20:30,290:INFO:Starting cross validation
2023-04-07 09:20:30,294:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:31,092:INFO:Calculating mean and std
2023-04-07 09:20:31,093:INFO:Creating metrics dataframe
2023-04-07 09:20:31,175:INFO:Uploading results into container
2023-04-07 09:20:31,176:INFO:Uploading model into container now
2023-04-07 09:20:31,176:INFO:_master_model_container: 11
2023-04-07 09:20:31,177:INFO:_display_container: 2
2023-04-07 09:20:31,177:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-07 09:20:31,177:INFO:create_model() successfully completed......................................
2023-04-07 09:20:31,270:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:31,270:INFO:Creating metrics dataframe
2023-04-07 09:20:31,295:INFO:Initializing Extra Trees Classifier
2023-04-07 09:20:31,295:INFO:Total runtime is 0.3746315836906433 minutes
2023-04-07 09:20:31,302:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:31,302:INFO:Initializing create_model()
2023-04-07 09:20:31,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:31,303:INFO:Checking exceptions
2023-04-07 09:20:31,303:INFO:Importing libraries
2023-04-07 09:20:31,303:INFO:Copying training dataset
2023-04-07 09:20:31,312:INFO:Defining folds
2023-04-07 09:20:31,312:INFO:Declaring metric variables
2023-04-07 09:20:31,318:INFO:Importing untrained model
2023-04-07 09:20:31,327:INFO:Extra Trees Classifier Imported successfully
2023-04-07 09:20:31,336:INFO:Starting cross validation
2023-04-07 09:20:31,339:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:33,132:INFO:Calculating mean and std
2023-04-07 09:20:33,134:INFO:Creating metrics dataframe
2023-04-07 09:20:33,186:INFO:Uploading results into container
2023-04-07 09:20:33,187:INFO:Uploading model into container now
2023-04-07 09:20:33,187:INFO:_master_model_container: 12
2023-04-07 09:20:33,188:INFO:_display_container: 2
2023-04-07 09:20:33,188:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-07 09:20:33,188:INFO:create_model() successfully completed......................................
2023-04-07 09:20:33,273:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:33,273:INFO:Creating metrics dataframe
2023-04-07 09:20:33,299:INFO:Initializing Light Gradient Boosting Machine
2023-04-07 09:20:33,299:INFO:Total runtime is 0.40804688930511473 minutes
2023-04-07 09:20:33,305:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:33,306:INFO:Initializing create_model()
2023-04-07 09:20:33,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:33,307:INFO:Checking exceptions
2023-04-07 09:20:33,307:INFO:Importing libraries
2023-04-07 09:20:33,307:INFO:Copying training dataset
2023-04-07 09:20:33,316:INFO:Defining folds
2023-04-07 09:20:33,317:INFO:Declaring metric variables
2023-04-07 09:20:33,323:INFO:Importing untrained model
2023-04-07 09:20:33,331:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-07 09:20:33,343:INFO:Starting cross validation
2023-04-07 09:20:33,346:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:34,264:INFO:Calculating mean and std
2023-04-07 09:20:34,266:INFO:Creating metrics dataframe
2023-04-07 09:20:34,327:INFO:Uploading results into container
2023-04-07 09:20:34,328:INFO:Uploading model into container now
2023-04-07 09:20:34,328:INFO:_master_model_container: 13
2023-04-07 09:20:34,328:INFO:_display_container: 2
2023-04-07 09:20:34,329:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-07 09:20:34,329:INFO:create_model() successfully completed......................................
2023-04-07 09:20:34,417:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:34,418:INFO:Creating metrics dataframe
2023-04-07 09:20:34,443:INFO:Initializing Dummy Classifier
2023-04-07 09:20:34,443:INFO:Total runtime is 0.4270987629890442 minutes
2023-04-07 09:20:34,450:INFO:SubProcess create_model() called ==================================
2023-04-07 09:20:34,450:INFO:Initializing create_model()
2023-04-07 09:20:34,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5143449A0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:34,450:INFO:Checking exceptions
2023-04-07 09:20:34,450:INFO:Importing libraries
2023-04-07 09:20:34,450:INFO:Copying training dataset
2023-04-07 09:20:34,458:INFO:Defining folds
2023-04-07 09:20:34,458:INFO:Declaring metric variables
2023-04-07 09:20:34,465:INFO:Importing untrained model
2023-04-07 09:20:34,473:INFO:Dummy Classifier Imported successfully
2023-04-07 09:20:34,482:INFO:Starting cross validation
2023-04-07 09:20:34,484:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:20:35,063:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:20:35,127:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:20:35,136:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:20:35,166:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:20:35,255:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:20:35,312:INFO:Calculating mean and std
2023-04-07 09:20:35,313:INFO:Creating metrics dataframe
2023-04-07 09:20:35,379:INFO:Uploading results into container
2023-04-07 09:20:35,380:INFO:Uploading model into container now
2023-04-07 09:20:35,381:INFO:_master_model_container: 14
2023-04-07 09:20:35,381:INFO:_display_container: 2
2023-04-07 09:20:35,381:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-07 09:20:35,381:INFO:create_model() successfully completed......................................
2023-04-07 09:20:35,478:INFO:SubProcess create_model() end ==================================
2023-04-07 09:20:35,478:INFO:Creating metrics dataframe
2023-04-07 09:20:35,529:INFO:Initializing create_model()
2023-04-07 09:20:35,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:35,532:INFO:Checking exceptions
2023-04-07 09:20:35,534:INFO:Importing libraries
2023-04-07 09:20:35,534:INFO:Copying training dataset
2023-04-07 09:20:35,543:INFO:Defining folds
2023-04-07 09:20:35,543:INFO:Declaring metric variables
2023-04-07 09:20:35,543:INFO:Importing untrained model
2023-04-07 09:20:35,544:INFO:Declaring custom model
2023-04-07 09:20:35,544:INFO:Logistic Regression Imported successfully
2023-04-07 09:20:35,546:INFO:Cross validation set to False
2023-04-07 09:20:35,546:INFO:Fitting Model
2023-04-07 09:20:35,921:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 09:20:35,921:INFO:create_model() successfully completed......................................
2023-04-07 09:20:36,023:INFO:Initializing create_model()
2023-04-07 09:20:36,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:36,023:INFO:Checking exceptions
2023-04-07 09:20:36,027:INFO:Importing libraries
2023-04-07 09:20:36,027:INFO:Copying training dataset
2023-04-07 09:20:36,037:INFO:Defining folds
2023-04-07 09:20:36,037:INFO:Declaring metric variables
2023-04-07 09:20:36,037:INFO:Importing untrained model
2023-04-07 09:20:36,037:INFO:Declaring custom model
2023-04-07 09:20:36,038:INFO:Naive Bayes Imported successfully
2023-04-07 09:20:36,040:INFO:Cross validation set to False
2023-04-07 09:20:36,040:INFO:Fitting Model
2023-04-07 09:20:36,353:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 09:20:36,354:INFO:create_model() successfully completed......................................
2023-04-07 09:20:36,457:INFO:Initializing create_model()
2023-04-07 09:20:36,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B5190E2AF0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:20:36,458:INFO:Checking exceptions
2023-04-07 09:20:36,463:INFO:Importing libraries
2023-04-07 09:20:36,463:INFO:Copying training dataset
2023-04-07 09:20:36,474:INFO:Defining folds
2023-04-07 09:20:36,474:INFO:Declaring metric variables
2023-04-07 09:20:36,474:INFO:Importing untrained model
2023-04-07 09:20:36,474:INFO:Declaring custom model
2023-04-07 09:20:36,474:INFO:Decision Tree Classifier Imported successfully
2023-04-07 09:20:36,477:INFO:Cross validation set to False
2023-04-07 09:20:36,477:INFO:Fitting Model
2023-04-07 09:20:36,770:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 09:20:36,771:INFO:create_model() successfully completed......................................
2023-04-07 09:20:36,911:INFO:_master_model_container: 14
2023-04-07 09:20:36,912:INFO:_display_container: 2
2023-04-07 09:20:36,913:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')]
2023-04-07 09:20:36,913:INFO:compare_models() successfully completed......................................
2023-04-07 09:24:16,782:INFO:PyCaret ClassificationExperiment
2023-04-07 09:24:16,782:INFO:Logging name: clf-default-name
2023-04-07 09:24:16,782:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 09:24:16,782:INFO:version 3.0.0
2023-04-07 09:24:16,782:INFO:Initializing setup()
2023-04-07 09:24:16,782:INFO:self.USI: a335
2023-04-07 09:24:16,782:INFO:self._variable_keys: {'USI', 'pipeline', 'gpu_n_jobs_param', 'seed', 'data', 'X_test', 'memory', 'fold_shuffle_param', '_ml_usecase', '_available_plots', 'fix_imbalance', 'idx', 'exp_id', 'X', 'html_param', 'fold_generator', 'fold_groups_param', 'y_train', 'X_train', 'is_multiclass', 'n_jobs_param', 'y', 'y_test', 'target_param', 'log_plots_param', 'logging_param', 'gpu_param', 'exp_name_log'}
2023-04-07 09:24:16,782:INFO:Checking environment
2023-04-07 09:24:16,783:INFO:python_version: 3.8.16
2023-04-07 09:24:16,783:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 09:24:16,783:INFO:machine: AMD64
2023-04-07 09:24:16,783:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 09:24:16,785:INFO:Memory: svmem(total=8395538432, available=2035257344, percent=75.8, used=6360281088, free=2035257344)
2023-04-07 09:24:16,785:INFO:Physical Core: 4
2023-04-07 09:24:16,785:INFO:Logical Core: 8
2023-04-07 09:24:16,785:INFO:Checking libraries
2023-04-07 09:24:16,785:INFO:System:
2023-04-07 09:24:16,785:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 09:24:16,785:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 09:24:16,785:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 09:24:16,785:INFO:PyCaret required dependencies:
2023-04-07 09:24:16,786:INFO:                 pip: 23.0.1
2023-04-07 09:24:16,786:INFO:          setuptools: 65.6.3
2023-04-07 09:24:16,786:INFO:             pycaret: 3.0.0
2023-04-07 09:24:16,786:INFO:             IPython: 8.11.0
2023-04-07 09:24:16,786:INFO:          ipywidgets: 8.0.4
2023-04-07 09:24:16,786:INFO:                tqdm: 4.64.1
2023-04-07 09:24:16,786:INFO:               numpy: 1.23.5
2023-04-07 09:24:16,786:INFO:              pandas: 1.5.3
2023-04-07 09:24:16,787:INFO:              jinja2: 3.1.2
2023-04-07 09:24:16,787:INFO:               scipy: 1.9.3
2023-04-07 09:24:16,787:INFO:              joblib: 1.2.0
2023-04-07 09:24:16,787:INFO:             sklearn: 1.2.2
2023-04-07 09:24:16,787:INFO:                pyod: 1.0.9
2023-04-07 09:24:16,787:INFO:            imblearn: 0.10.1
2023-04-07 09:24:16,787:INFO:   category_encoders: 2.6.0
2023-04-07 09:24:16,787:INFO:            lightgbm: 3.3.5
2023-04-07 09:24:16,787:INFO:               numba: 0.56.4
2023-04-07 09:24:16,787:INFO:            requests: 2.28.2
2023-04-07 09:24:16,787:INFO:          matplotlib: 3.6.3
2023-04-07 09:24:16,787:INFO:          scikitplot: 0.3.7
2023-04-07 09:24:16,787:INFO:         yellowbrick: 1.5
2023-04-07 09:24:16,787:INFO:              plotly: 5.14.1
2023-04-07 09:24:16,787:INFO:             kaleido: 0.2.1
2023-04-07 09:24:16,788:INFO:         statsmodels: 0.13.5
2023-04-07 09:24:16,788:INFO:              sktime: 0.17.0
2023-04-07 09:24:16,788:INFO:               tbats: 1.1.2
2023-04-07 09:24:16,788:INFO:            pmdarima: 2.0.3
2023-04-07 09:24:16,788:INFO:              psutil: 5.9.4
2023-04-07 09:24:16,788:INFO:PyCaret optional dependencies:
2023-04-07 09:24:16,788:INFO:                shap: 0.41.0
2023-04-07 09:24:16,788:INFO:           interpret: Not installed
2023-04-07 09:24:16,788:INFO:                umap: Not installed
2023-04-07 09:24:16,788:INFO:    pandas_profiling: 4.1.0
2023-04-07 09:24:16,788:INFO:  explainerdashboard: Not installed
2023-04-07 09:24:16,788:INFO:             autoviz: Not installed
2023-04-07 09:24:16,788:INFO:           fairlearn: Not installed
2023-04-07 09:24:16,789:INFO:             xgboost: Not installed
2023-04-07 09:24:16,789:INFO:            catboost: Not installed
2023-04-07 09:24:16,789:INFO:              kmodes: Not installed
2023-04-07 09:24:16,789:INFO:             mlxtend: Not installed
2023-04-07 09:24:16,789:INFO:       statsforecast: Not installed
2023-04-07 09:24:16,789:INFO:        tune_sklearn: Not installed
2023-04-07 09:24:16,789:INFO:                 ray: Not installed
2023-04-07 09:24:16,789:INFO:            hyperopt: Not installed
2023-04-07 09:24:16,789:INFO:              optuna: Not installed
2023-04-07 09:24:16,789:INFO:               skopt: Not installed
2023-04-07 09:24:16,789:INFO:              mlflow: Not installed
2023-04-07 09:24:16,789:INFO:              gradio: Not installed
2023-04-07 09:24:16,789:INFO:             fastapi: Not installed
2023-04-07 09:24:16,790:INFO:             uvicorn: Not installed
2023-04-07 09:24:16,790:INFO:              m2cgen: Not installed
2023-04-07 09:24:16,790:INFO:           evidently: Not installed
2023-04-07 09:24:16,790:INFO:               fugue: Not installed
2023-04-07 09:24:16,790:INFO:           streamlit: 1.20.0
2023-04-07 09:24:16,790:INFO:             prophet: Not installed
2023-04-07 09:24:16,790:INFO:None
2023-04-07 09:24:16,790:INFO:Set up data.
2023-04-07 09:24:16,802:INFO:Set up train/test split.
2023-04-07 09:24:16,811:INFO:Set up index.
2023-04-07 09:24:16,811:INFO:Set up folding strategy.
2023-04-07 09:24:16,811:INFO:Assigning column types.
2023-04-07 09:24:16,817:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 09:24:16,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:24:16,878:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:24:16,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:16,912:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:16,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:24:16,965:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:24:16,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:16,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:16,999:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 09:24:17,078:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:24:17,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:17,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:17,178:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:24:17,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:17,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:17,211:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 09:24:17,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:17,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:17,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:17,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:17,385:INFO:Preparing preprocessing pipeline...
2023-04-07 09:24:17,386:INFO:Set up simple imputation.
2023-04-07 09:24:17,390:INFO:Set up encoding of ordinal features.
2023-04-07 09:24:17,392:INFO:Set up encoding of categorical features.
2023-04-07 09:24:17,504:INFO:Finished creating preprocessing pipeline.
2023-04-07 09:24:17,525:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 09:24:17,525:INFO:Creating final display dataframe.
2023-04-07 09:24:17,909:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 28)
5   Transformed train set shape         (623, 28)
6    Transformed test set shape         (268, 28)
7               Ignore features                 1
8              Ordinal features                 1
9              Numeric features                 5
10         Categorical features                 6
11     Rows with missing values             79.6%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              a335
2023-04-07 09:24:18,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:18,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:18,108:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:18,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:24:18,109:INFO:setup() successfully completed in 1.37s...............
2023-04-07 09:25:59,979:INFO:Initializing compare_models()
2023-04-07 09:25:59,979:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-07 09:25:59,979:INFO:Checking exceptions
2023-04-07 09:25:59,985:INFO:Preparing display monitor
2023-04-07 09:26:00,020:INFO:Initializing Logistic Regression
2023-04-07 09:26:00,020:INFO:Total runtime is 0.0 minutes
2023-04-07 09:26:00,028:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:00,028:INFO:Initializing create_model()
2023-04-07 09:26:00,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:00,028:INFO:Checking exceptions
2023-04-07 09:26:00,028:INFO:Importing libraries
2023-04-07 09:26:00,029:INFO:Copying training dataset
2023-04-07 09:26:00,040:INFO:Defining folds
2023-04-07 09:26:00,040:INFO:Declaring metric variables
2023-04-07 09:26:00,044:INFO:Importing untrained model
2023-04-07 09:26:00,051:INFO:Logistic Regression Imported successfully
2023-04-07 09:26:00,062:INFO:Starting cross validation
2023-04-07 09:26:00,065:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:07,607:INFO:Calculating mean and std
2023-04-07 09:26:07,608:INFO:Creating metrics dataframe
2023-04-07 09:26:07,655:INFO:Uploading results into container
2023-04-07 09:26:07,656:INFO:Uploading model into container now
2023-04-07 09:26:07,656:INFO:_master_model_container: 1
2023-04-07 09:26:07,657:INFO:_display_container: 2
2023-04-07 09:26:07,657:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 09:26:07,657:INFO:create_model() successfully completed......................................
2023-04-07 09:26:07,727:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:07,727:INFO:Creating metrics dataframe
2023-04-07 09:26:07,736:INFO:Initializing K Neighbors Classifier
2023-04-07 09:26:07,736:INFO:Total runtime is 0.12860633929570517 minutes
2023-04-07 09:26:07,739:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:07,740:INFO:Initializing create_model()
2023-04-07 09:26:07,740:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:07,740:INFO:Checking exceptions
2023-04-07 09:26:07,740:INFO:Importing libraries
2023-04-07 09:26:07,740:INFO:Copying training dataset
2023-04-07 09:26:07,745:INFO:Defining folds
2023-04-07 09:26:07,745:INFO:Declaring metric variables
2023-04-07 09:26:07,749:INFO:Importing untrained model
2023-04-07 09:26:07,753:INFO:K Neighbors Classifier Imported successfully
2023-04-07 09:26:07,759:INFO:Starting cross validation
2023-04-07 09:26:07,761:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:32,397:INFO:Calculating mean and std
2023-04-07 09:26:32,401:INFO:Creating metrics dataframe
2023-04-07 09:26:32,504:INFO:Uploading results into container
2023-04-07 09:26:32,505:INFO:Uploading model into container now
2023-04-07 09:26:32,506:INFO:_master_model_container: 2
2023-04-07 09:26:32,506:INFO:_display_container: 2
2023-04-07 09:26:32,507:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-07 09:26:32,507:INFO:create_model() successfully completed......................................
2023-04-07 09:26:32,615:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:32,615:INFO:Creating metrics dataframe
2023-04-07 09:26:32,632:INFO:Initializing Naive Bayes
2023-04-07 09:26:32,633:INFO:Total runtime is 0.5435491283734639 minutes
2023-04-07 09:26:32,638:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:32,638:INFO:Initializing create_model()
2023-04-07 09:26:32,639:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:32,639:INFO:Checking exceptions
2023-04-07 09:26:32,639:INFO:Importing libraries
2023-04-07 09:26:32,639:INFO:Copying training dataset
2023-04-07 09:26:32,651:INFO:Defining folds
2023-04-07 09:26:32,651:INFO:Declaring metric variables
2023-04-07 09:26:32,656:INFO:Importing untrained model
2023-04-07 09:26:32,664:INFO:Naive Bayes Imported successfully
2023-04-07 09:26:32,673:INFO:Starting cross validation
2023-04-07 09:26:32,678:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:33,737:INFO:Calculating mean and std
2023-04-07 09:26:33,738:INFO:Creating metrics dataframe
2023-04-07 09:26:33,801:INFO:Uploading results into container
2023-04-07 09:26:33,802:INFO:Uploading model into container now
2023-04-07 09:26:33,802:INFO:_master_model_container: 3
2023-04-07 09:26:33,802:INFO:_display_container: 2
2023-04-07 09:26:33,803:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 09:26:33,803:INFO:create_model() successfully completed......................................
2023-04-07 09:26:33,878:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:33,879:INFO:Creating metrics dataframe
2023-04-07 09:26:33,891:INFO:Initializing Decision Tree Classifier
2023-04-07 09:26:33,891:INFO:Total runtime is 0.5645244359970093 minutes
2023-04-07 09:26:33,896:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:33,896:INFO:Initializing create_model()
2023-04-07 09:26:33,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:33,896:INFO:Checking exceptions
2023-04-07 09:26:33,896:INFO:Importing libraries
2023-04-07 09:26:33,896:INFO:Copying training dataset
2023-04-07 09:26:33,903:INFO:Defining folds
2023-04-07 09:26:33,903:INFO:Declaring metric variables
2023-04-07 09:26:33,907:INFO:Importing untrained model
2023-04-07 09:26:33,912:INFO:Decision Tree Classifier Imported successfully
2023-04-07 09:26:33,920:INFO:Starting cross validation
2023-04-07 09:26:33,922:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:34,858:INFO:Calculating mean and std
2023-04-07 09:26:34,860:INFO:Creating metrics dataframe
2023-04-07 09:26:34,924:INFO:Uploading results into container
2023-04-07 09:26:34,925:INFO:Uploading model into container now
2023-04-07 09:26:34,925:INFO:_master_model_container: 4
2023-04-07 09:26:34,925:INFO:_display_container: 2
2023-04-07 09:26:34,926:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 09:26:34,926:INFO:create_model() successfully completed......................................
2023-04-07 09:26:35,000:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:35,000:INFO:Creating metrics dataframe
2023-04-07 09:26:35,013:INFO:Initializing SVM - Linear Kernel
2023-04-07 09:26:35,013:INFO:Total runtime is 0.5832139770189921 minutes
2023-04-07 09:26:35,019:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:35,019:INFO:Initializing create_model()
2023-04-07 09:26:35,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:35,019:INFO:Checking exceptions
2023-04-07 09:26:35,020:INFO:Importing libraries
2023-04-07 09:26:35,020:INFO:Copying training dataset
2023-04-07 09:26:35,027:INFO:Defining folds
2023-04-07 09:26:35,027:INFO:Declaring metric variables
2023-04-07 09:26:35,032:INFO:Importing untrained model
2023-04-07 09:26:35,036:INFO:SVM - Linear Kernel Imported successfully
2023-04-07 09:26:35,045:INFO:Starting cross validation
2023-04-07 09:26:35,047:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:35,659:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:26:35,683:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:26:35,697:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:26:35,726:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:26:35,727:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 09:26:35,953:INFO:Calculating mean and std
2023-04-07 09:26:35,954:INFO:Creating metrics dataframe
2023-04-07 09:26:36,019:INFO:Uploading results into container
2023-04-07 09:26:36,020:INFO:Uploading model into container now
2023-04-07 09:26:36,020:INFO:_master_model_container: 5
2023-04-07 09:26:36,020:INFO:_display_container: 2
2023-04-07 09:26:36,021:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-07 09:26:36,021:INFO:create_model() successfully completed......................................
2023-04-07 09:26:36,092:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:36,092:INFO:Creating metrics dataframe
2023-04-07 09:26:36,105:INFO:Initializing Ridge Classifier
2023-04-07 09:26:36,105:INFO:Total runtime is 0.6014153043429057 minutes
2023-04-07 09:26:36,110:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:36,111:INFO:Initializing create_model()
2023-04-07 09:26:36,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:36,111:INFO:Checking exceptions
2023-04-07 09:26:36,112:INFO:Importing libraries
2023-04-07 09:26:36,112:INFO:Copying training dataset
2023-04-07 09:26:36,118:INFO:Defining folds
2023-04-07 09:26:36,118:INFO:Declaring metric variables
2023-04-07 09:26:36,123:INFO:Importing untrained model
2023-04-07 09:26:36,128:INFO:Ridge Classifier Imported successfully
2023-04-07 09:26:36,137:INFO:Starting cross validation
2023-04-07 09:26:36,140:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:36,760:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:26:36,767:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:26:36,777:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:26:36,790:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:26:36,795:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 09:26:37,043:INFO:Calculating mean and std
2023-04-07 09:26:37,045:INFO:Creating metrics dataframe
2023-04-07 09:26:37,112:INFO:Uploading results into container
2023-04-07 09:26:37,113:INFO:Uploading model into container now
2023-04-07 09:26:37,113:INFO:_master_model_container: 6
2023-04-07 09:26:37,113:INFO:_display_container: 2
2023-04-07 09:26:37,114:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-07 09:26:37,114:INFO:create_model() successfully completed......................................
2023-04-07 09:26:37,188:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:37,188:INFO:Creating metrics dataframe
2023-04-07 09:26:37,202:INFO:Initializing Random Forest Classifier
2023-04-07 09:26:37,202:INFO:Total runtime is 0.6196974078814189 minutes
2023-04-07 09:26:37,208:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:37,208:INFO:Initializing create_model()
2023-04-07 09:26:37,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:37,208:INFO:Checking exceptions
2023-04-07 09:26:37,208:INFO:Importing libraries
2023-04-07 09:26:37,208:INFO:Copying training dataset
2023-04-07 09:26:37,215:INFO:Defining folds
2023-04-07 09:26:37,215:INFO:Declaring metric variables
2023-04-07 09:26:37,220:INFO:Importing untrained model
2023-04-07 09:26:37,225:INFO:Random Forest Classifier Imported successfully
2023-04-07 09:26:37,234:INFO:Starting cross validation
2023-04-07 09:26:37,236:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:39,803:INFO:Calculating mean and std
2023-04-07 09:26:39,806:INFO:Creating metrics dataframe
2023-04-07 09:26:39,917:INFO:Uploading results into container
2023-04-07 09:26:39,920:INFO:Uploading model into container now
2023-04-07 09:26:39,920:INFO:_master_model_container: 7
2023-04-07 09:26:39,921:INFO:_display_container: 2
2023-04-07 09:26:39,922:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-07 09:26:39,922:INFO:create_model() successfully completed......................................
2023-04-07 09:26:40,029:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:40,029:INFO:Creating metrics dataframe
2023-04-07 09:26:40,042:INFO:Initializing Quadratic Discriminant Analysis
2023-04-07 09:26:40,042:INFO:Total runtime is 0.6670312762260437 minutes
2023-04-07 09:26:40,046:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:40,047:INFO:Initializing create_model()
2023-04-07 09:26:40,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:40,047:INFO:Checking exceptions
2023-04-07 09:26:40,047:INFO:Importing libraries
2023-04-07 09:26:40,047:INFO:Copying training dataset
2023-04-07 09:26:40,056:INFO:Defining folds
2023-04-07 09:26:40,056:INFO:Declaring metric variables
2023-04-07 09:26:40,062:INFO:Importing untrained model
2023-04-07 09:26:40,068:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-07 09:26:40,077:INFO:Starting cross validation
2023-04-07 09:26:40,080:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:40,346:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:26:40,346:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:26:40,346:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:26:40,346:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:26:40,355:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 09:26:40,876:INFO:Calculating mean and std
2023-04-07 09:26:40,877:INFO:Creating metrics dataframe
2023-04-07 09:26:40,953:INFO:Uploading results into container
2023-04-07 09:26:40,954:INFO:Uploading model into container now
2023-04-07 09:26:40,954:INFO:_master_model_container: 8
2023-04-07 09:26:40,954:INFO:_display_container: 2
2023-04-07 09:26:40,955:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-07 09:26:40,955:INFO:create_model() successfully completed......................................
2023-04-07 09:26:41,046:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:41,046:INFO:Creating metrics dataframe
2023-04-07 09:26:41,062:INFO:Initializing Ada Boost Classifier
2023-04-07 09:26:41,063:INFO:Total runtime is 0.6840528726577759 minutes
2023-04-07 09:26:41,068:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:41,069:INFO:Initializing create_model()
2023-04-07 09:26:41,069:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:41,069:INFO:Checking exceptions
2023-04-07 09:26:41,070:INFO:Importing libraries
2023-04-07 09:26:41,070:INFO:Copying training dataset
2023-04-07 09:26:41,077:INFO:Defining folds
2023-04-07 09:26:41,077:INFO:Declaring metric variables
2023-04-07 09:26:41,084:INFO:Importing untrained model
2023-04-07 09:26:41,091:INFO:Ada Boost Classifier Imported successfully
2023-04-07 09:26:41,105:INFO:Starting cross validation
2023-04-07 09:26:41,108:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:42,540:INFO:Calculating mean and std
2023-04-07 09:26:42,541:INFO:Creating metrics dataframe
2023-04-07 09:26:42,622:INFO:Uploading results into container
2023-04-07 09:26:42,623:INFO:Uploading model into container now
2023-04-07 09:26:42,624:INFO:_master_model_container: 9
2023-04-07 09:26:42,624:INFO:_display_container: 2
2023-04-07 09:26:42,624:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-07 09:26:42,624:INFO:create_model() successfully completed......................................
2023-04-07 09:26:42,696:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:42,696:INFO:Creating metrics dataframe
2023-04-07 09:26:42,710:INFO:Initializing Gradient Boosting Classifier
2023-04-07 09:26:42,710:INFO:Total runtime is 0.7115041693051657 minutes
2023-04-07 09:26:42,714:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:42,714:INFO:Initializing create_model()
2023-04-07 09:26:42,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:42,715:INFO:Checking exceptions
2023-04-07 09:26:42,715:INFO:Importing libraries
2023-04-07 09:26:42,715:INFO:Copying training dataset
2023-04-07 09:26:42,722:INFO:Defining folds
2023-04-07 09:26:42,723:INFO:Declaring metric variables
2023-04-07 09:26:42,729:INFO:Importing untrained model
2023-04-07 09:26:42,737:INFO:Gradient Boosting Classifier Imported successfully
2023-04-07 09:26:42,747:INFO:Starting cross validation
2023-04-07 09:26:42,750:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:44,242:INFO:Calculating mean and std
2023-04-07 09:26:44,244:INFO:Creating metrics dataframe
2023-04-07 09:26:44,335:INFO:Uploading results into container
2023-04-07 09:26:44,336:INFO:Uploading model into container now
2023-04-07 09:26:44,336:INFO:_master_model_container: 10
2023-04-07 09:26:44,336:INFO:_display_container: 2
2023-04-07 09:26:44,336:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-07 09:26:44,336:INFO:create_model() successfully completed......................................
2023-04-07 09:26:44,416:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:44,416:INFO:Creating metrics dataframe
2023-04-07 09:26:44,433:INFO:Initializing Linear Discriminant Analysis
2023-04-07 09:26:44,434:INFO:Total runtime is 0.7402316808700562 minutes
2023-04-07 09:26:44,440:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:44,440:INFO:Initializing create_model()
2023-04-07 09:26:44,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:44,440:INFO:Checking exceptions
2023-04-07 09:26:44,441:INFO:Importing libraries
2023-04-07 09:26:44,441:INFO:Copying training dataset
2023-04-07 09:26:44,448:INFO:Defining folds
2023-04-07 09:26:44,449:INFO:Declaring metric variables
2023-04-07 09:26:44,455:INFO:Importing untrained model
2023-04-07 09:26:44,461:INFO:Linear Discriminant Analysis Imported successfully
2023-04-07 09:26:44,476:INFO:Starting cross validation
2023-04-07 09:26:44,479:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:45,340:INFO:Calculating mean and std
2023-04-07 09:26:45,342:INFO:Creating metrics dataframe
2023-04-07 09:26:45,420:INFO:Uploading results into container
2023-04-07 09:26:45,421:INFO:Uploading model into container now
2023-04-07 09:26:45,421:INFO:_master_model_container: 11
2023-04-07 09:26:45,421:INFO:_display_container: 2
2023-04-07 09:26:45,422:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-07 09:26:45,422:INFO:create_model() successfully completed......................................
2023-04-07 09:26:45,489:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:45,489:INFO:Creating metrics dataframe
2023-04-07 09:26:45,502:INFO:Initializing Extra Trees Classifier
2023-04-07 09:26:45,502:INFO:Total runtime is 0.7580378532409668 minutes
2023-04-07 09:26:45,507:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:45,508:INFO:Initializing create_model()
2023-04-07 09:26:45,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:45,508:INFO:Checking exceptions
2023-04-07 09:26:45,508:INFO:Importing libraries
2023-04-07 09:26:45,508:INFO:Copying training dataset
2023-04-07 09:26:45,514:INFO:Defining folds
2023-04-07 09:26:45,515:INFO:Declaring metric variables
2023-04-07 09:26:45,524:INFO:Importing untrained model
2023-04-07 09:26:45,532:INFO:Extra Trees Classifier Imported successfully
2023-04-07 09:26:45,544:INFO:Starting cross validation
2023-04-07 09:26:45,548:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:47,308:INFO:Calculating mean and std
2023-04-07 09:26:47,309:INFO:Creating metrics dataframe
2023-04-07 09:26:47,395:INFO:Uploading results into container
2023-04-07 09:26:47,396:INFO:Uploading model into container now
2023-04-07 09:26:47,396:INFO:_master_model_container: 12
2023-04-07 09:26:47,396:INFO:_display_container: 2
2023-04-07 09:26:47,396:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-07 09:26:47,396:INFO:create_model() successfully completed......................................
2023-04-07 09:26:47,464:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:47,465:INFO:Creating metrics dataframe
2023-04-07 09:26:47,477:INFO:Initializing Light Gradient Boosting Machine
2023-04-07 09:26:47,477:INFO:Total runtime is 0.7909581899642945 minutes
2023-04-07 09:26:47,480:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:47,481:INFO:Initializing create_model()
2023-04-07 09:26:47,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:47,481:INFO:Checking exceptions
2023-04-07 09:26:47,481:INFO:Importing libraries
2023-04-07 09:26:47,481:INFO:Copying training dataset
2023-04-07 09:26:47,490:INFO:Defining folds
2023-04-07 09:26:47,491:INFO:Declaring metric variables
2023-04-07 09:26:47,496:INFO:Importing untrained model
2023-04-07 09:26:47,506:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-07 09:26:47,520:INFO:Starting cross validation
2023-04-07 09:26:47,522:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:48,516:INFO:Calculating mean and std
2023-04-07 09:26:48,517:INFO:Creating metrics dataframe
2023-04-07 09:26:48,600:INFO:Uploading results into container
2023-04-07 09:26:48,601:INFO:Uploading model into container now
2023-04-07 09:26:48,601:INFO:_master_model_container: 13
2023-04-07 09:26:48,601:INFO:_display_container: 2
2023-04-07 09:26:48,601:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-07 09:26:48,602:INFO:create_model() successfully completed......................................
2023-04-07 09:26:48,669:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:48,669:INFO:Creating metrics dataframe
2023-04-07 09:26:48,682:INFO:Initializing Dummy Classifier
2023-04-07 09:26:48,682:INFO:Total runtime is 0.8110406200091045 minutes
2023-04-07 09:26:48,686:INFO:SubProcess create_model() called ==================================
2023-04-07 09:26:48,686:INFO:Initializing create_model()
2023-04-07 09:26:48,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B5190E24C0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:48,686:INFO:Checking exceptions
2023-04-07 09:26:48,687:INFO:Importing libraries
2023-04-07 09:26:48,687:INFO:Copying training dataset
2023-04-07 09:26:48,695:INFO:Defining folds
2023-04-07 09:26:48,695:INFO:Declaring metric variables
2023-04-07 09:26:48,700:INFO:Importing untrained model
2023-04-07 09:26:48,707:INFO:Dummy Classifier Imported successfully
2023-04-07 09:26:48,719:INFO:Starting cross validation
2023-04-07 09:26:48,722:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:26:49,228:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:26:49,231:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:26:49,233:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:26:49,252:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:26:49,389:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 09:26:49,560:INFO:Calculating mean and std
2023-04-07 09:26:49,561:INFO:Creating metrics dataframe
2023-04-07 09:26:49,649:INFO:Uploading results into container
2023-04-07 09:26:49,650:INFO:Uploading model into container now
2023-04-07 09:26:49,650:INFO:_master_model_container: 14
2023-04-07 09:26:49,650:INFO:_display_container: 2
2023-04-07 09:26:49,651:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-07 09:26:49,651:INFO:create_model() successfully completed......................................
2023-04-07 09:26:49,722:INFO:SubProcess create_model() end ==================================
2023-04-07 09:26:49,722:INFO:Creating metrics dataframe
2023-04-07 09:26:49,750:INFO:Initializing create_model()
2023-04-07 09:26:49,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:49,750:INFO:Checking exceptions
2023-04-07 09:26:49,752:INFO:Importing libraries
2023-04-07 09:26:49,752:INFO:Copying training dataset
2023-04-07 09:26:49,759:INFO:Defining folds
2023-04-07 09:26:49,759:INFO:Declaring metric variables
2023-04-07 09:26:49,760:INFO:Importing untrained model
2023-04-07 09:26:49,760:INFO:Declaring custom model
2023-04-07 09:26:49,761:INFO:Gradient Boosting Classifier Imported successfully
2023-04-07 09:26:49,763:INFO:Cross validation set to False
2023-04-07 09:26:49,764:INFO:Fitting Model
2023-04-07 09:26:50,133:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-07 09:26:50,133:INFO:create_model() successfully completed......................................
2023-04-07 09:26:50,205:INFO:Initializing create_model()
2023-04-07 09:26:50,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:50,206:INFO:Checking exceptions
2023-04-07 09:26:50,208:INFO:Importing libraries
2023-04-07 09:26:50,208:INFO:Copying training dataset
2023-04-07 09:26:50,214:INFO:Defining folds
2023-04-07 09:26:50,214:INFO:Declaring metric variables
2023-04-07 09:26:50,214:INFO:Importing untrained model
2023-04-07 09:26:50,214:INFO:Declaring custom model
2023-04-07 09:26:50,214:INFO:Logistic Regression Imported successfully
2023-04-07 09:26:50,216:INFO:Cross validation set to False
2023-04-07 09:26:50,216:INFO:Fitting Model
2023-04-07 09:26:50,589:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 09:26:50,589:INFO:create_model() successfully completed......................................
2023-04-07 09:26:50,663:INFO:Initializing create_model()
2023-04-07 09:26:50,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B519547AF0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:26:50,664:INFO:Checking exceptions
2023-04-07 09:26:50,667:INFO:Importing libraries
2023-04-07 09:26:50,667:INFO:Copying training dataset
2023-04-07 09:26:50,672:INFO:Defining folds
2023-04-07 09:26:50,673:INFO:Declaring metric variables
2023-04-07 09:26:50,673:INFO:Importing untrained model
2023-04-07 09:26:50,673:INFO:Declaring custom model
2023-04-07 09:26:50,674:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-07 09:26:50,675:INFO:Cross validation set to False
2023-04-07 09:26:50,675:INFO:Fitting Model
2023-04-07 09:26:50,976:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-07 09:26:50,976:INFO:create_model() successfully completed......................................
2023-04-07 09:26:51,096:INFO:_master_model_container: 14
2023-04-07 09:26:51,096:INFO:_display_container: 2
2023-04-07 09:26:51,098:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)]
2023-04-07 09:26:51,098:INFO:compare_models() successfully completed......................................
2023-04-07 09:33:15,785:INFO:PyCaret ClassificationExperiment
2023-04-07 09:33:15,785:INFO:Logging name: clf-default-name
2023-04-07 09:33:15,785:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 09:33:15,786:INFO:version 3.0.0
2023-04-07 09:33:15,786:INFO:Initializing setup()
2023-04-07 09:33:15,786:INFO:self.USI: 8c01
2023-04-07 09:33:15,786:INFO:self._variable_keys: {'USI', 'pipeline', 'gpu_n_jobs_param', 'seed', 'data', 'X_test', 'memory', 'fold_shuffle_param', '_ml_usecase', '_available_plots', 'fix_imbalance', 'idx', 'exp_id', 'X', 'html_param', 'fold_generator', 'fold_groups_param', 'y_train', 'X_train', 'is_multiclass', 'n_jobs_param', 'y', 'y_test', 'target_param', 'log_plots_param', 'logging_param', 'gpu_param', 'exp_name_log'}
2023-04-07 09:33:15,786:INFO:Checking environment
2023-04-07 09:33:15,786:INFO:python_version: 3.8.16
2023-04-07 09:33:15,786:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 09:33:15,786:INFO:machine: AMD64
2023-04-07 09:33:15,786:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 09:33:15,788:INFO:Memory: svmem(total=8395538432, available=2829287424, percent=66.3, used=5566251008, free=2829287424)
2023-04-07 09:33:15,788:INFO:Physical Core: 4
2023-04-07 09:33:15,789:INFO:Logical Core: 8
2023-04-07 09:33:15,789:INFO:Checking libraries
2023-04-07 09:33:15,789:INFO:System:
2023-04-07 09:33:15,789:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 09:33:15,789:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 09:33:15,789:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 09:33:15,789:INFO:PyCaret required dependencies:
2023-04-07 09:33:15,789:INFO:                 pip: 23.0.1
2023-04-07 09:33:15,789:INFO:          setuptools: 65.6.3
2023-04-07 09:33:15,789:INFO:             pycaret: 3.0.0
2023-04-07 09:33:15,789:INFO:             IPython: 8.11.0
2023-04-07 09:33:15,789:INFO:          ipywidgets: 8.0.4
2023-04-07 09:33:15,789:INFO:                tqdm: 4.64.1
2023-04-07 09:33:15,789:INFO:               numpy: 1.23.5
2023-04-07 09:33:15,789:INFO:              pandas: 1.5.3
2023-04-07 09:33:15,790:INFO:              jinja2: 3.1.2
2023-04-07 09:33:15,790:INFO:               scipy: 1.9.3
2023-04-07 09:33:15,790:INFO:              joblib: 1.2.0
2023-04-07 09:33:15,790:INFO:             sklearn: 1.2.2
2023-04-07 09:33:15,790:INFO:                pyod: 1.0.9
2023-04-07 09:33:15,790:INFO:            imblearn: 0.10.1
2023-04-07 09:33:15,790:INFO:   category_encoders: 2.6.0
2023-04-07 09:33:15,790:INFO:            lightgbm: 3.3.5
2023-04-07 09:33:15,790:INFO:               numba: 0.56.4
2023-04-07 09:33:15,790:INFO:            requests: 2.28.2
2023-04-07 09:33:15,790:INFO:          matplotlib: 3.6.3
2023-04-07 09:33:15,790:INFO:          scikitplot: 0.3.7
2023-04-07 09:33:15,790:INFO:         yellowbrick: 1.5
2023-04-07 09:33:15,790:INFO:              plotly: 5.14.1
2023-04-07 09:33:15,790:INFO:             kaleido: 0.2.1
2023-04-07 09:33:15,790:INFO:         statsmodels: 0.13.5
2023-04-07 09:33:15,791:INFO:              sktime: 0.17.0
2023-04-07 09:33:15,791:INFO:               tbats: 1.1.2
2023-04-07 09:33:15,791:INFO:            pmdarima: 2.0.3
2023-04-07 09:33:15,791:INFO:              psutil: 5.9.4
2023-04-07 09:33:15,791:INFO:PyCaret optional dependencies:
2023-04-07 09:33:15,791:INFO:                shap: 0.41.0
2023-04-07 09:33:15,791:INFO:           interpret: Not installed
2023-04-07 09:33:15,791:INFO:                umap: Not installed
2023-04-07 09:33:15,791:INFO:    pandas_profiling: 4.1.0
2023-04-07 09:33:15,791:INFO:  explainerdashboard: Not installed
2023-04-07 09:33:15,791:INFO:             autoviz: Not installed
2023-04-07 09:33:15,791:INFO:           fairlearn: Not installed
2023-04-07 09:33:15,791:INFO:             xgboost: Not installed
2023-04-07 09:33:15,791:INFO:            catboost: Not installed
2023-04-07 09:33:15,791:INFO:              kmodes: Not installed
2023-04-07 09:33:15,791:INFO:             mlxtend: Not installed
2023-04-07 09:33:15,791:INFO:       statsforecast: Not installed
2023-04-07 09:33:15,792:INFO:        tune_sklearn: Not installed
2023-04-07 09:33:15,792:INFO:                 ray: Not installed
2023-04-07 09:33:15,792:INFO:            hyperopt: Not installed
2023-04-07 09:33:15,792:INFO:              optuna: Not installed
2023-04-07 09:33:15,792:INFO:               skopt: Not installed
2023-04-07 09:33:15,792:INFO:              mlflow: Not installed
2023-04-07 09:33:15,792:INFO:              gradio: Not installed
2023-04-07 09:33:15,792:INFO:             fastapi: Not installed
2023-04-07 09:33:15,792:INFO:             uvicorn: Not installed
2023-04-07 09:33:15,792:INFO:              m2cgen: Not installed
2023-04-07 09:33:15,792:INFO:           evidently: Not installed
2023-04-07 09:33:15,792:INFO:               fugue: Not installed
2023-04-07 09:33:15,792:INFO:           streamlit: 1.20.0
2023-04-07 09:33:15,792:INFO:             prophet: Not installed
2023-04-07 09:33:15,792:INFO:None
2023-04-07 09:33:15,792:INFO:Set up data.
2023-04-07 09:33:15,802:INFO:Set up train/test split.
2023-04-07 09:33:15,809:INFO:Set up index.
2023-04-07 09:33:15,809:INFO:Set up folding strategy.
2023-04-07 09:33:15,810:INFO:Assigning column types.
2023-04-07 09:33:15,814:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 09:33:15,867:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:33:15,868:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:33:15,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:15,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:15,955:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:33:15,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:33:15,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:15,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:15,989:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 09:33:16,043:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:33:16,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,130:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:33:16,163:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,164:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 09:33:16,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,344:INFO:Preparing preprocessing pipeline...
2023-04-07 09:33:16,345:INFO:Set up simple imputation.
2023-04-07 09:33:16,348:INFO:Set up encoding of ordinal features.
2023-04-07 09:33:16,351:INFO:Set up encoding of categorical features.
2023-04-07 09:33:16,450:INFO:Finished creating preprocessing pipeline.
2023-04-07 09:33:16,493:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imp...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'who', 'deck'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'who',
                                                                    'deck'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 09:33:16,493:INFO:Creating final display dataframe.
2023-04-07 09:33:16,836:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 22)
5   Transformed train set shape         (623, 22)
6    Transformed test set shape         (268, 22)
7               Ignore features                 3
8              Ordinal features                 2
9              Numeric features                 4
10         Categorical features                 4
11     Rows with missing values             79.6%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation              mean
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              8c01
2023-04-07 09:33:16,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:16,938:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:17,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:17,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:33:17,035:INFO:setup() successfully completed in 1.34s...............
2023-04-07 09:36:24,353:INFO:PyCaret ClassificationExperiment
2023-04-07 09:36:24,353:INFO:Logging name: clf-default-name
2023-04-07 09:36:24,353:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 09:36:24,353:INFO:version 3.0.0
2023-04-07 09:36:24,353:INFO:Initializing setup()
2023-04-07 09:36:24,353:INFO:self.USI: 0dc8
2023-04-07 09:36:24,353:INFO:self._variable_keys: {'USI', 'pipeline', 'gpu_n_jobs_param', 'seed', 'data', 'X_test', 'memory', 'fold_shuffle_param', '_ml_usecase', '_available_plots', 'fix_imbalance', 'idx', 'exp_id', 'X', 'html_param', 'fold_generator', 'fold_groups_param', 'y_train', 'X_train', 'is_multiclass', 'n_jobs_param', 'y', 'y_test', 'target_param', 'log_plots_param', 'logging_param', 'gpu_param', 'exp_name_log'}
2023-04-07 09:36:24,353:INFO:Checking environment
2023-04-07 09:36:24,353:INFO:python_version: 3.8.16
2023-04-07 09:36:24,353:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 09:36:24,353:INFO:machine: AMD64
2023-04-07 09:36:24,353:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 09:36:24,355:INFO:Memory: svmem(total=8395538432, available=2836357120, percent=66.2, used=5559181312, free=2836357120)
2023-04-07 09:36:24,355:INFO:Physical Core: 4
2023-04-07 09:36:24,355:INFO:Logical Core: 8
2023-04-07 09:36:24,356:INFO:Checking libraries
2023-04-07 09:36:24,356:INFO:System:
2023-04-07 09:36:24,356:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 09:36:24,356:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 09:36:24,356:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 09:36:24,356:INFO:PyCaret required dependencies:
2023-04-07 09:36:24,356:INFO:                 pip: 23.0.1
2023-04-07 09:36:24,356:INFO:          setuptools: 65.6.3
2023-04-07 09:36:24,356:INFO:             pycaret: 3.0.0
2023-04-07 09:36:24,356:INFO:             IPython: 8.11.0
2023-04-07 09:36:24,356:INFO:          ipywidgets: 8.0.4
2023-04-07 09:36:24,356:INFO:                tqdm: 4.64.1
2023-04-07 09:36:24,357:INFO:               numpy: 1.23.5
2023-04-07 09:36:24,357:INFO:              pandas: 1.5.3
2023-04-07 09:36:24,357:INFO:              jinja2: 3.1.2
2023-04-07 09:36:24,357:INFO:               scipy: 1.9.3
2023-04-07 09:36:24,357:INFO:              joblib: 1.2.0
2023-04-07 09:36:24,357:INFO:             sklearn: 1.2.2
2023-04-07 09:36:24,357:INFO:                pyod: 1.0.9
2023-04-07 09:36:24,357:INFO:            imblearn: 0.10.1
2023-04-07 09:36:24,357:INFO:   category_encoders: 2.6.0
2023-04-07 09:36:24,357:INFO:            lightgbm: 3.3.5
2023-04-07 09:36:24,357:INFO:               numba: 0.56.4
2023-04-07 09:36:24,357:INFO:            requests: 2.28.2
2023-04-07 09:36:24,357:INFO:          matplotlib: 3.6.3
2023-04-07 09:36:24,357:INFO:          scikitplot: 0.3.7
2023-04-07 09:36:24,357:INFO:         yellowbrick: 1.5
2023-04-07 09:36:24,357:INFO:              plotly: 5.14.1
2023-04-07 09:36:24,358:INFO:             kaleido: 0.2.1
2023-04-07 09:36:24,358:INFO:         statsmodels: 0.13.5
2023-04-07 09:36:24,358:INFO:              sktime: 0.17.0
2023-04-07 09:36:24,358:INFO:               tbats: 1.1.2
2023-04-07 09:36:24,358:INFO:            pmdarima: 2.0.3
2023-04-07 09:36:24,358:INFO:              psutil: 5.9.4
2023-04-07 09:36:24,358:INFO:PyCaret optional dependencies:
2023-04-07 09:36:24,358:INFO:                shap: 0.41.0
2023-04-07 09:36:24,358:INFO:           interpret: Not installed
2023-04-07 09:36:24,358:INFO:                umap: Not installed
2023-04-07 09:36:24,358:INFO:    pandas_profiling: 4.1.0
2023-04-07 09:36:24,358:INFO:  explainerdashboard: Not installed
2023-04-07 09:36:24,358:INFO:             autoviz: Not installed
2023-04-07 09:36:24,358:INFO:           fairlearn: Not installed
2023-04-07 09:36:24,358:INFO:             xgboost: Not installed
2023-04-07 09:36:24,358:INFO:            catboost: Not installed
2023-04-07 09:36:24,359:INFO:              kmodes: Not installed
2023-04-07 09:36:24,359:INFO:             mlxtend: Not installed
2023-04-07 09:36:24,359:INFO:       statsforecast: Not installed
2023-04-07 09:36:24,359:INFO:        tune_sklearn: Not installed
2023-04-07 09:36:24,359:INFO:                 ray: Not installed
2023-04-07 09:36:24,359:INFO:            hyperopt: Not installed
2023-04-07 09:36:24,359:INFO:              optuna: Not installed
2023-04-07 09:36:24,359:INFO:               skopt: Not installed
2023-04-07 09:36:24,359:INFO:              mlflow: Not installed
2023-04-07 09:36:24,359:INFO:              gradio: Not installed
2023-04-07 09:36:24,359:INFO:             fastapi: Not installed
2023-04-07 09:36:24,359:INFO:             uvicorn: Not installed
2023-04-07 09:36:24,359:INFO:              m2cgen: Not installed
2023-04-07 09:36:24,359:INFO:           evidently: Not installed
2023-04-07 09:36:24,359:INFO:               fugue: Not installed
2023-04-07 09:36:24,359:INFO:           streamlit: 1.20.0
2023-04-07 09:36:24,359:INFO:             prophet: Not installed
2023-04-07 09:36:24,360:INFO:None
2023-04-07 09:36:24,360:INFO:Set up data.
2023-04-07 09:36:24,369:INFO:Set up train/test split.
2023-04-07 09:36:24,376:INFO:Set up index.
2023-04-07 09:36:24,376:INFO:Set up folding strategy.
2023-04-07 09:36:24,376:INFO:Assigning column types.
2023-04-07 09:36:24,381:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 09:36:24,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:36:24,435:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:36:24,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,522:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:36:24,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:36:24,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,557:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 09:36:24,609:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:36:24,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:36:24,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,732:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 09:36:24,846:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:24,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:25,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:25,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:25,057:INFO:Preparing preprocessing pipeline...
2023-04-07 09:36:25,059:INFO:Set up iterative imputation.
2023-04-07 09:36:25,059:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-04-07 09:36:25,070:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-04-07 09:36:25,079:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-04-07 09:36:25,176:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-04-07 09:36:25,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:25,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:25,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:25,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:25,439:INFO:Set up encoding of ordinal features.
2023-04-07 09:36:25,444:INFO:Set up encoding of categorical features.
2023-04-07 09:36:25,490:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:25,549:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:25,591:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:25,634:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:25,680:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:25,717:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:25,765:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:25,816:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:25,861:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\lightgbm\basic.py:2065: UserWarning: Using categorical_feature in Dataset.
  _log_warning('Using categorical_feature in Dataset.')

2023-04-07 09:36:26,303:INFO:Finished creating preprocessing pipeline.
2023-04-07 09:36:26,374:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1.0,
                                                                                              importance_type='split',
                                                                                              learning_rate=0.1,
                                                                                              max_depth=-1,
                                                                                              min_chi...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'who', 'deck'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'who',
                                                                    'deck'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 09:36:26,375:INFO:Creating final display dataframe.
2023-04-07 09:36:27,517:INFO:Setup _display_container:                         Description             Value
0                        Session id               123
1                            Target          survived
2                       Target type            Binary
3               Original data shape         (891, 15)
4            Transformed data shape         (891, 22)
5       Transformed train set shape         (623, 22)
6        Transformed test set shape         (268, 22)
7                   Ignore features                 3
8                  Ordinal features                 2
9                  Numeric features                 4
10             Categorical features                 4
11         Rows with missing values             79.6%
12                       Preprocess              True
13                  Imputation type         iterative
14  Iterative imputation iterations                 5
15        Numeric iterative imputer          lightgbm
16    Categorical iterative imputer          lightgbm
17         Maximum one-hot encoding                25
18                  Encoding method              None
19                   Fold Generator   StratifiedKFold
20                      Fold Number                10
21                         CPU Jobs                -1
22                          Use GPU             False
23                   Log Experiment             False
24                  Experiment Name  clf-default-name
25                              USI              0dc8
2023-04-07 09:36:27,639:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:27,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:27,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:27,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:27,751:INFO:setup() successfully completed in 3.49s...............
2023-04-07 09:36:30,947:INFO:PyCaret ClassificationExperiment
2023-04-07 09:36:30,948:INFO:Logging name: clf-default-name
2023-04-07 09:36:30,948:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 09:36:30,948:INFO:version 3.0.0
2023-04-07 09:36:30,948:INFO:Initializing setup()
2023-04-07 09:36:30,948:INFO:self.USI: f021
2023-04-07 09:36:30,948:INFO:self._variable_keys: {'USI', 'pipeline', 'gpu_n_jobs_param', 'seed', 'data', 'X_test', 'memory', 'fold_shuffle_param', '_ml_usecase', '_available_plots', 'fix_imbalance', 'idx', 'exp_id', 'X', 'html_param', 'fold_generator', 'fold_groups_param', 'y_train', 'X_train', 'is_multiclass', 'n_jobs_param', 'y', 'y_test', 'target_param', 'log_plots_param', 'logging_param', 'gpu_param', 'exp_name_log'}
2023-04-07 09:36:30,948:INFO:Checking environment
2023-04-07 09:36:30,948:INFO:python_version: 3.8.16
2023-04-07 09:36:30,948:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 09:36:30,948:INFO:machine: AMD64
2023-04-07 09:36:30,948:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 09:36:30,951:INFO:Memory: svmem(total=8395538432, available=2852220928, percent=66.0, used=5543317504, free=2852220928)
2023-04-07 09:36:30,951:INFO:Physical Core: 4
2023-04-07 09:36:30,952:INFO:Logical Core: 8
2023-04-07 09:36:30,952:INFO:Checking libraries
2023-04-07 09:36:30,952:INFO:System:
2023-04-07 09:36:30,952:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 09:36:30,952:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 09:36:30,952:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 09:36:30,952:INFO:PyCaret required dependencies:
2023-04-07 09:36:30,952:INFO:                 pip: 23.0.1
2023-04-07 09:36:30,953:INFO:          setuptools: 65.6.3
2023-04-07 09:36:30,953:INFO:             pycaret: 3.0.0
2023-04-07 09:36:30,953:INFO:             IPython: 8.11.0
2023-04-07 09:36:30,953:INFO:          ipywidgets: 8.0.4
2023-04-07 09:36:30,953:INFO:                tqdm: 4.64.1
2023-04-07 09:36:30,953:INFO:               numpy: 1.23.5
2023-04-07 09:36:30,953:INFO:              pandas: 1.5.3
2023-04-07 09:36:30,953:INFO:              jinja2: 3.1.2
2023-04-07 09:36:30,953:INFO:               scipy: 1.9.3
2023-04-07 09:36:30,954:INFO:              joblib: 1.2.0
2023-04-07 09:36:30,954:INFO:             sklearn: 1.2.2
2023-04-07 09:36:30,954:INFO:                pyod: 1.0.9
2023-04-07 09:36:30,954:INFO:            imblearn: 0.10.1
2023-04-07 09:36:30,954:INFO:   category_encoders: 2.6.0
2023-04-07 09:36:30,954:INFO:            lightgbm: 3.3.5
2023-04-07 09:36:30,954:INFO:               numba: 0.56.4
2023-04-07 09:36:30,954:INFO:            requests: 2.28.2
2023-04-07 09:36:30,954:INFO:          matplotlib: 3.6.3
2023-04-07 09:36:30,954:INFO:          scikitplot: 0.3.7
2023-04-07 09:36:30,955:INFO:         yellowbrick: 1.5
2023-04-07 09:36:30,955:INFO:              plotly: 5.14.1
2023-04-07 09:36:30,955:INFO:             kaleido: 0.2.1
2023-04-07 09:36:30,955:INFO:         statsmodels: 0.13.5
2023-04-07 09:36:30,955:INFO:              sktime: 0.17.0
2023-04-07 09:36:30,955:INFO:               tbats: 1.1.2
2023-04-07 09:36:30,955:INFO:            pmdarima: 2.0.3
2023-04-07 09:36:30,955:INFO:              psutil: 5.9.4
2023-04-07 09:36:30,955:INFO:PyCaret optional dependencies:
2023-04-07 09:36:30,956:INFO:                shap: 0.41.0
2023-04-07 09:36:30,956:INFO:           interpret: Not installed
2023-04-07 09:36:30,956:INFO:                umap: Not installed
2023-04-07 09:36:30,956:INFO:    pandas_profiling: 4.1.0
2023-04-07 09:36:30,956:INFO:  explainerdashboard: Not installed
2023-04-07 09:36:30,956:INFO:             autoviz: Not installed
2023-04-07 09:36:30,956:INFO:           fairlearn: Not installed
2023-04-07 09:36:30,956:INFO:             xgboost: Not installed
2023-04-07 09:36:30,956:INFO:            catboost: Not installed
2023-04-07 09:36:30,957:INFO:              kmodes: Not installed
2023-04-07 09:36:30,957:INFO:             mlxtend: Not installed
2023-04-07 09:36:30,957:INFO:       statsforecast: Not installed
2023-04-07 09:36:30,957:INFO:        tune_sklearn: Not installed
2023-04-07 09:36:30,957:INFO:                 ray: Not installed
2023-04-07 09:36:30,957:INFO:            hyperopt: Not installed
2023-04-07 09:36:30,957:INFO:              optuna: Not installed
2023-04-07 09:36:30,957:INFO:               skopt: Not installed
2023-04-07 09:36:30,957:INFO:              mlflow: Not installed
2023-04-07 09:36:30,957:INFO:              gradio: Not installed
2023-04-07 09:36:30,958:INFO:             fastapi: Not installed
2023-04-07 09:36:30,958:INFO:             uvicorn: Not installed
2023-04-07 09:36:30,958:INFO:              m2cgen: Not installed
2023-04-07 09:36:30,958:INFO:           evidently: Not installed
2023-04-07 09:36:30,958:INFO:               fugue: Not installed
2023-04-07 09:36:30,958:INFO:           streamlit: 1.20.0
2023-04-07 09:36:30,958:INFO:             prophet: Not installed
2023-04-07 09:36:30,958:INFO:None
2023-04-07 09:36:30,958:INFO:Set up data.
2023-04-07 09:36:30,972:INFO:Set up train/test split.
2023-04-07 09:36:30,982:INFO:Set up index.
2023-04-07 09:36:30,982:INFO:Set up folding strategy.
2023-04-07 09:36:30,982:INFO:Assigning column types.
2023-04-07 09:36:30,989:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 09:36:31,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:36:31,056:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:36:31,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,160:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 09:36:31,161:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:36:31,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,198:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 09:36:31,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:36:31,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,429:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 09:36:31,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,478:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 09:36:31,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:31,708:INFO:Preparing preprocessing pipeline...
2023-04-07 09:36:31,710:INFO:Set up simple imputation.
2023-04-07 09:36:31,714:INFO:Set up encoding of ordinal features.
2023-04-07 09:36:31,717:INFO:Set up encoding of categorical features.
2023-04-07 09:36:31,865:INFO:Finished creating preprocessing pipeline.
2023-04-07 09:36:31,914:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_i...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'who', 'deck'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'who',
                                                                    'deck'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 09:36:31,914:INFO:Creating final display dataframe.
2023-04-07 09:36:32,248:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 22)
5   Transformed train set shape         (623, 22)
6    Transformed test set shape         (268, 22)
7               Ignore features                 3
8              Ordinal features                 2
9              Numeric features                 4
10         Categorical features                 4
11     Rows with missing values             79.6%
12                   Preprocess              True
13              Imputation type            simple
14           Numeric imputation            median
15       Categorical imputation              mode
16     Maximum one-hot encoding                25
17              Encoding method              None
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              f021
2023-04-07 09:36:32,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:32,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:32,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:32,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 09:36:32,483:INFO:setup() successfully completed in 1.64s...............
2023-04-07 09:38:10,319:INFO:Initializing blend_models()
2023-04-07 09:38:10,319:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B51B8815E0>, estimator_list=[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-04-07 09:38:10,320:INFO:Checking exceptions
2023-04-07 09:38:10,357:INFO:Importing libraries
2023-04-07 09:38:10,357:INFO:Copying training dataset
2023-04-07 09:38:10,364:INFO:Getting model names
2023-04-07 09:38:10,371:INFO:SubProcess create_model() called ==================================
2023-04-07 09:38:10,383:INFO:Initializing create_model()
2023-04-07 09:38:10,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B51B8815E0>, estimator=VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=123, reg_alpha=0.0,
                                             reg_lambda=0.0, silent='warn',
                                             subsample=1.0,
                                             subsample_for_bin=200000,
                                             subsample_freq=0))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B518FC8D00>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 09:38:10,383:INFO:Checking exceptions
2023-04-07 09:38:10,383:INFO:Importing libraries
2023-04-07 09:38:10,384:INFO:Copying training dataset
2023-04-07 09:38:10,390:INFO:Defining folds
2023-04-07 09:38:10,390:INFO:Declaring metric variables
2023-04-07 09:38:10,397:INFO:Importing untrained model
2023-04-07 09:38:10,398:INFO:Declaring custom model
2023-04-07 09:38:10,408:INFO:Voting Classifier Imported successfully
2023-04-07 09:38:10,423:INFO:Starting cross validation
2023-04-07 09:38:10,426:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 09:38:19,210:INFO:Calculating mean and std
2023-04-07 09:38:19,212:INFO:Creating metrics dataframe
2023-04-07 09:38:19,223:INFO:Finalizing model
2023-04-07 09:38:21,987:INFO:Uploading results into container
2023-04-07 09:38:21,989:INFO:Uploading model into container now
2023-04-07 09:38:21,989:INFO:_master_model_container: 1
2023-04-07 09:38:21,990:INFO:_display_container: 2
2023-04-07 09:38:22,000:INFO:VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=123, reg_alpha=0.0,
                                             reg_lambda=0.0, silent='warn',
                                             subsample=1.0,
                                             subsample_for_bin=200000,
                                             subsample_freq=0))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 09:38:22,000:INFO:create_model() successfully completed......................................
2023-04-07 09:38:22,128:INFO:SubProcess create_model() end ==================================
2023-04-07 09:38:22,159:INFO:_master_model_container: 1
2023-04-07 09:38:22,159:INFO:_display_container: 2
2023-04-07 09:38:22,170:INFO:VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=123, reg_alpha=0.0,
                                             reg_lambda=0.0, silent='warn',
                                             subsample=1.0,
                                             subsample_for_bin=200000,
                                             subsample_freq=0))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 09:38:22,170:INFO:blend_models() successfully completed......................................
2023-04-07 09:38:56,184:INFO:Initializing predict_model()
2023-04-07 09:38:56,185:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B51B8815E0>, estimator=VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=123, reg_alpha=0.0,
                                             reg_lambda=0.0, silent='warn',
                                             subsample=1.0,
                                             subsample_for_bin=200000,
                                             subsample_freq=0))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001B5196A5820>)
2023-04-07 09:38:56,185:INFO:Checking exceptions
2023-04-07 09:38:56,185:INFO:Preloading libraries
2023-04-07 09:40:09,955:INFO:Initializing predict_model()
2023-04-07 09:40:09,955:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B51B8815E0>, estimator=VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=123, reg_alpha=0.0,
                                             reg_lambda=0.0, silent='warn',
                                             subsample=1.0,
                                             subsample_for_bin=200000,
                                             subsample_freq=0))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001B5196A5CA0>)
2023-04-07 09:40:09,956:INFO:Checking exceptions
2023-04-07 09:40:09,956:INFO:Preloading libraries
2023-04-07 09:40:09,958:INFO:Set up data.
2023-04-07 09:40:09,974:INFO:Set up index.
2023-04-07 09:41:58,463:INFO:Initializing finalize_model()
2023-04-07 09:41:58,464:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B51B8815E0>, estimator=VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=123, reg_alpha=0.0,
                                             reg_lambda=0.0, silent='warn',
                                             subsample=1.0,
                                             subsample_for_bin=200000,
                                             subsample_freq=0))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-04-07 09:41:58,472:INFO:Finalizing VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=123, reg_alpha=0.0,
                                             reg_lambda=0.0, silent='warn',
                                             subsample=1.0,
                                             subsample_for_bin=200000,
                                             subsample_freq=0))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 09:41:58,483:INFO:Initializing create_model()
2023-04-07 09:41:58,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B51B8815E0>, estimator=VotingClassifier(estimators=[('Gradient Boosting Classifier',
                              GradientBoostingClassifier(ccp_alpha=0.0,
                                                         criterion='friedman_mse',
                                                         init=None,
                                                         learning_rate=0.1,
                                                         loss='log_loss',
                                                         max_depth=3,
                                                         max_features=None,
                                                         max_leaf_nodes=None,
                                                         min_impurity_decrease=0.0,
                                                         min_samples_leaf=1,
                                                         min_samples_split=2,
                                                         min_weight_fraction_leaf=0.0,
                                                         n_estimators=100,
                                                         n_iter_no_change=Non...
                                             importance_type='split',
                                             learning_rate=0.1, max_depth=-1,
                                             min_child_samples=20,
                                             min_child_weight=0.001,
                                             min_split_gain=0.0,
                                             n_estimators=100, n_jobs=-1,
                                             num_leaves=31, objective=None,
                                             random_state=123, reg_alpha=0.0,
                                             reg_lambda=0.0, silent='warn',
                                             subsample=1.0,
                                             subsample_for_bin=200000,
                                             subsample_freq=0))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-04-07 09:41:58,484:INFO:Checking exceptions
2023-04-07 09:41:58,485:INFO:Importing libraries
2023-04-07 09:41:58,485:INFO:Copying training dataset
2023-04-07 09:41:58,485:INFO:Defining folds
2023-04-07 09:41:58,486:INFO:Declaring metric variables
2023-04-07 09:41:58,486:INFO:Importing untrained model
2023-04-07 09:41:58,486:INFO:Declaring custom model
2023-04-07 09:41:58,488:INFO:Voting Classifier Imported successfully
2023-04-07 09:41:58,489:INFO:Cross validation set to False
2023-04-07 09:41:58,489:INFO:Fitting Model
2023-04-07 09:41:59,036:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_i...
                                                              learning_rate=0.1,
                                                              max_depth=-1,
                                                              min_child_samples=20,
                                                              min_child_weight=0.001,
                                                              min_split_gain=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              num_leaves=31,
                                                              objective=None,
                                                              random_state=123,
                                                              reg_alpha=0.0,
                                                              reg_lambda=0.0,
                                                              silent='warn',
                                                              subsample=1.0,
                                                              subsample_for_bin=200000,
                                                              subsample_freq=0))],
                                  flatten_transform=True, n_jobs=-1,
                                  verbose=False, voting='soft',
                                  weights=None))],
         verbose=False)
2023-04-07 09:41:59,036:INFO:create_model() successfully completed......................................
2023-04-07 09:41:59,128:INFO:_master_model_container: 1
2023-04-07 09:41:59,128:INFO:_display_container: 4
2023-04-07 09:41:59,229:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_i...
                                                              learning_rate=0.1,
                                                              max_depth=-1,
                                                              min_child_samples=20,
                                                              min_child_weight=0.001,
                                                              min_split_gain=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              num_leaves=31,
                                                              objective=None,
                                                              random_state=123,
                                                              reg_alpha=0.0,
                                                              reg_lambda=0.0,
                                                              silent='warn',
                                                              subsample=1.0,
                                                              subsample_for_bin=200000,
                                                              subsample_freq=0))],
                                  flatten_transform=True, n_jobs=-1,
                                  verbose=False, voting='soft',
                                  weights=None))],
         verbose=False)
2023-04-07 09:41:59,229:INFO:finalize_model() successfully completed......................................
2023-04-07 09:42:23,195:INFO:Initializing save_model()
2023-04-07 09:42:23,195:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_i...
                                                              learning_rate=0.1,
                                                              max_depth=-1,
                                                              min_child_samples=20,
                                                              min_child_weight=0.001,
                                                              min_split_gain=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              num_leaves=31,
                                                              objective=None,
                                                              random_state=123,
                                                              reg_alpha=0.0,
                                                              reg_lambda=0.0,
                                                              silent='warn',
                                                              subsample=1.0,
                                                              subsample_for_bin=200000,
                                                              subsample_freq=0))],
                                  flatten_transform=True, n_jobs=-1,
                                  verbose=False, voting='soft',
                                  weights=None))],
         verbose=False), model_name=mymodel-01, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_i...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'who', 'deck'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'who',
                                                                    'deck'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-07 09:42:23,195:INFO:Adding model into prep_pipe
2023-04-07 09:42:23,226:WARNING:Only Model saved as it was a pipeline.
2023-04-07 09:42:23,273:INFO:mymodel-01.pkl saved in current working directory
2023-04-07 09:42:23,357:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_i...
                                                              learning_rate=0.1,
                                                              max_depth=-1,
                                                              min_child_samples=20,
                                                              min_child_weight=0.001,
                                                              min_split_gain=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              num_leaves=31,
                                                              objective=None,
                                                              random_state=123,
                                                              reg_alpha=0.0,
                                                              reg_lambda=0.0,
                                                              silent='warn',
                                                              subsample=1.0,
                                                              subsample_for_bin=200000,
                                                              subsample_freq=0))],
                                  flatten_transform=True, n_jobs=-1,
                                  verbose=False, voting='soft',
                                  weights=None))],
         verbose=False)
2023-04-07 09:42:23,357:INFO:save_model() successfully completed......................................
2023-04-07 09:43:07,563:INFO:Initializing load_model()
2023-04-07 09:43:07,563:INFO:load_model(model_name=mymodel-01, platform=None, authentication=None, verbose=True)
2023-04-07 09:43:24,769:INFO:Initializing predict_model()
2023-04-07 09:43:24,769:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B51B8815E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='median',
                                                              verbose='deprecated'))),
                ('categorical_i...
                                                              learning_rate=0.1,
                                                              max_depth=-1,
                                                              min_child_samples=20,
                                                              min_child_weight=0.001,
                                                              min_split_gain=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              num_leaves=31,
                                                              objective=None,
                                                              random_state=123,
                                                              reg_alpha=0.0,
                                                              reg_lambda=0.0,
                                                              silent='warn',
                                                              subsample=1.0,
                                                              subsample_for_bin=200000,
                                                              subsample_freq=0))],
                                  flatten_transform=True, n_jobs=-1,
                                  verbose=False, voting='soft',
                                  weights=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001B5196A5DC0>)
2023-04-07 09:43:24,770:INFO:Checking exceptions
2023-04-07 09:43:24,770:INFO:Preloading libraries
2023-04-07 09:43:24,772:INFO:Set up data.
2023-04-07 09:43:24,786:INFO:Set up index.
2023-04-07 10:04:46,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 10:04:46,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 10:04:46,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 10:04:46,796:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 10:04:47,591:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-07 10:04:49,924:INFO:Initializing load_model()
2023-04-07 10:04:49,924:INFO:load_model(model_name=mymodel-01, platform=None, authentication=None, verbose=True)
2023-04-07 10:06:39,538:INFO:Initializing load_model()
2023-04-07 10:06:39,538:INFO:load_model(model_name=mymodel-01, platform=None, authentication=None, verbose=True)
2023-04-07 10:07:06,608:INFO:Initializing load_model()
2023-04-07 10:07:06,609:INFO:load_model(model_name=mymodel-01, platform=None, authentication=None, verbose=True)
2023-04-07 10:07:06,782:INFO:Initializing predict_model()
2023-04-07 10:07:06,782:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F32E47520>, estimator=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(strategy='median'))),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'embarked', 'who', 'deck'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('or...
                                                                    'deck'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 VotingClassifier(estimators=[('Gradient Boosting Classifier',
                                               GradientBoostingClassifier(random_state=123)),
                                              ('Logistic Regression',
                                               LogisticRegression(max_iter=1000,
                                                                  random_state=123)),
                                              ('Light Gradient Boosting '
                                               'Machine',
                                               LGBMClassifier(random_state=123))],
                                  n_jobs=-1, voting='soft'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000022F46B45C10>)
2023-04-07 10:07:06,782:INFO:Checking exceptions
2023-04-07 10:07:06,782:INFO:Preloading libraries
2023-04-07 10:07:06,783:INFO:Set up data.
2023-04-07 10:07:06,793:INFO:Set up index.
2023-04-07 10:08:08,843:INFO:Initializing load_model()
2023-04-07 10:08:08,843:INFO:load_model(model_name=mymodel-01, platform=None, authentication=None, verbose=True)
2023-04-07 10:11:54,793:INFO:Initializing load_model()
2023-04-07 10:11:54,793:INFO:load_model(model_name=mymodel-01, platform=None, authentication=None, verbose=True)
2023-04-07 10:11:54,960:INFO:Initializing predict_model()
2023-04-07 10:11:54,960:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022F46BFEF70>, estimator=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'fare', 'sibsp', 'parch'],
                                    transformer=SimpleImputer(strategy='median'))),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'embarked', 'who', 'deck'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('or...
                                                                    'deck'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 VotingClassifier(estimators=[('Gradient Boosting Classifier',
                                               GradientBoostingClassifier(random_state=123)),
                                              ('Logistic Regression',
                                               LogisticRegression(max_iter=1000,
                                                                  random_state=123)),
                                              ('Light Gradient Boosting '
                                               'Machine',
                                               LGBMClassifier(random_state=123))],
                                  n_jobs=-1, voting='soft'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000022F322C9D30>)
2023-04-07 10:11:54,960:INFO:Checking exceptions
2023-04-07 10:11:54,960:INFO:Preloading libraries
2023-04-07 10:11:54,961:INFO:Set up data.
2023-04-07 10:11:54,971:INFO:Set up index.
2023-04-07 10:20:08,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 10:20:08,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 10:20:08,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 10:20:08,770:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-07 10:20:09,850:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-07 10:28:13,099:INFO:PyCaret ClassificationExperiment
2023-04-07 10:28:13,099:INFO:Logging name: clf-default-name
2023-04-07 10:28:13,099:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 10:28:13,099:INFO:version 3.0.0
2023-04-07 10:28:13,099:INFO:Initializing setup()
2023-04-07 10:28:13,099:INFO:self.USI: 9e89
2023-04-07 10:28:13,099:INFO:self._variable_keys: {'target_param', 'fold_shuffle_param', 'fold_groups_param', 'fold_generator', 'gpu_param', 'logging_param', 'fix_imbalance', 'log_plots_param', 'n_jobs_param', '_ml_usecase', 'USI', 'is_multiclass', 'exp_id', 'pipeline', 'gpu_n_jobs_param', 'exp_name_log', 'y_test', 'X_test', 'y_train', 'y', '_available_plots', 'html_param', 'idx', 'X', 'X_train', 'memory', 'data', 'seed'}
2023-04-07 10:28:13,099:INFO:Checking environment
2023-04-07 10:28:13,099:INFO:python_version: 3.8.16
2023-04-07 10:28:13,099:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 10:28:13,100:INFO:machine: AMD64
2023-04-07 10:28:13,122:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 10:28:13,126:INFO:Memory: svmem(total=8395538432, available=2498691072, percent=70.2, used=5896847360, free=2498691072)
2023-04-07 10:28:13,126:INFO:Physical Core: 4
2023-04-07 10:28:13,126:INFO:Logical Core: 8
2023-04-07 10:28:13,126:INFO:Checking libraries
2023-04-07 10:28:13,126:INFO:System:
2023-04-07 10:28:13,126:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 10:28:13,126:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 10:28:13,126:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 10:28:13,126:INFO:PyCaret required dependencies:
2023-04-07 10:28:13,126:INFO:                 pip: 23.0.1
2023-04-07 10:28:13,127:INFO:          setuptools: 65.6.3
2023-04-07 10:28:13,127:INFO:             pycaret: 3.0.0
2023-04-07 10:28:13,127:INFO:             IPython: 8.11.0
2023-04-07 10:28:13,127:INFO:          ipywidgets: 8.0.4
2023-04-07 10:28:13,127:INFO:                tqdm: 4.64.1
2023-04-07 10:28:13,127:INFO:               numpy: 1.23.5
2023-04-07 10:28:13,127:INFO:              pandas: 1.5.3
2023-04-07 10:28:13,127:INFO:              jinja2: 3.1.2
2023-04-07 10:28:13,127:INFO:               scipy: 1.9.3
2023-04-07 10:28:13,127:INFO:              joblib: 1.2.0
2023-04-07 10:28:13,127:INFO:             sklearn: 1.2.2
2023-04-07 10:28:13,127:INFO:                pyod: 1.0.9
2023-04-07 10:28:13,127:INFO:            imblearn: 0.10.1
2023-04-07 10:28:13,127:INFO:   category_encoders: 2.6.0
2023-04-07 10:28:13,127:INFO:            lightgbm: 3.3.5
2023-04-07 10:28:13,127:INFO:               numba: 0.56.4
2023-04-07 10:28:13,127:INFO:            requests: 2.28.2
2023-04-07 10:28:13,127:INFO:          matplotlib: 3.6.3
2023-04-07 10:28:13,127:INFO:          scikitplot: 0.3.7
2023-04-07 10:28:13,128:INFO:         yellowbrick: 1.5
2023-04-07 10:28:13,128:INFO:              plotly: 5.14.1
2023-04-07 10:28:13,128:INFO:             kaleido: 0.2.1
2023-04-07 10:28:13,128:INFO:         statsmodels: 0.13.5
2023-04-07 10:28:13,128:INFO:              sktime: 0.17.0
2023-04-07 10:28:13,128:INFO:               tbats: 1.1.2
2023-04-07 10:28:13,128:INFO:            pmdarima: 2.0.3
2023-04-07 10:28:13,128:INFO:              psutil: 5.9.4
2023-04-07 10:28:13,128:INFO:PyCaret optional dependencies:
2023-04-07 10:28:13,145:INFO:                shap: 0.41.0
2023-04-07 10:28:13,145:INFO:           interpret: Not installed
2023-04-07 10:28:13,145:INFO:                umap: Not installed
2023-04-07 10:28:13,145:INFO:    pandas_profiling: 4.1.0
2023-04-07 10:28:13,145:INFO:  explainerdashboard: Not installed
2023-04-07 10:28:13,145:INFO:             autoviz: Not installed
2023-04-07 10:28:13,145:INFO:           fairlearn: Not installed
2023-04-07 10:28:13,145:INFO:             xgboost: Not installed
2023-04-07 10:28:13,145:INFO:            catboost: Not installed
2023-04-07 10:28:13,145:INFO:              kmodes: Not installed
2023-04-07 10:28:13,145:INFO:             mlxtend: Not installed
2023-04-07 10:28:13,145:INFO:       statsforecast: Not installed
2023-04-07 10:28:13,145:INFO:        tune_sklearn: Not installed
2023-04-07 10:28:13,146:INFO:                 ray: Not installed
2023-04-07 10:28:13,146:INFO:            hyperopt: Not installed
2023-04-07 10:28:13,146:INFO:              optuna: Not installed
2023-04-07 10:28:13,146:INFO:               skopt: Not installed
2023-04-07 10:28:13,146:INFO:              mlflow: Not installed
2023-04-07 10:28:13,146:INFO:              gradio: Not installed
2023-04-07 10:28:13,146:INFO:             fastapi: Not installed
2023-04-07 10:28:13,146:INFO:             uvicorn: Not installed
2023-04-07 10:28:13,146:INFO:              m2cgen: Not installed
2023-04-07 10:28:13,146:INFO:           evidently: Not installed
2023-04-07 10:28:13,146:INFO:               fugue: Not installed
2023-04-07 10:28:13,146:INFO:           streamlit: 1.20.0
2023-04-07 10:28:13,146:INFO:             prophet: Not installed
2023-04-07 10:28:13,146:INFO:None
2023-04-07 10:28:13,146:INFO:Set up data.
2023-04-07 10:28:13,157:INFO:Set up train/test split.
2023-04-07 10:28:13,165:INFO:Set up index.
2023-04-07 10:28:13,165:INFO:Set up folding strategy.
2023-04-07 10:28:13,166:INFO:Assigning column types.
2023-04-07 10:28:13,170:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 10:28:13,231:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 10:28:13,235:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:28:13,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,421:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 10:28:13,422:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:28:13,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,469:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 10:28:13,527:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:28:13,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,634:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:28:13,669:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,670:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 10:28:13,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:13,863:INFO:Preparing preprocessing pipeline...
2023-04-07 10:28:13,864:INFO:Set up simple imputation.
2023-04-07 10:28:13,868:INFO:Set up encoding of ordinal features.
2023-04-07 10:28:13,872:INFO:Set up encoding of categorical features.
2023-04-07 10:28:14,059:INFO:Finished creating preprocessing pipeline.
2023-04-07 10:28:14,094:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 10:28:14,094:INFO:Creating final display dataframe.
2023-04-07 10:28:14,280:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 29)
5   Transformed train set shape         (623, 29)
6    Transformed test set shape         (268, 29)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 7
10     Rows with missing values             79.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              9e89
2023-04-07 10:28:14,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:14,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:14,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:14,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:28:14,482:INFO:setup() successfully completed in 1.5s...............
2023-04-07 10:28:14,483:INFO:Initializing compare_models()
2023-04-07 10:28:14,483:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-07 10:28:14,483:INFO:Checking exceptions
2023-04-07 10:28:14,487:INFO:Preparing display monitor
2023-04-07 10:28:14,494:INFO:Initializing Logistic Regression
2023-04-07 10:28:14,494:INFO:Total runtime is 0.0 minutes
2023-04-07 10:28:14,494:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:14,494:INFO:Initializing create_model()
2023-04-07 10:28:14,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:14,494:INFO:Checking exceptions
2023-04-07 10:28:14,494:INFO:Importing libraries
2023-04-07 10:28:14,494:INFO:Copying training dataset
2023-04-07 10:28:14,498:INFO:Defining folds
2023-04-07 10:28:14,499:INFO:Declaring metric variables
2023-04-07 10:28:14,499:INFO:Importing untrained model
2023-04-07 10:28:14,499:INFO:Logistic Regression Imported successfully
2023-04-07 10:28:14,499:INFO:Starting cross validation
2023-04-07 10:28:14,501:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:22,004:INFO:Calculating mean and std
2023-04-07 10:28:22,005:INFO:Creating metrics dataframe
2023-04-07 10:28:22,144:INFO:Uploading results into container
2023-04-07 10:28:22,145:INFO:Uploading model into container now
2023-04-07 10:28:22,146:INFO:_master_model_container: 1
2023-04-07 10:28:22,146:INFO:_display_container: 2
2023-04-07 10:28:22,146:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 10:28:22,146:INFO:create_model() successfully completed......................................
2023-04-07 10:28:22,253:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:22,254:INFO:Creating metrics dataframe
2023-04-07 10:28:22,266:INFO:Initializing K Neighbors Classifier
2023-04-07 10:28:22,266:INFO:Total runtime is 0.12953584194183348 minutes
2023-04-07 10:28:22,267:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:22,267:INFO:Initializing create_model()
2023-04-07 10:28:22,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:22,268:INFO:Checking exceptions
2023-04-07 10:28:22,268:INFO:Importing libraries
2023-04-07 10:28:22,268:INFO:Copying training dataset
2023-04-07 10:28:22,278:INFO:Defining folds
2023-04-07 10:28:22,278:INFO:Declaring metric variables
2023-04-07 10:28:22,278:INFO:Importing untrained model
2023-04-07 10:28:22,279:INFO:K Neighbors Classifier Imported successfully
2023-04-07 10:28:22,279:INFO:Starting cross validation
2023-04-07 10:28:22,282:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:26,816:INFO:Calculating mean and std
2023-04-07 10:28:26,818:INFO:Creating metrics dataframe
2023-04-07 10:28:26,972:INFO:Uploading results into container
2023-04-07 10:28:26,973:INFO:Uploading model into container now
2023-04-07 10:28:26,973:INFO:_master_model_container: 2
2023-04-07 10:28:26,973:INFO:_display_container: 2
2023-04-07 10:28:26,974:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-07 10:28:26,974:INFO:create_model() successfully completed......................................
2023-04-07 10:28:27,079:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:27,079:INFO:Creating metrics dataframe
2023-04-07 10:28:27,090:INFO:Initializing Naive Bayes
2023-04-07 10:28:27,090:INFO:Total runtime is 0.20994603633880615 minutes
2023-04-07 10:28:27,091:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:27,091:INFO:Initializing create_model()
2023-04-07 10:28:27,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:27,091:INFO:Checking exceptions
2023-04-07 10:28:27,092:INFO:Importing libraries
2023-04-07 10:28:27,092:INFO:Copying training dataset
2023-04-07 10:28:27,102:INFO:Defining folds
2023-04-07 10:28:27,103:INFO:Declaring metric variables
2023-04-07 10:28:27,103:INFO:Importing untrained model
2023-04-07 10:28:27,103:INFO:Naive Bayes Imported successfully
2023-04-07 10:28:27,104:INFO:Starting cross validation
2023-04-07 10:28:27,107:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:28,019:INFO:Calculating mean and std
2023-04-07 10:28:28,021:INFO:Creating metrics dataframe
2023-04-07 10:28:28,166:INFO:Uploading results into container
2023-04-07 10:28:28,167:INFO:Uploading model into container now
2023-04-07 10:28:28,168:INFO:_master_model_container: 3
2023-04-07 10:28:28,168:INFO:_display_container: 2
2023-04-07 10:28:28,168:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 10:28:28,168:INFO:create_model() successfully completed......................................
2023-04-07 10:28:28,273:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:28,273:INFO:Creating metrics dataframe
2023-04-07 10:28:28,287:INFO:Initializing Decision Tree Classifier
2023-04-07 10:28:28,288:INFO:Total runtime is 0.22991442680358887 minutes
2023-04-07 10:28:28,288:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:28,289:INFO:Initializing create_model()
2023-04-07 10:28:28,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:28,289:INFO:Checking exceptions
2023-04-07 10:28:28,290:INFO:Importing libraries
2023-04-07 10:28:28,290:INFO:Copying training dataset
2023-04-07 10:28:28,300:INFO:Defining folds
2023-04-07 10:28:28,301:INFO:Declaring metric variables
2023-04-07 10:28:28,301:INFO:Importing untrained model
2023-04-07 10:28:28,301:INFO:Decision Tree Classifier Imported successfully
2023-04-07 10:28:28,302:INFO:Starting cross validation
2023-04-07 10:28:28,305:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:29,221:INFO:Calculating mean and std
2023-04-07 10:28:29,221:INFO:Creating metrics dataframe
2023-04-07 10:28:29,393:INFO:Uploading results into container
2023-04-07 10:28:29,395:INFO:Uploading model into container now
2023-04-07 10:28:29,396:INFO:_master_model_container: 4
2023-04-07 10:28:29,396:INFO:_display_container: 2
2023-04-07 10:28:29,397:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 10:28:29,397:INFO:create_model() successfully completed......................................
2023-04-07 10:28:29,527:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:29,528:INFO:Creating metrics dataframe
2023-04-07 10:28:29,547:INFO:Initializing SVM - Linear Kernel
2023-04-07 10:28:29,547:INFO:Total runtime is 0.250886078675588 minutes
2023-04-07 10:28:29,548:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:29,549:INFO:Initializing create_model()
2023-04-07 10:28:29,549:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:29,549:INFO:Checking exceptions
2023-04-07 10:28:29,549:INFO:Importing libraries
2023-04-07 10:28:29,550:INFO:Copying training dataset
2023-04-07 10:28:29,565:INFO:Defining folds
2023-04-07 10:28:29,565:INFO:Declaring metric variables
2023-04-07 10:28:29,566:INFO:Importing untrained model
2023-04-07 10:28:29,567:INFO:SVM - Linear Kernel Imported successfully
2023-04-07 10:28:29,568:INFO:Starting cross validation
2023-04-07 10:28:29,572:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:29,888:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:28:30,012:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:28:30,206:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:28:30,251:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:28:30,268:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:28:30,459:INFO:Calculating mean and std
2023-04-07 10:28:30,460:INFO:Creating metrics dataframe
2023-04-07 10:28:30,707:INFO:Uploading results into container
2023-04-07 10:28:30,708:INFO:Uploading model into container now
2023-04-07 10:28:30,709:INFO:_master_model_container: 5
2023-04-07 10:28:30,709:INFO:_display_container: 2
2023-04-07 10:28:30,710:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-07 10:28:30,711:INFO:create_model() successfully completed......................................
2023-04-07 10:28:30,821:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:30,821:INFO:Creating metrics dataframe
2023-04-07 10:28:30,831:INFO:Initializing Ridge Classifier
2023-04-07 10:28:30,831:INFO:Total runtime is 0.27228747606277465 minutes
2023-04-07 10:28:30,831:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:30,832:INFO:Initializing create_model()
2023-04-07 10:28:30,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:30,832:INFO:Checking exceptions
2023-04-07 10:28:30,832:INFO:Importing libraries
2023-04-07 10:28:30,832:INFO:Copying training dataset
2023-04-07 10:28:30,841:INFO:Defining folds
2023-04-07 10:28:30,841:INFO:Declaring metric variables
2023-04-07 10:28:30,841:INFO:Importing untrained model
2023-04-07 10:28:30,842:INFO:Ridge Classifier Imported successfully
2023-04-07 10:28:30,843:INFO:Starting cross validation
2023-04-07 10:28:30,845:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:31,156:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:28:31,247:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:28:31,437:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:28:31,450:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:28:31,465:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:28:31,690:INFO:Calculating mean and std
2023-04-07 10:28:31,692:INFO:Creating metrics dataframe
2023-04-07 10:28:31,839:INFO:Uploading results into container
2023-04-07 10:28:31,839:INFO:Uploading model into container now
2023-04-07 10:28:31,840:INFO:_master_model_container: 6
2023-04-07 10:28:31,840:INFO:_display_container: 2
2023-04-07 10:28:31,841:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-07 10:28:31,841:INFO:create_model() successfully completed......................................
2023-04-07 10:28:31,940:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:31,940:INFO:Creating metrics dataframe
2023-04-07 10:28:31,949:INFO:Initializing Random Forest Classifier
2023-04-07 10:28:31,950:INFO:Total runtime is 0.2909379204114278 minutes
2023-04-07 10:28:31,950:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:31,950:INFO:Initializing create_model()
2023-04-07 10:28:31,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:31,951:INFO:Checking exceptions
2023-04-07 10:28:31,951:INFO:Importing libraries
2023-04-07 10:28:31,951:INFO:Copying training dataset
2023-04-07 10:28:31,959:INFO:Defining folds
2023-04-07 10:28:31,959:INFO:Declaring metric variables
2023-04-07 10:28:31,960:INFO:Importing untrained model
2023-04-07 10:28:31,960:INFO:Random Forest Classifier Imported successfully
2023-04-07 10:28:31,961:INFO:Starting cross validation
2023-04-07 10:28:31,963:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:33,193:INFO:Calculating mean and std
2023-04-07 10:28:33,194:INFO:Creating metrics dataframe
2023-04-07 10:28:33,347:INFO:Uploading results into container
2023-04-07 10:28:33,348:INFO:Uploading model into container now
2023-04-07 10:28:33,348:INFO:_master_model_container: 7
2023-04-07 10:28:33,348:INFO:_display_container: 2
2023-04-07 10:28:33,349:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-07 10:28:33,349:INFO:create_model() successfully completed......................................
2023-04-07 10:28:33,450:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:33,450:INFO:Creating metrics dataframe
2023-04-07 10:28:33,463:INFO:Initializing Quadratic Discriminant Analysis
2023-04-07 10:28:33,463:INFO:Total runtime is 0.3161574165026347 minutes
2023-04-07 10:28:33,464:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:33,465:INFO:Initializing create_model()
2023-04-07 10:28:33,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:33,466:INFO:Checking exceptions
2023-04-07 10:28:33,466:INFO:Importing libraries
2023-04-07 10:28:33,466:INFO:Copying training dataset
2023-04-07 10:28:33,480:INFO:Defining folds
2023-04-07 10:28:33,481:INFO:Declaring metric variables
2023-04-07 10:28:33,482:INFO:Importing untrained model
2023-04-07 10:28:33,482:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-07 10:28:33,483:INFO:Starting cross validation
2023-04-07 10:28:33,487:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:33,951:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:28:33,953:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:28:33,992:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:28:33,997:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:28:34,120:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:28:34,553:INFO:Calculating mean and std
2023-04-07 10:28:34,555:INFO:Creating metrics dataframe
2023-04-07 10:28:34,776:INFO:Uploading results into container
2023-04-07 10:28:34,777:INFO:Uploading model into container now
2023-04-07 10:28:34,778:INFO:_master_model_container: 8
2023-04-07 10:28:34,778:INFO:_display_container: 2
2023-04-07 10:28:34,778:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-07 10:28:34,778:INFO:create_model() successfully completed......................................
2023-04-07 10:28:34,904:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:34,907:INFO:Creating metrics dataframe
2023-04-07 10:28:34,930:INFO:Initializing Ada Boost Classifier
2023-04-07 10:28:34,930:INFO:Total runtime is 0.3406121214230855 minutes
2023-04-07 10:28:34,931:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:34,932:INFO:Initializing create_model()
2023-04-07 10:28:34,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:34,933:INFO:Checking exceptions
2023-04-07 10:28:34,933:INFO:Importing libraries
2023-04-07 10:28:34,933:INFO:Copying training dataset
2023-04-07 10:28:34,950:INFO:Defining folds
2023-04-07 10:28:34,950:INFO:Declaring metric variables
2023-04-07 10:28:34,951:INFO:Importing untrained model
2023-04-07 10:28:34,952:INFO:Ada Boost Classifier Imported successfully
2023-04-07 10:28:34,953:INFO:Starting cross validation
2023-04-07 10:28:34,959:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:35,947:INFO:Calculating mean and std
2023-04-07 10:28:35,948:INFO:Creating metrics dataframe
2023-04-07 10:28:36,094:INFO:Uploading results into container
2023-04-07 10:28:36,095:INFO:Uploading model into container now
2023-04-07 10:28:36,095:INFO:_master_model_container: 9
2023-04-07 10:28:36,096:INFO:_display_container: 2
2023-04-07 10:28:36,096:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-07 10:28:36,096:INFO:create_model() successfully completed......................................
2023-04-07 10:28:36,203:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:36,203:INFO:Creating metrics dataframe
2023-04-07 10:28:36,213:INFO:Initializing Gradient Boosting Classifier
2023-04-07 10:28:36,213:INFO:Total runtime is 0.3619956096013387 minutes
2023-04-07 10:28:36,213:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:36,214:INFO:Initializing create_model()
2023-04-07 10:28:36,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:36,214:INFO:Checking exceptions
2023-04-07 10:28:36,214:INFO:Importing libraries
2023-04-07 10:28:36,214:INFO:Copying training dataset
2023-04-07 10:28:36,223:INFO:Defining folds
2023-04-07 10:28:36,224:INFO:Declaring metric variables
2023-04-07 10:28:36,224:INFO:Importing untrained model
2023-04-07 10:28:36,225:INFO:Gradient Boosting Classifier Imported successfully
2023-04-07 10:28:36,226:INFO:Starting cross validation
2023-04-07 10:28:36,229:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:37,728:INFO:Calculating mean and std
2023-04-07 10:28:37,729:INFO:Creating metrics dataframe
2023-04-07 10:28:38,045:INFO:Uploading results into container
2023-04-07 10:28:38,047:INFO:Uploading model into container now
2023-04-07 10:28:38,048:INFO:_master_model_container: 10
2023-04-07 10:28:38,048:INFO:_display_container: 2
2023-04-07 10:28:38,050:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-07 10:28:38,050:INFO:create_model() successfully completed......................................
2023-04-07 10:28:38,185:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:38,185:INFO:Creating metrics dataframe
2023-04-07 10:28:38,196:INFO:Initializing Linear Discriminant Analysis
2023-04-07 10:28:38,196:INFO:Total runtime is 0.395034388701121 minutes
2023-04-07 10:28:38,197:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:38,197:INFO:Initializing create_model()
2023-04-07 10:28:38,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:38,197:INFO:Checking exceptions
2023-04-07 10:28:38,197:INFO:Importing libraries
2023-04-07 10:28:38,198:INFO:Copying training dataset
2023-04-07 10:28:38,207:INFO:Defining folds
2023-04-07 10:28:38,207:INFO:Declaring metric variables
2023-04-07 10:28:38,208:INFO:Importing untrained model
2023-04-07 10:28:38,209:INFO:Linear Discriminant Analysis Imported successfully
2023-04-07 10:28:38,209:INFO:Starting cross validation
2023-04-07 10:28:38,213:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:39,103:INFO:Calculating mean and std
2023-04-07 10:28:39,104:INFO:Creating metrics dataframe
2023-04-07 10:28:39,253:INFO:Uploading results into container
2023-04-07 10:28:39,253:INFO:Uploading model into container now
2023-04-07 10:28:39,254:INFO:_master_model_container: 11
2023-04-07 10:28:39,254:INFO:_display_container: 2
2023-04-07 10:28:39,254:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-07 10:28:39,254:INFO:create_model() successfully completed......................................
2023-04-07 10:28:39,358:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:39,358:INFO:Creating metrics dataframe
2023-04-07 10:28:39,365:INFO:Initializing Extra Trees Classifier
2023-04-07 10:28:39,365:INFO:Total runtime is 0.41451874176661174 minutes
2023-04-07 10:28:39,365:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:39,365:INFO:Initializing create_model()
2023-04-07 10:28:39,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:39,366:INFO:Checking exceptions
2023-04-07 10:28:39,366:INFO:Importing libraries
2023-04-07 10:28:39,366:INFO:Copying training dataset
2023-04-07 10:28:39,373:INFO:Defining folds
2023-04-07 10:28:39,373:INFO:Declaring metric variables
2023-04-07 10:28:39,373:INFO:Importing untrained model
2023-04-07 10:28:39,374:INFO:Extra Trees Classifier Imported successfully
2023-04-07 10:28:39,375:INFO:Starting cross validation
2023-04-07 10:28:39,377:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:40,642:INFO:Calculating mean and std
2023-04-07 10:28:40,643:INFO:Creating metrics dataframe
2023-04-07 10:28:40,792:INFO:Uploading results into container
2023-04-07 10:28:40,792:INFO:Uploading model into container now
2023-04-07 10:28:40,793:INFO:_master_model_container: 12
2023-04-07 10:28:40,793:INFO:_display_container: 2
2023-04-07 10:28:40,793:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-07 10:28:40,793:INFO:create_model() successfully completed......................................
2023-04-07 10:28:40,926:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:40,926:INFO:Creating metrics dataframe
2023-04-07 10:28:40,936:INFO:Initializing Light Gradient Boosting Machine
2023-04-07 10:28:40,937:INFO:Total runtime is 0.440718142191569 minutes
2023-04-07 10:28:40,937:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:40,937:INFO:Initializing create_model()
2023-04-07 10:28:40,938:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:40,938:INFO:Checking exceptions
2023-04-07 10:28:40,938:INFO:Importing libraries
2023-04-07 10:28:40,938:INFO:Copying training dataset
2023-04-07 10:28:40,946:INFO:Defining folds
2023-04-07 10:28:40,946:INFO:Declaring metric variables
2023-04-07 10:28:40,947:INFO:Importing untrained model
2023-04-07 10:28:40,948:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-07 10:28:40,948:INFO:Starting cross validation
2023-04-07 10:28:40,951:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:41,892:INFO:Calculating mean and std
2023-04-07 10:28:41,892:INFO:Creating metrics dataframe
2023-04-07 10:28:42,043:INFO:Uploading results into container
2023-04-07 10:28:42,043:INFO:Uploading model into container now
2023-04-07 10:28:42,044:INFO:_master_model_container: 13
2023-04-07 10:28:42,044:INFO:_display_container: 2
2023-04-07 10:28:42,044:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-07 10:28:42,044:INFO:create_model() successfully completed......................................
2023-04-07 10:28:42,151:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:42,152:INFO:Creating metrics dataframe
2023-04-07 10:28:42,162:INFO:Initializing Dummy Classifier
2023-04-07 10:28:42,162:INFO:Total runtime is 0.4611376365025838 minutes
2023-04-07 10:28:42,162:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:42,163:INFO:Initializing create_model()
2023-04-07 10:28:42,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB6294580>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:42,163:INFO:Checking exceptions
2023-04-07 10:28:42,163:INFO:Importing libraries
2023-04-07 10:28:42,163:INFO:Copying training dataset
2023-04-07 10:28:42,172:INFO:Defining folds
2023-04-07 10:28:42,172:INFO:Declaring metric variables
2023-04-07 10:28:42,172:INFO:Importing untrained model
2023-04-07 10:28:42,173:INFO:Dummy Classifier Imported successfully
2023-04-07 10:28:42,173:INFO:Starting cross validation
2023-04-07 10:28:42,176:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:42,553:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:28:42,564:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:28:42,592:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:28:42,598:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:28:42,808:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:28:43,049:INFO:Calculating mean and std
2023-04-07 10:28:43,051:INFO:Creating metrics dataframe
2023-04-07 10:28:43,213:INFO:Uploading results into container
2023-04-07 10:28:43,215:INFO:Uploading model into container now
2023-04-07 10:28:43,215:INFO:_master_model_container: 14
2023-04-07 10:28:43,215:INFO:_display_container: 2
2023-04-07 10:28:43,216:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-07 10:28:43,216:INFO:create_model() successfully completed......................................
2023-04-07 10:28:43,319:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:43,320:INFO:Creating metrics dataframe
2023-04-07 10:28:43,333:INFO:Initializing create_model()
2023-04-07 10:28:43,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:43,334:INFO:Checking exceptions
2023-04-07 10:28:43,335:INFO:Importing libraries
2023-04-07 10:28:43,335:INFO:Copying training dataset
2023-04-07 10:28:43,344:INFO:Defining folds
2023-04-07 10:28:43,344:INFO:Declaring metric variables
2023-04-07 10:28:43,345:INFO:Importing untrained model
2023-04-07 10:28:43,345:INFO:Declaring custom model
2023-04-07 10:28:43,346:INFO:Logistic Regression Imported successfully
2023-04-07 10:28:43,349:INFO:Cross validation set to False
2023-04-07 10:28:43,350:INFO:Fitting Model
2023-04-07 10:28:43,736:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 10:28:43,737:INFO:create_model() successfully completed......................................
2023-04-07 10:28:43,867:INFO:Initializing create_model()
2023-04-07 10:28:43,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:43,867:INFO:Checking exceptions
2023-04-07 10:28:43,869:INFO:Importing libraries
2023-04-07 10:28:43,869:INFO:Copying training dataset
2023-04-07 10:28:43,877:INFO:Defining folds
2023-04-07 10:28:43,878:INFO:Declaring metric variables
2023-04-07 10:28:43,878:INFO:Importing untrained model
2023-04-07 10:28:43,878:INFO:Declaring custom model
2023-04-07 10:28:43,879:INFO:Naive Bayes Imported successfully
2023-04-07 10:28:43,882:INFO:Cross validation set to False
2023-04-07 10:28:43,882:INFO:Fitting Model
2023-04-07 10:28:44,203:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 10:28:44,203:INFO:create_model() successfully completed......................................
2023-04-07 10:28:44,306:INFO:Initializing create_model()
2023-04-07 10:28:44,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:44,307:INFO:Checking exceptions
2023-04-07 10:28:44,308:INFO:Importing libraries
2023-04-07 10:28:44,308:INFO:Copying training dataset
2023-04-07 10:28:44,316:INFO:Defining folds
2023-04-07 10:28:44,316:INFO:Declaring metric variables
2023-04-07 10:28:44,317:INFO:Importing untrained model
2023-04-07 10:28:44,317:INFO:Declaring custom model
2023-04-07 10:28:44,318:INFO:Decision Tree Classifier Imported successfully
2023-04-07 10:28:44,320:INFO:Cross validation set to False
2023-04-07 10:28:44,320:INFO:Fitting Model
2023-04-07 10:28:44,619:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 10:28:44,620:INFO:create_model() successfully completed......................................
2023-04-07 10:28:44,765:INFO:_master_model_container: 14
2023-04-07 10:28:44,765:INFO:_display_container: 2
2023-04-07 10:28:44,767:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')]
2023-04-07 10:28:44,767:INFO:compare_models() successfully completed......................................
2023-04-07 10:28:44,768:INFO:Initializing blend_models()
2023-04-07 10:28:44,768:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator_list=[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-04-07 10:28:44,768:INFO:Checking exceptions
2023-04-07 10:28:44,772:INFO:Importing libraries
2023-04-07 10:28:44,772:INFO:Copying training dataset
2023-04-07 10:28:44,772:INFO:Getting model names
2023-04-07 10:28:44,773:INFO:SubProcess create_model() called ==================================
2023-04-07 10:28:44,777:INFO:Initializing create_model()
2023-04-07 10:28:44,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EA1BAF280>, estimator=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB61BE520>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:28:44,777:INFO:Checking exceptions
2023-04-07 10:28:44,777:INFO:Importing libraries
2023-04-07 10:28:44,777:INFO:Copying training dataset
2023-04-07 10:28:44,783:INFO:Defining folds
2023-04-07 10:28:44,783:INFO:Declaring metric variables
2023-04-07 10:28:44,784:INFO:Importing untrained model
2023-04-07 10:28:44,784:INFO:Declaring custom model
2023-04-07 10:28:44,785:INFO:Voting Classifier Imported successfully
2023-04-07 10:28:44,785:INFO:Starting cross validation
2023-04-07 10:28:44,787:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:28:46,083:INFO:Calculating mean and std
2023-04-07 10:28:46,084:INFO:Creating metrics dataframe
2023-04-07 10:28:46,086:INFO:Finalizing model
2023-04-07 10:28:46,628:INFO:Uploading results into container
2023-04-07 10:28:46,629:INFO:Uploading model into container now
2023-04-07 10:28:46,630:INFO:_master_model_container: 15
2023-04-07 10:28:46,630:INFO:_display_container: 3
2023-04-07 10:28:46,633:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 10:28:46,633:INFO:create_model() successfully completed......................................
2023-04-07 10:28:46,735:INFO:SubProcess create_model() end ==================================
2023-04-07 10:28:46,765:INFO:_master_model_container: 15
2023-04-07 10:28:46,765:INFO:_display_container: 3
2023-04-07 10:28:46,770:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 10:28:46,770:INFO:blend_models() successfully completed......................................
2023-04-07 10:28:46,969:INFO:Initializing save_model()
2023-04-07 10:28:46,969:INFO:save_model(model=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), model_name=classification, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-07 10:28:46,969:INFO:Adding model into prep_pipe
2023-04-07 10:28:46,992:INFO:classification.pkl saved in current working directory
2023-04-07 10:28:47,054:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
                                              ('Decision Tree Classifier',
                                               DecisionTreeClassifier(ccp_alpha=0.0,
                                                                      class_weight=None,
                                                                      criterion='gini',
                                                                      max_depth=None,
                                                                      max_features=None,
                                                                      max_leaf_nodes=None,
                                                                      min_impurity_decrease=0.0,
                                                                      min_samples_leaf=1,
                                                                      min_samples_split=2,
                                                                      min_weight_fraction_leaf=0.0,
                                                                      random_state=123,
                                                                      splitter='best'))],
                                  flatten_transform=True, n_jobs=-1,
                                  verbose=False, voting='soft',
                                  weights=None))],
         verbose=False)
2023-04-07 10:28:47,055:INFO:save_model() successfully completed......................................
2023-04-07 10:37:01,826:INFO:PyCaret ClassificationExperiment
2023-04-07 10:37:01,826:INFO:Logging name: clf-default-name
2023-04-07 10:37:01,826:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 10:37:01,826:INFO:version 3.0.0
2023-04-07 10:37:01,826:INFO:Initializing setup()
2023-04-07 10:37:01,827:INFO:self.USI: 4185
2023-04-07 10:37:01,827:INFO:self._variable_keys: {'target_param', 'fold_shuffle_param', 'fold_groups_param', 'fold_generator', 'gpu_param', 'logging_param', 'fix_imbalance', 'log_plots_param', 'n_jobs_param', '_ml_usecase', 'USI', 'is_multiclass', 'exp_id', 'pipeline', 'gpu_n_jobs_param', 'exp_name_log', 'y_test', 'X_test', 'y_train', 'y', '_available_plots', 'html_param', 'idx', 'X', 'X_train', 'memory', 'data', 'seed'}
2023-04-07 10:37:01,827:INFO:Checking environment
2023-04-07 10:37:01,827:INFO:python_version: 3.8.16
2023-04-07 10:37:01,827:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 10:37:01,827:INFO:machine: AMD64
2023-04-07 10:37:01,827:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 10:37:01,829:INFO:Memory: svmem(total=8395538432, available=2598199296, percent=69.1, used=5797339136, free=2598199296)
2023-04-07 10:37:01,829:INFO:Physical Core: 4
2023-04-07 10:37:01,829:INFO:Logical Core: 8
2023-04-07 10:37:01,829:INFO:Checking libraries
2023-04-07 10:37:01,829:INFO:System:
2023-04-07 10:37:01,829:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 10:37:01,829:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 10:37:01,829:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 10:37:01,830:INFO:PyCaret required dependencies:
2023-04-07 10:37:01,830:INFO:                 pip: 23.0.1
2023-04-07 10:37:01,830:INFO:          setuptools: 65.6.3
2023-04-07 10:37:01,830:INFO:             pycaret: 3.0.0
2023-04-07 10:37:01,830:INFO:             IPython: 8.11.0
2023-04-07 10:37:01,830:INFO:          ipywidgets: 8.0.4
2023-04-07 10:37:01,830:INFO:                tqdm: 4.64.1
2023-04-07 10:37:01,830:INFO:               numpy: 1.23.5
2023-04-07 10:37:01,830:INFO:              pandas: 1.5.3
2023-04-07 10:37:01,830:INFO:              jinja2: 3.1.2
2023-04-07 10:37:01,830:INFO:               scipy: 1.9.3
2023-04-07 10:37:01,830:INFO:              joblib: 1.2.0
2023-04-07 10:37:01,830:INFO:             sklearn: 1.2.2
2023-04-07 10:37:01,830:INFO:                pyod: 1.0.9
2023-04-07 10:37:01,830:INFO:            imblearn: 0.10.1
2023-04-07 10:37:01,830:INFO:   category_encoders: 2.6.0
2023-04-07 10:37:01,830:INFO:            lightgbm: 3.3.5
2023-04-07 10:37:01,831:INFO:               numba: 0.56.4
2023-04-07 10:37:01,831:INFO:            requests: 2.28.2
2023-04-07 10:37:01,831:INFO:          matplotlib: 3.6.3
2023-04-07 10:37:01,831:INFO:          scikitplot: 0.3.7
2023-04-07 10:37:01,831:INFO:         yellowbrick: 1.5
2023-04-07 10:37:01,831:INFO:              plotly: 5.14.1
2023-04-07 10:37:01,831:INFO:             kaleido: 0.2.1
2023-04-07 10:37:01,831:INFO:         statsmodels: 0.13.5
2023-04-07 10:37:01,831:INFO:              sktime: 0.17.0
2023-04-07 10:37:01,831:INFO:               tbats: 1.1.2
2023-04-07 10:37:01,831:INFO:            pmdarima: 2.0.3
2023-04-07 10:37:01,831:INFO:              psutil: 5.9.4
2023-04-07 10:37:01,831:INFO:PyCaret optional dependencies:
2023-04-07 10:37:01,831:INFO:                shap: 0.41.0
2023-04-07 10:37:01,831:INFO:           interpret: Not installed
2023-04-07 10:37:01,831:INFO:                umap: Not installed
2023-04-07 10:37:01,831:INFO:    pandas_profiling: 4.1.0
2023-04-07 10:37:01,832:INFO:  explainerdashboard: Not installed
2023-04-07 10:37:01,832:INFO:             autoviz: Not installed
2023-04-07 10:37:01,832:INFO:           fairlearn: Not installed
2023-04-07 10:37:01,832:INFO:             xgboost: Not installed
2023-04-07 10:37:01,832:INFO:            catboost: Not installed
2023-04-07 10:37:01,832:INFO:              kmodes: Not installed
2023-04-07 10:37:01,832:INFO:             mlxtend: Not installed
2023-04-07 10:37:01,832:INFO:       statsforecast: Not installed
2023-04-07 10:37:01,832:INFO:        tune_sklearn: Not installed
2023-04-07 10:37:01,832:INFO:                 ray: Not installed
2023-04-07 10:37:01,832:INFO:            hyperopt: Not installed
2023-04-07 10:37:01,832:INFO:              optuna: Not installed
2023-04-07 10:37:01,832:INFO:               skopt: Not installed
2023-04-07 10:37:01,832:INFO:              mlflow: Not installed
2023-04-07 10:37:01,832:INFO:              gradio: Not installed
2023-04-07 10:37:01,832:INFO:             fastapi: Not installed
2023-04-07 10:37:01,832:INFO:             uvicorn: Not installed
2023-04-07 10:37:01,833:INFO:              m2cgen: Not installed
2023-04-07 10:37:01,833:INFO:           evidently: Not installed
2023-04-07 10:37:01,833:INFO:               fugue: Not installed
2023-04-07 10:37:01,833:INFO:           streamlit: 1.20.0
2023-04-07 10:37:01,833:INFO:             prophet: Not installed
2023-04-07 10:37:01,833:INFO:None
2023-04-07 10:37:01,833:INFO:Set up data.
2023-04-07 10:37:01,844:INFO:Set up train/test split.
2023-04-07 10:37:01,852:INFO:Set up index.
2023-04-07 10:37:01,852:INFO:Set up folding strategy.
2023-04-07 10:37:01,852:INFO:Assigning column types.
2023-04-07 10:37:01,858:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 10:37:01,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 10:37:01,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:37:01,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:01,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,015:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 10:37:02,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:37:02,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,052:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 10:37:02,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:37:02,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,210:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:37:02,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,250:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 10:37:02,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,446:INFO:Preparing preprocessing pipeline...
2023-04-07 10:37:02,447:INFO:Set up simple imputation.
2023-04-07 10:37:02,451:INFO:Set up encoding of ordinal features.
2023-04-07 10:37:02,457:INFO:Set up encoding of categorical features.
2023-04-07 10:37:02,686:INFO:Finished creating preprocessing pipeline.
2023-04-07 10:37:02,737:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 10:37:02,737:INFO:Creating final display dataframe.
2023-04-07 10:37:02,901:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 29)
5   Transformed train set shape         (623, 29)
6    Transformed test set shape         (268, 29)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 7
10     Rows with missing values             79.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              4185
2023-04-07 10:37:02,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:02,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:03,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:03,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:03,107:INFO:setup() successfully completed in 1.39s...............
2023-04-07 10:37:03,107:INFO:Initializing compare_models()
2023-04-07 10:37:03,107:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-07 10:37:03,107:INFO:Checking exceptions
2023-04-07 10:37:03,112:INFO:Preparing display monitor
2023-04-07 10:37:03,116:INFO:Initializing Logistic Regression
2023-04-07 10:37:03,116:INFO:Total runtime is 0.0 minutes
2023-04-07 10:37:03,116:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:03,116:INFO:Initializing create_model()
2023-04-07 10:37:03,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:03,116:INFO:Checking exceptions
2023-04-07 10:37:03,116:INFO:Importing libraries
2023-04-07 10:37:03,116:INFO:Copying training dataset
2023-04-07 10:37:03,123:INFO:Defining folds
2023-04-07 10:37:03,123:INFO:Declaring metric variables
2023-04-07 10:37:03,124:INFO:Importing untrained model
2023-04-07 10:37:03,124:INFO:Logistic Regression Imported successfully
2023-04-07 10:37:03,125:INFO:Starting cross validation
2023-04-07 10:37:03,127:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:10,691:INFO:Calculating mean and std
2023-04-07 10:37:10,693:INFO:Creating metrics dataframe
2023-04-07 10:37:10,891:INFO:Uploading results into container
2023-04-07 10:37:10,892:INFO:Uploading model into container now
2023-04-07 10:37:10,893:INFO:_master_model_container: 1
2023-04-07 10:37:10,893:INFO:_display_container: 2
2023-04-07 10:37:10,893:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 10:37:10,893:INFO:create_model() successfully completed......................................
2023-04-07 10:37:11,007:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:11,007:INFO:Creating metrics dataframe
2023-04-07 10:37:11,018:INFO:Initializing K Neighbors Classifier
2023-04-07 10:37:11,019:INFO:Total runtime is 0.1317245125770569 minutes
2023-04-07 10:37:11,019:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:11,019:INFO:Initializing create_model()
2023-04-07 10:37:11,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:11,019:INFO:Checking exceptions
2023-04-07 10:37:11,020:INFO:Importing libraries
2023-04-07 10:37:11,020:INFO:Copying training dataset
2023-04-07 10:37:11,033:INFO:Defining folds
2023-04-07 10:37:11,033:INFO:Declaring metric variables
2023-04-07 10:37:11,033:INFO:Importing untrained model
2023-04-07 10:37:11,033:INFO:K Neighbors Classifier Imported successfully
2023-04-07 10:37:11,034:INFO:Starting cross validation
2023-04-07 10:37:11,036:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:15,707:INFO:Calculating mean and std
2023-04-07 10:37:15,717:INFO:Creating metrics dataframe
2023-04-07 10:37:15,957:INFO:Uploading results into container
2023-04-07 10:37:15,958:INFO:Uploading model into container now
2023-04-07 10:37:15,959:INFO:_master_model_container: 2
2023-04-07 10:37:15,960:INFO:_display_container: 2
2023-04-07 10:37:15,961:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-07 10:37:15,961:INFO:create_model() successfully completed......................................
2023-04-07 10:37:16,091:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:16,092:INFO:Creating metrics dataframe
2023-04-07 10:37:16,102:INFO:Initializing Naive Bayes
2023-04-07 10:37:16,102:INFO:Total runtime is 0.21643253962198894 minutes
2023-04-07 10:37:16,102:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:16,103:INFO:Initializing create_model()
2023-04-07 10:37:16,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:16,103:INFO:Checking exceptions
2023-04-07 10:37:16,103:INFO:Importing libraries
2023-04-07 10:37:16,103:INFO:Copying training dataset
2023-04-07 10:37:16,113:INFO:Defining folds
2023-04-07 10:37:16,113:INFO:Declaring metric variables
2023-04-07 10:37:16,113:INFO:Importing untrained model
2023-04-07 10:37:16,114:INFO:Naive Bayes Imported successfully
2023-04-07 10:37:16,114:INFO:Starting cross validation
2023-04-07 10:37:16,116:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:17,433:INFO:Calculating mean and std
2023-04-07 10:37:17,433:INFO:Creating metrics dataframe
2023-04-07 10:37:17,612:INFO:Uploading results into container
2023-04-07 10:37:17,613:INFO:Uploading model into container now
2023-04-07 10:37:17,613:INFO:_master_model_container: 3
2023-04-07 10:37:17,614:INFO:_display_container: 2
2023-04-07 10:37:17,614:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 10:37:17,614:INFO:create_model() successfully completed......................................
2023-04-07 10:37:17,711:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:17,711:INFO:Creating metrics dataframe
2023-04-07 10:37:17,718:INFO:Initializing Decision Tree Classifier
2023-04-07 10:37:17,718:INFO:Total runtime is 0.2433659871419271 minutes
2023-04-07 10:37:17,719:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:17,719:INFO:Initializing create_model()
2023-04-07 10:37:17,719:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:17,719:INFO:Checking exceptions
2023-04-07 10:37:17,720:INFO:Importing libraries
2023-04-07 10:37:17,720:INFO:Copying training dataset
2023-04-07 10:37:17,725:INFO:Defining folds
2023-04-07 10:37:17,726:INFO:Declaring metric variables
2023-04-07 10:37:17,726:INFO:Importing untrained model
2023-04-07 10:37:17,727:INFO:Decision Tree Classifier Imported successfully
2023-04-07 10:37:17,727:INFO:Starting cross validation
2023-04-07 10:37:17,729:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:18,678:INFO:Calculating mean and std
2023-04-07 10:37:18,679:INFO:Creating metrics dataframe
2023-04-07 10:37:18,988:INFO:Uploading results into container
2023-04-07 10:37:18,990:INFO:Uploading model into container now
2023-04-07 10:37:18,991:INFO:_master_model_container: 4
2023-04-07 10:37:18,991:INFO:_display_container: 2
2023-04-07 10:37:18,993:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 10:37:18,993:INFO:create_model() successfully completed......................................
2023-04-07 10:37:19,131:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:19,132:INFO:Creating metrics dataframe
2023-04-07 10:37:19,144:INFO:Initializing SVM - Linear Kernel
2023-04-07 10:37:19,144:INFO:Total runtime is 0.26714013814926146 minutes
2023-04-07 10:37:19,145:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:19,145:INFO:Initializing create_model()
2023-04-07 10:37:19,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:19,145:INFO:Checking exceptions
2023-04-07 10:37:19,146:INFO:Importing libraries
2023-04-07 10:37:19,146:INFO:Copying training dataset
2023-04-07 10:37:19,156:INFO:Defining folds
2023-04-07 10:37:19,156:INFO:Declaring metric variables
2023-04-07 10:37:19,157:INFO:Importing untrained model
2023-04-07 10:37:19,158:INFO:SVM - Linear Kernel Imported successfully
2023-04-07 10:37:19,159:INFO:Starting cross validation
2023-04-07 10:37:19,163:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:19,507:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:19,544:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:19,558:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:19,573:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:19,815:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:20,078:INFO:Calculating mean and std
2023-04-07 10:37:20,079:INFO:Creating metrics dataframe
2023-04-07 10:37:20,354:INFO:Uploading results into container
2023-04-07 10:37:20,356:INFO:Uploading model into container now
2023-04-07 10:37:20,356:INFO:_master_model_container: 5
2023-04-07 10:37:20,357:INFO:_display_container: 2
2023-04-07 10:37:20,358:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-07 10:37:20,358:INFO:create_model() successfully completed......................................
2023-04-07 10:37:20,490:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:20,490:INFO:Creating metrics dataframe
2023-04-07 10:37:20,501:INFO:Initializing Ridge Classifier
2023-04-07 10:37:20,501:INFO:Total runtime is 0.2897609790166219 minutes
2023-04-07 10:37:20,502:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:20,502:INFO:Initializing create_model()
2023-04-07 10:37:20,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:20,502:INFO:Checking exceptions
2023-04-07 10:37:20,503:INFO:Importing libraries
2023-04-07 10:37:20,503:INFO:Copying training dataset
2023-04-07 10:37:20,512:INFO:Defining folds
2023-04-07 10:37:20,512:INFO:Declaring metric variables
2023-04-07 10:37:20,512:INFO:Importing untrained model
2023-04-07 10:37:20,513:INFO:Ridge Classifier Imported successfully
2023-04-07 10:37:20,514:INFO:Starting cross validation
2023-04-07 10:37:20,517:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:20,853:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:20,857:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:20,864:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:20,882:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:21,079:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:21,378:INFO:Calculating mean and std
2023-04-07 10:37:21,379:INFO:Creating metrics dataframe
2023-04-07 10:37:21,588:INFO:Uploading results into container
2023-04-07 10:37:21,589:INFO:Uploading model into container now
2023-04-07 10:37:21,589:INFO:_master_model_container: 6
2023-04-07 10:37:21,589:INFO:_display_container: 2
2023-04-07 10:37:21,590:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-07 10:37:21,590:INFO:create_model() successfully completed......................................
2023-04-07 10:37:21,705:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:21,705:INFO:Creating metrics dataframe
2023-04-07 10:37:21,720:INFO:Initializing Random Forest Classifier
2023-04-07 10:37:21,720:INFO:Total runtime is 0.31006947755813596 minutes
2023-04-07 10:37:21,721:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:21,722:INFO:Initializing create_model()
2023-04-07 10:37:21,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:21,723:INFO:Checking exceptions
2023-04-07 10:37:21,723:INFO:Importing libraries
2023-04-07 10:37:21,723:INFO:Copying training dataset
2023-04-07 10:37:21,736:INFO:Defining folds
2023-04-07 10:37:21,736:INFO:Declaring metric variables
2023-04-07 10:37:21,736:INFO:Importing untrained model
2023-04-07 10:37:21,738:INFO:Random Forest Classifier Imported successfully
2023-04-07 10:37:21,738:INFO:Starting cross validation
2023-04-07 10:37:21,742:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:23,474:INFO:Calculating mean and std
2023-04-07 10:37:23,475:INFO:Creating metrics dataframe
2023-04-07 10:37:23,734:INFO:Uploading results into container
2023-04-07 10:37:23,734:INFO:Uploading model into container now
2023-04-07 10:37:23,735:INFO:_master_model_container: 7
2023-04-07 10:37:23,735:INFO:_display_container: 2
2023-04-07 10:37:23,736:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-07 10:37:23,736:INFO:create_model() successfully completed......................................
2023-04-07 10:37:23,837:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:23,837:INFO:Creating metrics dataframe
2023-04-07 10:37:23,846:INFO:Initializing Quadratic Discriminant Analysis
2023-04-07 10:37:23,846:INFO:Total runtime is 0.3454989473025004 minutes
2023-04-07 10:37:23,846:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:23,847:INFO:Initializing create_model()
2023-04-07 10:37:23,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:23,847:INFO:Checking exceptions
2023-04-07 10:37:23,847:INFO:Importing libraries
2023-04-07 10:37:23,848:INFO:Copying training dataset
2023-04-07 10:37:23,855:INFO:Defining folds
2023-04-07 10:37:23,856:INFO:Declaring metric variables
2023-04-07 10:37:23,856:INFO:Importing untrained model
2023-04-07 10:37:23,856:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-07 10:37:23,857:INFO:Starting cross validation
2023-04-07 10:37:23,859:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:24,149:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:24,172:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:24,186:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:24,190:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:24,199:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:25,153:INFO:Calculating mean and std
2023-04-07 10:37:25,155:INFO:Creating metrics dataframe
2023-04-07 10:37:25,328:INFO:Uploading results into container
2023-04-07 10:37:25,328:INFO:Uploading model into container now
2023-04-07 10:37:25,330:INFO:_master_model_container: 8
2023-04-07 10:37:25,330:INFO:_display_container: 2
2023-04-07 10:37:25,330:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-07 10:37:25,330:INFO:create_model() successfully completed......................................
2023-04-07 10:37:25,434:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:25,434:INFO:Creating metrics dataframe
2023-04-07 10:37:25,444:INFO:Initializing Ada Boost Classifier
2023-04-07 10:37:25,445:INFO:Total runtime is 0.37215702136357626 minutes
2023-04-07 10:37:25,445:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:25,445:INFO:Initializing create_model()
2023-04-07 10:37:25,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:25,446:INFO:Checking exceptions
2023-04-07 10:37:25,446:INFO:Importing libraries
2023-04-07 10:37:25,446:INFO:Copying training dataset
2023-04-07 10:37:25,455:INFO:Defining folds
2023-04-07 10:37:25,455:INFO:Declaring metric variables
2023-04-07 10:37:25,455:INFO:Importing untrained model
2023-04-07 10:37:25,456:INFO:Ada Boost Classifier Imported successfully
2023-04-07 10:37:25,456:INFO:Starting cross validation
2023-04-07 10:37:25,460:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:26,331:INFO:Calculating mean and std
2023-04-07 10:37:26,332:INFO:Creating metrics dataframe
2023-04-07 10:37:26,503:INFO:Uploading results into container
2023-04-07 10:37:26,504:INFO:Uploading model into container now
2023-04-07 10:37:26,505:INFO:_master_model_container: 9
2023-04-07 10:37:26,505:INFO:_display_container: 2
2023-04-07 10:37:26,505:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-07 10:37:26,506:INFO:create_model() successfully completed......................................
2023-04-07 10:37:26,610:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:26,610:INFO:Creating metrics dataframe
2023-04-07 10:37:26,616:INFO:Initializing Gradient Boosting Classifier
2023-04-07 10:37:26,616:INFO:Total runtime is 0.3916727224985759 minutes
2023-04-07 10:37:26,616:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:26,617:INFO:Initializing create_model()
2023-04-07 10:37:26,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:26,618:INFO:Checking exceptions
2023-04-07 10:37:26,618:INFO:Importing libraries
2023-04-07 10:37:26,618:INFO:Copying training dataset
2023-04-07 10:37:26,625:INFO:Defining folds
2023-04-07 10:37:26,625:INFO:Declaring metric variables
2023-04-07 10:37:26,626:INFO:Importing untrained model
2023-04-07 10:37:26,626:INFO:Gradient Boosting Classifier Imported successfully
2023-04-07 10:37:26,627:INFO:Starting cross validation
2023-04-07 10:37:26,629:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:27,917:INFO:Calculating mean and std
2023-04-07 10:37:27,918:INFO:Creating metrics dataframe
2023-04-07 10:37:28,128:INFO:Uploading results into container
2023-04-07 10:37:28,130:INFO:Uploading model into container now
2023-04-07 10:37:28,131:INFO:_master_model_container: 10
2023-04-07 10:37:28,132:INFO:_display_container: 2
2023-04-07 10:37:28,133:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-07 10:37:28,134:INFO:create_model() successfully completed......................................
2023-04-07 10:37:28,251:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:28,251:INFO:Creating metrics dataframe
2023-04-07 10:37:28,262:INFO:Initializing Linear Discriminant Analysis
2023-04-07 10:37:28,263:INFO:Total runtime is 0.4191186904907227 minutes
2023-04-07 10:37:28,263:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:28,264:INFO:Initializing create_model()
2023-04-07 10:37:28,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:28,264:INFO:Checking exceptions
2023-04-07 10:37:28,265:INFO:Importing libraries
2023-04-07 10:37:28,265:INFO:Copying training dataset
2023-04-07 10:37:28,273:INFO:Defining folds
2023-04-07 10:37:28,273:INFO:Declaring metric variables
2023-04-07 10:37:28,273:INFO:Importing untrained model
2023-04-07 10:37:28,274:INFO:Linear Discriminant Analysis Imported successfully
2023-04-07 10:37:28,274:INFO:Starting cross validation
2023-04-07 10:37:28,276:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:29,378:INFO:Calculating mean and std
2023-04-07 10:37:29,379:INFO:Creating metrics dataframe
2023-04-07 10:37:29,547:INFO:Uploading results into container
2023-04-07 10:37:29,549:INFO:Uploading model into container now
2023-04-07 10:37:29,550:INFO:_master_model_container: 11
2023-04-07 10:37:29,550:INFO:_display_container: 2
2023-04-07 10:37:29,550:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-07 10:37:29,550:INFO:create_model() successfully completed......................................
2023-04-07 10:37:29,674:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:29,674:INFO:Creating metrics dataframe
2023-04-07 10:37:29,684:INFO:Initializing Extra Trees Classifier
2023-04-07 10:37:29,684:INFO:Total runtime is 0.44280804793039963 minutes
2023-04-07 10:37:29,684:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:29,685:INFO:Initializing create_model()
2023-04-07 10:37:29,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:29,685:INFO:Checking exceptions
2023-04-07 10:37:29,685:INFO:Importing libraries
2023-04-07 10:37:29,685:INFO:Copying training dataset
2023-04-07 10:37:29,693:INFO:Defining folds
2023-04-07 10:37:29,694:INFO:Declaring metric variables
2023-04-07 10:37:29,694:INFO:Importing untrained model
2023-04-07 10:37:29,695:INFO:Extra Trees Classifier Imported successfully
2023-04-07 10:37:29,696:INFO:Starting cross validation
2023-04-07 10:37:29,700:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:30,966:INFO:Calculating mean and std
2023-04-07 10:37:30,967:INFO:Creating metrics dataframe
2023-04-07 10:37:31,159:INFO:Uploading results into container
2023-04-07 10:37:31,159:INFO:Uploading model into container now
2023-04-07 10:37:31,159:INFO:_master_model_container: 12
2023-04-07 10:37:31,159:INFO:_display_container: 2
2023-04-07 10:37:31,160:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-07 10:37:31,160:INFO:create_model() successfully completed......................................
2023-04-07 10:37:31,275:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:31,275:INFO:Creating metrics dataframe
2023-04-07 10:37:31,286:INFO:Initializing Light Gradient Boosting Machine
2023-04-07 10:37:31,286:INFO:Total runtime is 0.46949983040491744 minutes
2023-04-07 10:37:31,287:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:31,288:INFO:Initializing create_model()
2023-04-07 10:37:31,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:31,288:INFO:Checking exceptions
2023-04-07 10:37:31,288:INFO:Importing libraries
2023-04-07 10:37:31,288:INFO:Copying training dataset
2023-04-07 10:37:31,297:INFO:Defining folds
2023-04-07 10:37:31,297:INFO:Declaring metric variables
2023-04-07 10:37:31,297:INFO:Importing untrained model
2023-04-07 10:37:31,298:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-07 10:37:31,299:INFO:Starting cross validation
2023-04-07 10:37:31,302:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:32,440:INFO:Calculating mean and std
2023-04-07 10:37:32,441:INFO:Creating metrics dataframe
2023-04-07 10:37:32,460:INFO:PyCaret ClassificationExperiment
2023-04-07 10:37:32,460:INFO:Logging name: clf-default-name
2023-04-07 10:37:32,461:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-07 10:37:32,461:INFO:version 3.0.0
2023-04-07 10:37:32,461:INFO:Initializing setup()
2023-04-07 10:37:32,461:INFO:self.USI: b838
2023-04-07 10:37:32,461:INFO:self._variable_keys: {'target_param', 'fold_shuffle_param', 'fold_groups_param', 'fold_generator', 'gpu_param', 'logging_param', 'fix_imbalance', 'log_plots_param', 'n_jobs_param', '_ml_usecase', 'USI', 'is_multiclass', 'exp_id', 'pipeline', 'gpu_n_jobs_param', 'exp_name_log', 'y_test', 'X_test', 'y_train', 'y', '_available_plots', 'html_param', 'idx', 'X', 'X_train', 'memory', 'data', 'seed'}
2023-04-07 10:37:32,461:INFO:Checking environment
2023-04-07 10:37:32,461:INFO:python_version: 3.8.16
2023-04-07 10:37:32,462:INFO:python_build: ('default', 'Mar  2 2023 03:18:16')
2023-04-07 10:37:32,462:INFO:machine: AMD64
2023-04-07 10:37:32,462:INFO:platform: Windows-10-10.0.19045-SP0
2023-04-07 10:37:32,467:INFO:Memory: svmem(total=8395538432, available=1419857920, percent=83.1, used=6975680512, free=1419857920)
2023-04-07 10:37:32,467:INFO:Physical Core: 4
2023-04-07 10:37:32,467:INFO:Logical Core: 8
2023-04-07 10:37:32,468:INFO:Checking libraries
2023-04-07 10:37:32,468:INFO:System:
2023-04-07 10:37:32,468:INFO:    python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
2023-04-07 10:37:32,468:INFO:executable: C:\Users\user\anaconda3\envs\db\python.exe
2023-04-07 10:37:32,468:INFO:   machine: Windows-10-10.0.19045-SP0
2023-04-07 10:37:32,468:INFO:PyCaret required dependencies:
2023-04-07 10:37:32,468:INFO:                 pip: 23.0.1
2023-04-07 10:37:32,469:INFO:          setuptools: 65.6.3
2023-04-07 10:37:32,469:INFO:             pycaret: 3.0.0
2023-04-07 10:37:32,469:INFO:             IPython: 8.11.0
2023-04-07 10:37:32,469:INFO:          ipywidgets: 8.0.4
2023-04-07 10:37:32,469:INFO:                tqdm: 4.64.1
2023-04-07 10:37:32,469:INFO:               numpy: 1.23.5
2023-04-07 10:37:32,470:INFO:              pandas: 1.5.3
2023-04-07 10:37:32,470:INFO:              jinja2: 3.1.2
2023-04-07 10:37:32,470:INFO:               scipy: 1.9.3
2023-04-07 10:37:32,470:INFO:              joblib: 1.2.0
2023-04-07 10:37:32,470:INFO:             sklearn: 1.2.2
2023-04-07 10:37:32,470:INFO:                pyod: 1.0.9
2023-04-07 10:37:32,470:INFO:            imblearn: 0.10.1
2023-04-07 10:37:32,471:INFO:   category_encoders: 2.6.0
2023-04-07 10:37:32,471:INFO:            lightgbm: 3.3.5
2023-04-07 10:37:32,471:INFO:               numba: 0.56.4
2023-04-07 10:37:32,471:INFO:            requests: 2.28.2
2023-04-07 10:37:32,471:INFO:          matplotlib: 3.6.3
2023-04-07 10:37:32,471:INFO:          scikitplot: 0.3.7
2023-04-07 10:37:32,472:INFO:         yellowbrick: 1.5
2023-04-07 10:37:32,472:INFO:              plotly: 5.14.1
2023-04-07 10:37:32,472:INFO:             kaleido: 0.2.1
2023-04-07 10:37:32,472:INFO:         statsmodels: 0.13.5
2023-04-07 10:37:32,472:INFO:              sktime: 0.17.0
2023-04-07 10:37:32,472:INFO:               tbats: 1.1.2
2023-04-07 10:37:32,472:INFO:            pmdarima: 2.0.3
2023-04-07 10:37:32,472:INFO:              psutil: 5.9.4
2023-04-07 10:37:32,473:INFO:PyCaret optional dependencies:
2023-04-07 10:37:32,473:INFO:                shap: 0.41.0
2023-04-07 10:37:32,473:INFO:           interpret: Not installed
2023-04-07 10:37:32,473:INFO:                umap: Not installed
2023-04-07 10:37:32,473:INFO:    pandas_profiling: 4.1.0
2023-04-07 10:37:32,473:INFO:  explainerdashboard: Not installed
2023-04-07 10:37:32,474:INFO:             autoviz: Not installed
2023-04-07 10:37:32,474:INFO:           fairlearn: Not installed
2023-04-07 10:37:32,474:INFO:             xgboost: Not installed
2023-04-07 10:37:32,474:INFO:            catboost: Not installed
2023-04-07 10:37:32,474:INFO:              kmodes: Not installed
2023-04-07 10:37:32,474:INFO:             mlxtend: Not installed
2023-04-07 10:37:32,474:INFO:       statsforecast: Not installed
2023-04-07 10:37:32,474:INFO:        tune_sklearn: Not installed
2023-04-07 10:37:32,474:INFO:                 ray: Not installed
2023-04-07 10:37:32,475:INFO:            hyperopt: Not installed
2023-04-07 10:37:32,475:INFO:              optuna: Not installed
2023-04-07 10:37:32,475:INFO:               skopt: Not installed
2023-04-07 10:37:32,475:INFO:              mlflow: Not installed
2023-04-07 10:37:32,475:INFO:              gradio: Not installed
2023-04-07 10:37:32,475:INFO:             fastapi: Not installed
2023-04-07 10:37:32,475:INFO:             uvicorn: Not installed
2023-04-07 10:37:32,476:INFO:              m2cgen: Not installed
2023-04-07 10:37:32,476:INFO:           evidently: Not installed
2023-04-07 10:37:32,476:INFO:               fugue: Not installed
2023-04-07 10:37:32,476:INFO:           streamlit: 1.20.0
2023-04-07 10:37:32,476:INFO:             prophet: Not installed
2023-04-07 10:37:32,476:INFO:None
2023-04-07 10:37:32,476:INFO:Set up data.
2023-04-07 10:37:32,489:INFO:Set up train/test split.
2023-04-07 10:37:32,500:INFO:Set up index.
2023-04-07 10:37:32,501:INFO:Set up folding strategy.
2023-04-07 10:37:32,501:INFO:Assigning column types.
2023-04-07 10:37:32,506:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-07 10:37:32,563:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 10:37:32,564:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:37:32,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:32,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:32,653:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-07 10:37:32,655:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:37:32,702:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:32,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:32,703:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-07 10:37:32,775:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:37:32,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:32,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:32,918:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-07 10:37:32,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:32,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:32,965:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-07 10:37:33,073:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:33,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:33,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:33,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:33,204:INFO:Preparing preprocessing pipeline...
2023-04-07 10:37:33,205:INFO:Set up simple imputation.
2023-04-07 10:37:33,211:INFO:Set up encoding of ordinal features.
2023-04-07 10:37:33,216:INFO:Set up encoding of categorical features.
2023-04-07 10:37:33,414:INFO:Finished creating preprocessing pipeline.
2023-04-07 10:37:33,454:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-04-07 10:37:33,454:INFO:Creating final display dataframe.
2023-04-07 10:37:33,605:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          survived
2                   Target type            Binary
3           Original data shape         (891, 15)
4        Transformed data shape         (891, 29)
5   Transformed train set shape         (623, 29)
6    Transformed test set shape         (268, 29)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 7
10     Rows with missing values             79.6%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              b838
2023-04-07 10:37:33,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:33,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:33,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:33,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-07 10:37:33,849:INFO:setup() successfully completed in 1.59s...............
2023-04-07 10:37:33,849:INFO:Initializing compare_models()
2023-04-07 10:37:33,849:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-07 10:37:33,850:INFO:Checking exceptions
2023-04-07 10:37:33,858:INFO:Preparing display monitor
2023-04-07 10:37:33,869:INFO:Initializing Logistic Regression
2023-04-07 10:37:33,869:INFO:Total runtime is 0.0 minutes
2023-04-07 10:37:33,870:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:33,870:INFO:Initializing create_model()
2023-04-07 10:37:33,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:33,871:INFO:Checking exceptions
2023-04-07 10:37:33,871:INFO:Importing libraries
2023-04-07 10:37:33,871:INFO:Copying training dataset
2023-04-07 10:37:33,883:INFO:Defining folds
2023-04-07 10:37:33,883:INFO:Declaring metric variables
2023-04-07 10:37:33,884:INFO:Importing untrained model
2023-04-07 10:37:33,884:INFO:Logistic Regression Imported successfully
2023-04-07 10:37:33,885:INFO:Starting cross validation
2023-04-07 10:37:33,888:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:34,253:INFO:Uploading results into container
2023-04-07 10:37:34,256:INFO:Uploading model into container now
2023-04-07 10:37:34,261:INFO:_master_model_container: 13
2023-04-07 10:37:34,262:INFO:_display_container: 2
2023-04-07 10:37:34,265:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-07 10:37:34,265:INFO:create_model() successfully completed......................................
2023-04-07 10:37:34,431:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:34,431:INFO:Creating metrics dataframe
2023-04-07 10:37:34,445:INFO:Initializing Dummy Classifier
2023-04-07 10:37:34,446:INFO:Total runtime is 0.5221695502599081 minutes
2023-04-07 10:37:34,446:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:34,446:INFO:Initializing create_model()
2023-04-07 10:37:34,448:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB7670250>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:34,448:INFO:Checking exceptions
2023-04-07 10:37:34,448:INFO:Importing libraries
2023-04-07 10:37:34,448:INFO:Copying training dataset
2023-04-07 10:37:34,460:INFO:Defining folds
2023-04-07 10:37:34,461:INFO:Declaring metric variables
2023-04-07 10:37:34,461:INFO:Importing untrained model
2023-04-07 10:37:34,462:INFO:Dummy Classifier Imported successfully
2023-04-07 10:37:34,462:INFO:Starting cross validation
2023-04-07 10:37:34,464:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:34,961:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:34,975:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:34,999:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:35,510:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:35,555:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:35,990:INFO:Calculating mean and std
2023-04-07 10:37:35,992:INFO:Creating metrics dataframe
2023-04-07 10:37:36,160:INFO:Uploading results into container
2023-04-07 10:37:36,161:INFO:Uploading model into container now
2023-04-07 10:37:36,161:INFO:_master_model_container: 1
2023-04-07 10:37:36,161:INFO:_display_container: 2
2023-04-07 10:37:36,162:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 10:37:36,162:INFO:create_model() successfully completed......................................
2023-04-07 10:37:36,271:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:36,271:INFO:Creating metrics dataframe
2023-04-07 10:37:36,281:INFO:Initializing K Neighbors Classifier
2023-04-07 10:37:36,281:INFO:Total runtime is 0.04019883871078491 minutes
2023-04-07 10:37:36,282:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:36,282:INFO:Initializing create_model()
2023-04-07 10:37:36,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:36,283:INFO:Checking exceptions
2023-04-07 10:37:36,283:INFO:Importing libraries
2023-04-07 10:37:36,283:INFO:Copying training dataset
2023-04-07 10:37:36,299:INFO:Defining folds
2023-04-07 10:37:36,299:INFO:Declaring metric variables
2023-04-07 10:37:36,299:INFO:Importing untrained model
2023-04-07 10:37:36,300:INFO:K Neighbors Classifier Imported successfully
2023-04-07 10:37:36,300:INFO:Starting cross validation
2023-04-07 10:37:36,304:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:36,563:INFO:Calculating mean and std
2023-04-07 10:37:36,565:INFO:Creating metrics dataframe
2023-04-07 10:37:36,850:INFO:Uploading results into container
2023-04-07 10:37:36,851:INFO:Uploading model into container now
2023-04-07 10:37:36,852:INFO:_master_model_container: 14
2023-04-07 10:37:36,852:INFO:_display_container: 2
2023-04-07 10:37:36,852:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-07 10:37:36,852:INFO:create_model() successfully completed......................................
2023-04-07 10:37:36,985:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:36,986:INFO:Creating metrics dataframe
2023-04-07 10:37:37,003:INFO:Initializing create_model()
2023-04-07 10:37:37,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:37,003:INFO:Checking exceptions
2023-04-07 10:37:37,005:INFO:Importing libraries
2023-04-07 10:37:37,005:INFO:Copying training dataset
2023-04-07 10:37:37,015:INFO:Defining folds
2023-04-07 10:37:37,015:INFO:Declaring metric variables
2023-04-07 10:37:37,015:INFO:Importing untrained model
2023-04-07 10:37:37,015:INFO:Declaring custom model
2023-04-07 10:37:37,017:INFO:Logistic Regression Imported successfully
2023-04-07 10:37:37,020:INFO:Cross validation set to False
2023-04-07 10:37:37,020:INFO:Fitting Model
2023-04-07 10:37:37,584:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 10:37:37,585:INFO:create_model() successfully completed......................................
2023-04-07 10:37:37,703:INFO:Initializing create_model()
2023-04-07 10:37:37,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:37,703:INFO:Checking exceptions
2023-04-07 10:37:37,705:INFO:Importing libraries
2023-04-07 10:37:37,706:INFO:Copying training dataset
2023-04-07 10:37:37,715:INFO:Defining folds
2023-04-07 10:37:37,715:INFO:Declaring metric variables
2023-04-07 10:37:37,716:INFO:Importing untrained model
2023-04-07 10:37:37,716:INFO:Declaring custom model
2023-04-07 10:37:37,717:INFO:Naive Bayes Imported successfully
2023-04-07 10:37:37,720:INFO:Cross validation set to False
2023-04-07 10:37:37,720:INFO:Fitting Model
2023-04-07 10:37:38,329:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 10:37:38,329:INFO:create_model() successfully completed......................................
2023-04-07 10:37:38,432:INFO:Initializing create_model()
2023-04-07 10:37:38,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB60B7490>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:38,432:INFO:Checking exceptions
2023-04-07 10:37:38,434:INFO:Importing libraries
2023-04-07 10:37:38,434:INFO:Copying training dataset
2023-04-07 10:37:38,444:INFO:Defining folds
2023-04-07 10:37:38,445:INFO:Declaring metric variables
2023-04-07 10:37:38,445:INFO:Importing untrained model
2023-04-07 10:37:38,445:INFO:Declaring custom model
2023-04-07 10:37:38,446:INFO:Decision Tree Classifier Imported successfully
2023-04-07 10:37:38,449:INFO:Cross validation set to False
2023-04-07 10:37:38,449:INFO:Fitting Model
2023-04-07 10:37:38,890:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 10:37:38,890:INFO:create_model() successfully completed......................................
2023-04-07 10:37:39,030:INFO:                                    Model  Accuracy     AUC  Recall   Prec.  \
2023-04-07 10:37:39,030:INFO:lr                    Logistic Regression    1.0000  1.0000  1.0000  1.0000   
2023-04-07 10:37:39,030:INFO:nb                            Naive Bayes    1.0000  1.0000  1.0000  1.0000   
2023-04-07 10:37:39,030:INFO:dt               Decision Tree Classifier    1.0000  1.0000  1.0000  1.0000   
2023-04-07 10:37:39,031:INFO:ridge                    Ridge Classifier    1.0000  0.0000  1.0000  1.0000   
2023-04-07 10:37:39,031:INFO:rf               Random Forest Classifier    1.0000  1.0000  1.0000  1.0000   
2023-04-07 10:37:39,031:INFO:ada                  Ada Boost Classifier    1.0000  1.0000  1.0000  1.0000   
2023-04-07 10:37:39,031:INFO:gbc          Gradient Boosting Classifier    1.0000  1.0000  1.0000  1.0000   
2023-04-07 10:37:39,031:INFO:et                 Extra Trees Classifier    1.0000  1.0000  1.0000  1.0000   
2023-04-07 10:37:39,031:INFO:lightgbm  Light Gradient Boosting Machine    1.0000  1.0000  1.0000  1.0000   
2023-04-07 10:37:39,031:INFO:qda       Quadratic Discriminant Analysis    0.9984  0.9987  1.0000  0.9959   
2023-04-07 10:37:39,031:INFO:lda          Linear Discriminant Analysis    0.8186  0.8685  0.7449  0.7746   
2023-04-07 10:37:39,032:INFO:svm                   SVM - Linear Kernel    0.8027  0.0000  0.7317  0.8244   
2023-04-07 10:37:39,032:INFO:knn                K Neighbors Classifier    0.7304  0.8003  0.6026  0.6688   
2023-04-07 10:37:39,032:INFO:dummy                    Dummy Classifier    0.6164  0.5000  0.0000  0.0000   
2023-04-07 10:37:39,032:INFO:
2023-04-07 10:37:39,032:INFO:              F1   Kappa     MCC  TT (Sec)  
2023-04-07 10:37:39,032:INFO:lr        1.0000  1.0000  1.0000     1.512  
2023-04-07 10:37:39,032:INFO:nb        1.0000  1.0000  1.0000     0.264  
2023-04-07 10:37:39,032:INFO:dt        1.0000  1.0000  1.0000     0.190  
2023-04-07 10:37:39,032:INFO:ridge     1.0000  1.0000  1.0000     0.172  
2023-04-07 10:37:39,033:INFO:rf        1.0000  1.0000  1.0000     0.346  
2023-04-07 10:37:39,033:INFO:ada       1.0000  1.0000  1.0000     0.174  
2023-04-07 10:37:39,033:INFO:gbc       1.0000  1.0000  1.0000     0.258  
2023-04-07 10:37:39,033:INFO:et        1.0000  1.0000  1.0000     0.254  
2023-04-07 10:37:39,033:INFO:lightgbm  1.0000  1.0000  1.0000     0.228  
2023-04-07 10:37:39,033:INFO:qda       0.9979  0.9966  0.9967     0.258  
2023-04-07 10:37:39,033:INFO:lda       0.7591  0.6138  0.6145     0.220  
2023-04-07 10:37:39,033:INFO:svm       0.7077  0.5720  0.6236     0.184  
2023-04-07 10:37:39,033:INFO:knn       0.6303  0.4196  0.4237     0.934  
2023-04-07 10:37:39,034:INFO:dummy     0.0000  0.0000  0.0000     0.420  
2023-04-07 10:37:39,034:INFO:_master_model_container: 14
2023-04-07 10:37:39,034:INFO:_display_container: 2
2023-04-07 10:37:39,035:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')]
2023-04-07 10:37:39,035:INFO:compare_models() successfully completed......................................
2023-04-07 10:37:39,037:INFO:Initializing blend_models()
2023-04-07 10:37:39,037:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator_list=[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-04-07 10:37:39,037:INFO:Checking exceptions
2023-04-07 10:37:39,042:WARNING:Processing:   0%|                                                                                | 0/6 [00:00<?, ?it/s]
2023-04-07 10:37:39,042:INFO:Importing libraries
2023-04-07 10:37:39,042:INFO:Copying training dataset
2023-04-07 10:37:39,043:INFO:Getting model names
2023-04-07 10:37:39,043:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:39,048:INFO:Initializing create_model()
2023-04-07 10:37:39,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB62AC190>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:39,048:INFO:Checking exceptions
2023-04-07 10:37:39,048:INFO:Importing libraries
2023-04-07 10:37:39,049:INFO:Copying training dataset
2023-04-07 10:37:39,056:INFO:Defining folds
2023-04-07 10:37:39,057:INFO:Declaring metric variables
2023-04-07 10:37:39,057:INFO:Importing untrained model
2023-04-07 10:37:39,057:INFO:Declaring custom model
2023-04-07 10:37:39,058:INFO:Voting Classifier Imported successfully
2023-04-07 10:37:39,059:INFO:Starting cross validation
2023-04-07 10:37:39,061:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:39,156:INFO:Calculating mean and std
2023-04-07 10:37:39,158:INFO:Creating metrics dataframe
2023-04-07 10:37:39,404:INFO:Uploading results into container
2023-04-07 10:37:39,404:INFO:Uploading model into container now
2023-04-07 10:37:39,405:INFO:_master_model_container: 2
2023-04-07 10:37:39,405:INFO:_display_container: 2
2023-04-07 10:37:39,406:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-07 10:37:39,406:INFO:create_model() successfully completed......................................
2023-04-07 10:37:39,550:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:39,551:INFO:Creating metrics dataframe
2023-04-07 10:37:39,564:INFO:Initializing Naive Bayes
2023-04-07 10:37:39,565:INFO:Total runtime is 0.09492482741673787 minutes
2023-04-07 10:37:39,565:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:39,565:INFO:Initializing create_model()
2023-04-07 10:37:39,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:39,566:INFO:Checking exceptions
2023-04-07 10:37:39,566:INFO:Importing libraries
2023-04-07 10:37:39,566:INFO:Copying training dataset
2023-04-07 10:37:39,576:INFO:Defining folds
2023-04-07 10:37:39,576:INFO:Declaring metric variables
2023-04-07 10:37:39,577:INFO:Importing untrained model
2023-04-07 10:37:39,577:INFO:Naive Bayes Imported successfully
2023-04-07 10:37:39,578:INFO:Starting cross validation
2023-04-07 10:37:39,581:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:40,851:INFO:Calculating mean and std
2023-04-07 10:37:40,852:WARNING:Processing:  83%|############################################################            | 5/6 [00:01<00:00,  2.76it/s]
2023-04-07 10:37:40,852:INFO:Creating metrics dataframe
2023-04-07 10:37:40,854:INFO:Finalizing model
2023-04-07 10:37:41,376:WARNING:Processing: 100%|########################################################################| 6/6 [00:02<00:00,  2.51it/s]
2023-04-07 10:37:41,377:WARNING:                                                                                                                       
2023-04-07 10:37:41,377:INFO:Uploading results into container
2023-04-07 10:37:41,378:INFO:Uploading model into container now
2023-04-07 10:37:41,379:INFO:_master_model_container: 3
2023-04-07 10:37:41,379:INFO:_display_container: 2
2023-04-07 10:37:41,387:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 10:37:41,387:INFO:create_model() successfully completed......................................
2023-04-07 10:37:41,538:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:41,566:INFO:      Accuracy  AUC  Recall  Prec.   F1  Kappa  MCC
2023-04-07 10:37:41,566:INFO:Fold                                               
2023-04-07 10:37:41,566:INFO:0          1.0  1.0     1.0    1.0  1.0    1.0  1.0
2023-04-07 10:37:41,566:INFO:1          1.0  1.0     1.0    1.0  1.0    1.0  1.0
2023-04-07 10:37:41,566:INFO:2          1.0  1.0     1.0    1.0  1.0    1.0  1.0
2023-04-07 10:37:41,567:INFO:3          1.0  1.0     1.0    1.0  1.0    1.0  1.0
2023-04-07 10:37:41,567:INFO:4          1.0  1.0     1.0    1.0  1.0    1.0  1.0
2023-04-07 10:37:41,567:INFO:Mean       1.0  1.0     1.0    1.0  1.0    1.0  1.0
2023-04-07 10:37:41,567:INFO:Std        0.0  0.0     0.0    0.0  0.0    0.0  0.0
2023-04-07 10:37:41,567:INFO:_master_model_container: 3
2023-04-07 10:37:41,568:INFO:_display_container: 2
2023-04-07 10:37:41,574:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 10:37:41,575:INFO:blend_models() successfully completed......................................
2023-04-07 10:37:41,822:INFO:Initializing save_model()
2023-04-07 10:37:41,822:INFO:save_model(model=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), model_name=classification, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-07 10:37:41,823:INFO:Adding model into prep_pipe
2023-04-07 10:37:41,864:INFO:Transformation Pipeline and Model Successfully Saved
2023-04-07 10:37:41,864:INFO:classification.pkl saved in current working directory
2023-04-07 10:37:41,959:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
                                              ('Decision Tree Classifier',
                                               DecisionTreeClassifier(ccp_alpha=0.0,
                                                                      class_weight=None,
                                                                      criterion='gini',
                                                                      max_depth=None,
                                                                      max_features=None,
                                                                      max_leaf_nodes=None,
                                                                      min_impurity_decrease=0.0,
                                                                      min_samples_leaf=1,
                                                                      min_samples_split=2,
                                                                      min_weight_fraction_leaf=0.0,
                                                                      random_state=123,
                                                                      splitter='best'))],
                                  flatten_transform=True, n_jobs=-1,
                                  verbose=False, voting='soft',
                                  weights=None))],
         verbose=False)
2023-04-07 10:37:41,960:INFO:save_model() successfully completed......................................
2023-04-07 10:37:42,572:INFO:Calculating mean and std
2023-04-07 10:37:42,577:INFO:Creating metrics dataframe
2023-04-07 10:37:42,978:INFO:Uploading results into container
2023-04-07 10:37:42,979:INFO:Uploading model into container now
2023-04-07 10:37:42,980:INFO:_master_model_container: 4
2023-04-07 10:37:42,980:INFO:_display_container: 3
2023-04-07 10:37:42,981:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 10:37:42,981:INFO:create_model() successfully completed......................................
2023-04-07 10:37:43,284:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:43,284:INFO:Creating metrics dataframe
2023-04-07 10:37:43,297:INFO:Initializing Decision Tree Classifier
2023-04-07 10:37:43,297:INFO:Total runtime is 0.1571242372194926 minutes
2023-04-07 10:37:43,298:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:43,298:INFO:Initializing create_model()
2023-04-07 10:37:43,299:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:43,299:INFO:Checking exceptions
2023-04-07 10:37:43,299:INFO:Importing libraries
2023-04-07 10:37:43,299:INFO:Copying training dataset
2023-04-07 10:37:43,311:INFO:Defining folds
2023-04-07 10:37:43,311:INFO:Declaring metric variables
2023-04-07 10:37:43,311:INFO:Importing untrained model
2023-04-07 10:37:43,312:INFO:Decision Tree Classifier Imported successfully
2023-04-07 10:37:43,313:INFO:Starting cross validation
2023-04-07 10:37:43,317:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:44,209:INFO:Calculating mean and std
2023-04-07 10:37:44,212:INFO:Creating metrics dataframe
2023-04-07 10:37:44,472:INFO:Uploading results into container
2023-04-07 10:37:44,472:INFO:Uploading model into container now
2023-04-07 10:37:44,472:INFO:_master_model_container: 5
2023-04-07 10:37:44,472:INFO:_display_container: 3
2023-04-07 10:37:44,473:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 10:37:44,473:INFO:create_model() successfully completed......................................
2023-04-07 10:37:44,606:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:44,606:INFO:Creating metrics dataframe
2023-04-07 10:37:44,621:INFO:Initializing SVM - Linear Kernel
2023-04-07 10:37:44,621:INFO:Total runtime is 0.17919449806213378 minutes
2023-04-07 10:37:44,622:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:44,622:INFO:Initializing create_model()
2023-04-07 10:37:44,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:44,622:INFO:Checking exceptions
2023-04-07 10:37:44,623:INFO:Importing libraries
2023-04-07 10:37:44,623:INFO:Copying training dataset
2023-04-07 10:37:44,633:INFO:Defining folds
2023-04-07 10:37:44,633:INFO:Declaring metric variables
2023-04-07 10:37:44,633:INFO:Importing untrained model
2023-04-07 10:37:44,633:INFO:SVM - Linear Kernel Imported successfully
2023-04-07 10:37:44,634:INFO:Starting cross validation
2023-04-07 10:37:44,636:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:44,926:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:44,973:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:44,985:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:44,990:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:44,991:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-07 10:37:45,461:INFO:Calculating mean and std
2023-04-07 10:37:45,463:INFO:Creating metrics dataframe
2023-04-07 10:37:45,696:INFO:Uploading results into container
2023-04-07 10:37:45,697:INFO:Uploading model into container now
2023-04-07 10:37:45,697:INFO:_master_model_container: 6
2023-04-07 10:37:45,697:INFO:_display_container: 3
2023-04-07 10:37:45,698:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-07 10:37:45,698:INFO:create_model() successfully completed......................................
2023-04-07 10:37:45,796:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:45,797:INFO:Creating metrics dataframe
2023-04-07 10:37:45,807:INFO:Initializing Ridge Classifier
2023-04-07 10:37:45,808:INFO:Total runtime is 0.19897926648457845 minutes
2023-04-07 10:37:45,808:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:45,808:INFO:Initializing create_model()
2023-04-07 10:37:45,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:45,809:INFO:Checking exceptions
2023-04-07 10:37:45,809:INFO:Importing libraries
2023-04-07 10:37:45,809:INFO:Copying training dataset
2023-04-07 10:37:45,820:INFO:Defining folds
2023-04-07 10:37:45,820:INFO:Declaring metric variables
2023-04-07 10:37:45,820:INFO:Importing untrained model
2023-04-07 10:37:45,821:INFO:Ridge Classifier Imported successfully
2023-04-07 10:37:45,821:INFO:Starting cross validation
2023-04-07 10:37:45,823:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:46,123:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:46,133:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:46,137:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:46,151:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:46,159:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\user\anaconda3\envs\db\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-07 10:37:46,660:INFO:Calculating mean and std
2023-04-07 10:37:46,662:INFO:Creating metrics dataframe
2023-04-07 10:37:46,873:INFO:Uploading results into container
2023-04-07 10:37:46,874:INFO:Uploading model into container now
2023-04-07 10:37:46,874:INFO:_master_model_container: 7
2023-04-07 10:37:46,874:INFO:_display_container: 3
2023-04-07 10:37:46,875:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-07 10:37:46,875:INFO:create_model() successfully completed......................................
2023-04-07 10:37:46,992:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:46,992:INFO:Creating metrics dataframe
2023-04-07 10:37:47,002:INFO:Initializing Random Forest Classifier
2023-04-07 10:37:47,002:INFO:Total runtime is 0.21888372500737507 minutes
2023-04-07 10:37:47,003:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:47,003:INFO:Initializing create_model()
2023-04-07 10:37:47,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:47,003:INFO:Checking exceptions
2023-04-07 10:37:47,003:INFO:Importing libraries
2023-04-07 10:37:47,004:INFO:Copying training dataset
2023-04-07 10:37:47,013:INFO:Defining folds
2023-04-07 10:37:47,013:INFO:Declaring metric variables
2023-04-07 10:37:47,014:INFO:Importing untrained model
2023-04-07 10:37:47,014:INFO:Random Forest Classifier Imported successfully
2023-04-07 10:37:47,014:INFO:Starting cross validation
2023-04-07 10:37:47,016:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:48,408:INFO:Calculating mean and std
2023-04-07 10:37:48,409:INFO:Creating metrics dataframe
2023-04-07 10:37:48,656:INFO:Uploading results into container
2023-04-07 10:37:48,657:INFO:Uploading model into container now
2023-04-07 10:37:48,658:INFO:_master_model_container: 8
2023-04-07 10:37:48,658:INFO:_display_container: 3
2023-04-07 10:37:48,659:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-07 10:37:48,659:INFO:create_model() successfully completed......................................
2023-04-07 10:37:48,775:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:48,775:INFO:Creating metrics dataframe
2023-04-07 10:37:48,785:INFO:Initializing Quadratic Discriminant Analysis
2023-04-07 10:37:48,785:INFO:Total runtime is 0.24859851598739624 minutes
2023-04-07 10:37:48,786:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:48,786:INFO:Initializing create_model()
2023-04-07 10:37:48,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:48,786:INFO:Checking exceptions
2023-04-07 10:37:48,786:INFO:Importing libraries
2023-04-07 10:37:48,787:INFO:Copying training dataset
2023-04-07 10:37:48,798:INFO:Defining folds
2023-04-07 10:37:48,798:INFO:Declaring metric variables
2023-04-07 10:37:48,798:INFO:Importing untrained model
2023-04-07 10:37:48,798:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-07 10:37:48,799:INFO:Starting cross validation
2023-04-07 10:37:48,801:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:49,034:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:49,070:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:49,104:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:49,109:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:49,119:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-07 10:37:49,686:INFO:Calculating mean and std
2023-04-07 10:37:49,689:INFO:Creating metrics dataframe
2023-04-07 10:37:49,930:INFO:Uploading results into container
2023-04-07 10:37:49,930:INFO:Uploading model into container now
2023-04-07 10:37:49,931:INFO:_master_model_container: 9
2023-04-07 10:37:49,931:INFO:_display_container: 3
2023-04-07 10:37:49,932:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-07 10:37:49,932:INFO:create_model() successfully completed......................................
2023-04-07 10:37:50,042:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:50,042:INFO:Creating metrics dataframe
2023-04-07 10:37:50,051:INFO:Initializing Ada Boost Classifier
2023-04-07 10:37:50,052:INFO:Total runtime is 0.26970812877019246 minutes
2023-04-07 10:37:50,052:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:50,052:INFO:Initializing create_model()
2023-04-07 10:37:50,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:50,052:INFO:Checking exceptions
2023-04-07 10:37:50,052:INFO:Importing libraries
2023-04-07 10:37:50,052:INFO:Copying training dataset
2023-04-07 10:37:50,066:INFO:Defining folds
2023-04-07 10:37:50,067:INFO:Declaring metric variables
2023-04-07 10:37:50,067:INFO:Importing untrained model
2023-04-07 10:37:50,068:INFO:Ada Boost Classifier Imported successfully
2023-04-07 10:37:50,068:INFO:Starting cross validation
2023-04-07 10:37:50,071:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:50,973:INFO:Calculating mean and std
2023-04-07 10:37:50,976:INFO:Creating metrics dataframe
2023-04-07 10:37:51,147:INFO:Uploading results into container
2023-04-07 10:37:51,147:INFO:Uploading model into container now
2023-04-07 10:37:51,147:INFO:_master_model_container: 10
2023-04-07 10:37:51,147:INFO:_display_container: 3
2023-04-07 10:37:51,148:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-07 10:37:51,148:INFO:create_model() successfully completed......................................
2023-04-07 10:37:51,252:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:51,252:INFO:Creating metrics dataframe
2023-04-07 10:37:51,259:INFO:Initializing Gradient Boosting Classifier
2023-04-07 10:37:51,259:INFO:Total runtime is 0.28983054161071775 minutes
2023-04-07 10:37:51,259:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:51,259:INFO:Initializing create_model()
2023-04-07 10:37:51,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:51,260:INFO:Checking exceptions
2023-04-07 10:37:51,260:INFO:Importing libraries
2023-04-07 10:37:51,260:INFO:Copying training dataset
2023-04-07 10:37:51,268:INFO:Defining folds
2023-04-07 10:37:51,268:INFO:Declaring metric variables
2023-04-07 10:37:51,269:INFO:Importing untrained model
2023-04-07 10:37:51,269:INFO:Gradient Boosting Classifier Imported successfully
2023-04-07 10:37:51,269:INFO:Starting cross validation
2023-04-07 10:37:51,271:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:52,316:INFO:Calculating mean and std
2023-04-07 10:37:52,319:INFO:Creating metrics dataframe
2023-04-07 10:37:52,524:INFO:Uploading results into container
2023-04-07 10:37:52,525:INFO:Uploading model into container now
2023-04-07 10:37:52,525:INFO:_master_model_container: 11
2023-04-07 10:37:52,526:INFO:_display_container: 3
2023-04-07 10:37:52,527:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-07 10:37:52,527:INFO:create_model() successfully completed......................................
2023-04-07 10:37:52,656:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:52,656:INFO:Creating metrics dataframe
2023-04-07 10:37:52,667:INFO:Initializing Linear Discriminant Analysis
2023-04-07 10:37:52,667:INFO:Total runtime is 0.31328639984130857 minutes
2023-04-07 10:37:52,667:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:52,667:INFO:Initializing create_model()
2023-04-07 10:37:52,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:52,668:INFO:Checking exceptions
2023-04-07 10:37:52,668:INFO:Importing libraries
2023-04-07 10:37:52,668:INFO:Copying training dataset
2023-04-07 10:37:52,678:INFO:Defining folds
2023-04-07 10:37:52,679:INFO:Declaring metric variables
2023-04-07 10:37:52,679:INFO:Importing untrained model
2023-04-07 10:37:52,679:INFO:Linear Discriminant Analysis Imported successfully
2023-04-07 10:37:52,679:INFO:Starting cross validation
2023-04-07 10:37:52,682:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:53,548:INFO:Calculating mean and std
2023-04-07 10:37:53,552:INFO:Creating metrics dataframe
2023-04-07 10:37:53,736:INFO:Uploading results into container
2023-04-07 10:37:53,737:INFO:Uploading model into container now
2023-04-07 10:37:53,738:INFO:_master_model_container: 12
2023-04-07 10:37:53,738:INFO:_display_container: 3
2023-04-07 10:37:53,738:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-07 10:37:53,738:INFO:create_model() successfully completed......................................
2023-04-07 10:37:53,842:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:53,842:INFO:Creating metrics dataframe
2023-04-07 10:37:53,852:INFO:Initializing Extra Trees Classifier
2023-04-07 10:37:53,852:INFO:Total runtime is 0.33304719924926757 minutes
2023-04-07 10:37:53,852:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:53,853:INFO:Initializing create_model()
2023-04-07 10:37:53,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:53,853:INFO:Checking exceptions
2023-04-07 10:37:53,853:INFO:Importing libraries
2023-04-07 10:37:53,854:INFO:Copying training dataset
2023-04-07 10:37:53,863:INFO:Defining folds
2023-04-07 10:37:53,863:INFO:Declaring metric variables
2023-04-07 10:37:53,863:INFO:Importing untrained model
2023-04-07 10:37:53,864:INFO:Extra Trees Classifier Imported successfully
2023-04-07 10:37:53,864:INFO:Starting cross validation
2023-04-07 10:37:53,867:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:55,080:INFO:Calculating mean and std
2023-04-07 10:37:55,083:INFO:Creating metrics dataframe
2023-04-07 10:37:55,283:INFO:Uploading results into container
2023-04-07 10:37:55,284:INFO:Uploading model into container now
2023-04-07 10:37:55,284:INFO:_master_model_container: 13
2023-04-07 10:37:55,284:INFO:_display_container: 3
2023-04-07 10:37:55,285:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-07 10:37:55,285:INFO:create_model() successfully completed......................................
2023-04-07 10:37:55,391:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:55,392:INFO:Creating metrics dataframe
2023-04-07 10:37:55,402:INFO:Initializing Light Gradient Boosting Machine
2023-04-07 10:37:55,402:INFO:Total runtime is 0.3588731567064921 minutes
2023-04-07 10:37:55,402:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:55,402:INFO:Initializing create_model()
2023-04-07 10:37:55,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:55,403:INFO:Checking exceptions
2023-04-07 10:37:55,403:INFO:Importing libraries
2023-04-07 10:37:55,403:INFO:Copying training dataset
2023-04-07 10:37:55,412:INFO:Defining folds
2023-04-07 10:37:55,412:INFO:Declaring metric variables
2023-04-07 10:37:55,412:INFO:Importing untrained model
2023-04-07 10:37:55,413:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-07 10:37:55,413:INFO:Starting cross validation
2023-04-07 10:37:55,416:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:56,308:INFO:Calculating mean and std
2023-04-07 10:37:56,313:INFO:Creating metrics dataframe
2023-04-07 10:37:56,485:INFO:Uploading results into container
2023-04-07 10:37:56,485:INFO:Uploading model into container now
2023-04-07 10:37:56,486:INFO:_master_model_container: 14
2023-04-07 10:37:56,486:INFO:_display_container: 3
2023-04-07 10:37:56,486:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-07 10:37:56,486:INFO:create_model() successfully completed......................................
2023-04-07 10:37:56,596:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:56,597:INFO:Creating metrics dataframe
2023-04-07 10:37:56,611:INFO:Initializing Dummy Classifier
2023-04-07 10:37:56,611:INFO:Total runtime is 0.3790307998657227 minutes
2023-04-07 10:37:56,611:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:56,612:INFO:Initializing create_model()
2023-04-07 10:37:56,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB75CFEB0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:56,612:INFO:Checking exceptions
2023-04-07 10:37:56,613:INFO:Importing libraries
2023-04-07 10:37:56,613:INFO:Copying training dataset
2023-04-07 10:37:56,623:INFO:Defining folds
2023-04-07 10:37:56,623:INFO:Declaring metric variables
2023-04-07 10:37:56,623:INFO:Importing untrained model
2023-04-07 10:37:56,624:INFO:Dummy Classifier Imported successfully
2023-04-07 10:37:56,624:INFO:Starting cross validation
2023-04-07 10:37:56,626:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:37:56,960:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:56,975:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:56,993:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:57,002:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:57,003:WARNING:C:\Users\user\anaconda3\envs\db\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-07 10:37:57,529:INFO:Calculating mean and std
2023-04-07 10:37:57,530:INFO:Creating metrics dataframe
2023-04-07 10:37:57,739:INFO:Uploading results into container
2023-04-07 10:37:57,740:INFO:Uploading model into container now
2023-04-07 10:37:57,742:INFO:_master_model_container: 15
2023-04-07 10:37:57,742:INFO:_display_container: 3
2023-04-07 10:37:57,742:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-07 10:37:57,742:INFO:create_model() successfully completed......................................
2023-04-07 10:37:57,887:INFO:SubProcess create_model() end ==================================
2023-04-07 10:37:57,887:INFO:Creating metrics dataframe
2023-04-07 10:37:57,907:INFO:Initializing create_model()
2023-04-07 10:37:57,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:57,907:INFO:Checking exceptions
2023-04-07 10:37:57,909:INFO:Importing libraries
2023-04-07 10:37:57,909:INFO:Copying training dataset
2023-04-07 10:37:57,920:INFO:Defining folds
2023-04-07 10:37:57,921:INFO:Declaring metric variables
2023-04-07 10:37:57,921:INFO:Importing untrained model
2023-04-07 10:37:57,921:INFO:Declaring custom model
2023-04-07 10:37:57,923:INFO:Logistic Regression Imported successfully
2023-04-07 10:37:57,927:INFO:Cross validation set to False
2023-04-07 10:37:57,928:INFO:Fitting Model
2023-04-07 10:37:58,231:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-07 10:37:58,231:INFO:create_model() successfully completed......................................
2023-04-07 10:37:58,339:INFO:Initializing create_model()
2023-04-07 10:37:58,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:58,340:INFO:Checking exceptions
2023-04-07 10:37:58,342:INFO:Importing libraries
2023-04-07 10:37:58,342:INFO:Copying training dataset
2023-04-07 10:37:58,352:INFO:Defining folds
2023-04-07 10:37:58,352:INFO:Declaring metric variables
2023-04-07 10:37:58,352:INFO:Importing untrained model
2023-04-07 10:37:58,352:INFO:Declaring custom model
2023-04-07 10:37:58,353:INFO:Naive Bayes Imported successfully
2023-04-07 10:37:58,357:INFO:Cross validation set to False
2023-04-07 10:37:58,357:INFO:Fitting Model
2023-04-07 10:37:58,692:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-07 10:37:58,692:INFO:create_model() successfully completed......................................
2023-04-07 10:37:58,800:INFO:Initializing create_model()
2023-04-07 10:37:58,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:58,800:INFO:Checking exceptions
2023-04-07 10:37:58,802:INFO:Importing libraries
2023-04-07 10:37:58,802:INFO:Copying training dataset
2023-04-07 10:37:58,809:INFO:Defining folds
2023-04-07 10:37:58,809:INFO:Declaring metric variables
2023-04-07 10:37:58,810:INFO:Importing untrained model
2023-04-07 10:37:58,810:INFO:Declaring custom model
2023-04-07 10:37:58,811:INFO:Decision Tree Classifier Imported successfully
2023-04-07 10:37:58,813:INFO:Cross validation set to False
2023-04-07 10:37:58,813:INFO:Fitting Model
2023-04-07 10:37:59,161:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-07 10:37:59,161:INFO:create_model() successfully completed......................................
2023-04-07 10:37:59,313:INFO:_master_model_container: 15
2023-04-07 10:37:59,313:INFO:_display_container: 3
2023-04-07 10:37:59,314:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')]
2023-04-07 10:37:59,314:INFO:compare_models() successfully completed......................................
2023-04-07 10:37:59,315:INFO:Initializing blend_models()
2023-04-07 10:37:59,315:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator_list=[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')], fold=5, round=4, choose_better=False, optimize=Accuracy, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-04-07 10:37:59,315:INFO:Checking exceptions
2023-04-07 10:37:59,319:INFO:Importing libraries
2023-04-07 10:37:59,319:INFO:Copying training dataset
2023-04-07 10:37:59,319:INFO:Getting model names
2023-04-07 10:37:59,319:INFO:SubProcess create_model() called ==================================
2023-04-07 10:37:59,323:INFO:Initializing create_model()
2023-04-07 10:37:59,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023EB5E95FA0>, model_only=True, return_train_score=False, kwargs={})
2023-04-07 10:37:59,323:INFO:Checking exceptions
2023-04-07 10:37:59,323:INFO:Importing libraries
2023-04-07 10:37:59,323:INFO:Copying training dataset
2023-04-07 10:37:59,329:INFO:Defining folds
2023-04-07 10:37:59,329:INFO:Declaring metric variables
2023-04-07 10:37:59,329:INFO:Importing untrained model
2023-04-07 10:37:59,330:INFO:Declaring custom model
2023-04-07 10:37:59,331:INFO:Voting Classifier Imported successfully
2023-04-07 10:37:59,331:INFO:Starting cross validation
2023-04-07 10:37:59,333:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-04-07 10:38:00,263:INFO:Calculating mean and std
2023-04-07 10:38:00,264:INFO:Creating metrics dataframe
2023-04-07 10:38:00,267:INFO:Finalizing model
2023-04-07 10:38:00,727:INFO:Uploading results into container
2023-04-07 10:38:00,728:INFO:Uploading model into container now
2023-04-07 10:38:00,728:INFO:_master_model_container: 16
2023-04-07 10:38:00,728:INFO:_display_container: 4
2023-04-07 10:38:00,735:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 10:38:00,735:INFO:create_model() successfully completed......................................
2023-04-07 10:38:00,843:INFO:SubProcess create_model() end ==================================
2023-04-07 10:38:00,868:INFO:_master_model_container: 16
2023-04-07 10:38:00,869:INFO:_display_container: 4
2023-04-07 10:38:00,874:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-04-07 10:38:00,874:INFO:blend_models() successfully completed......................................
2023-04-07 10:38:01,073:INFO:Initializing save_model()
2023-04-07 10:38:01,074:INFO:save_model(model=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=1.0, class_weight=None,
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=123,
                                                 solver='lbfgs', tol=0.0001,
                                                 verbose=0, warm_start=False)),
                             ('Naive Bayes',
                              GaussianNB(priors=None, var_smoothing=1e-09)),
                             ('Decision Tree Classifier',
                              DecisionTreeClassifier(ccp_alpha=0.0,
                                                     class_weight=None,
                                                     criterion='gini',
                                                     max_depth=None,
                                                     max_features=None,
                                                     max_leaf_nodes=None,
                                                     min_impurity_decrease=0.0,
                                                     min_samples_leaf=1,
                                                     min_samples_split=2,
                                                     min_weight_fraction_leaf=0.0,
                                                     random_state=123,
                                                     splitter='best'))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), model_name=classification, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['embarked', 'class', 'who', 'deck',
                                             'embark_town'],
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-04-07 10:38:01,075:INFO:Adding model into prep_pipe
2023-04-07 10:38:01,108:INFO:classification.pkl saved in current working directory
2023-04-07 10:38:01,178:INFO:Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('catego...
                                              ('Decision Tree Classifier',
                                               DecisionTreeClassifier(ccp_alpha=0.0,
                                                                      class_weight=None,
                                                                      criterion='gini',
                                                                      max_depth=None,
                                                                      max_features=None,
                                                                      max_leaf_nodes=None,
                                                                      min_impurity_decrease=0.0,
                                                                      min_samples_leaf=1,
                                                                      min_samples_split=2,
                                                                      min_weight_fraction_leaf=0.0,
                                                                      random_state=123,
                                                                      splitter='best'))],
                                  flatten_transform=True, n_jobs=-1,
                                  verbose=False, voting='soft',
                                  weights=None))],
         verbose=False)
2023-04-07 10:38:01,178:INFO:save_model() successfully completed......................................
2023-04-07 10:38:16,534:INFO:Initializing load_model()
2023-04-07 10:38:16,534:INFO:load_model(model_name=classification, platform=None, authentication=None, verbose=True)
2023-04-07 10:38:16,641:INFO:Initializing predict_model()
2023-04-07 10:38:16,641:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023EB7670C10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['pclass', 'age', 'sibsp', 'parch',
                                             'fare'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'embarked', 'class', 'who',
                                             'deck', 'embark_town', 'alive'],
                                    transformer=SimpleImputer(strategy='...
                                    transformer=OneHotEncoder(cols=['embarked',
                                                                    'class',
                                                                    'who',
                                                                    'deck',
                                                                    'embark_town'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model',
                 VotingClassifier(estimators=[('Logistic Regression',
                                               LogisticRegression(max_iter=1000,
                                                                  random_state=123)),
                                              ('Naive Bayes', GaussianNB()),
                                              ('Decision Tree Classifier',
                                               DecisionTreeClassifier(random_state=123))],
                                  n_jobs=-1, voting='soft'))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023EB6460CA0>)
2023-04-07 10:38:16,641:INFO:Checking exceptions
2023-04-07 10:38:16,641:INFO:Preloading libraries
2023-04-07 10:38:16,641:INFO:Set up data.
2023-04-07 10:38:16,653:INFO:Set up index.
